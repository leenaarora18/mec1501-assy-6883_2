/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   /home/jayesh/zephyrproject/zephyr/samples/hello_world/build/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   $ZEPHYR_BASE/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /flash@e0000
 *   4   /memory@118000
 *   5   /cpus
 *   6   /cpus/power-states
 *   7   /cpus/power-states/idle
 *   8   /cpus/power-states/suspend_to_ram
 *   9   /cpus/cpu@0
 *   10  /soc
 *   11  /soc/interrupt-controller@e000e100
 *   12  /soc/pin-controller@40081000
 *   13  /soc/pin-controller@40081000/gpio@40081180
 *   14  /leds
 *   15  /leds/led_0
 *   16  /leds/led_1
 *   17  /leds/led_2
 *   18  /soc/pin-controller@40081000/adc04_gpio204
 *   19  /soc/pin-controller@40081000/adc05_gpio205
 *   20  /soc/pin-controller@40081000/adc06_gpio206
 *   21  /soc/pin-controller@40081000/adc07_gpio207
 *   22  /soc/pin-controller@40081000/vref2_adc_gpio067
 *   23  /soc/adc@40007c00
 *   24  /soc/bb-ram@4000a800
 *   25  /soc/bbled@4000b800
 *   26  /soc/bbled@4000b900
 *   27  /soc/bbled@4000ba00
 *   28  /soc/ecs@4000fc00
 *   29  /soc/espi@40008000
 *   30  /soc/pin-controller@40081000/espi_alert_n_gpio063
 *   31  /soc/pin-controller@40081000/espi_clk_gpio065
 *   32  /soc/pin-controller@40081000/espi_cs_n_gpio066
 *   33  /soc/pin-controller@40081000/espi_io0_gpio070
 *   34  /soc/pin-controller@40081000/espi_io1_gpio071
 *   35  /soc/pin-controller@40081000/espi_io2_gpio072
 *   36  /soc/pin-controller@40081000/espi_io3_gpio073
 *   37  /soc/pin-controller@40081000/espi_reset_n_gpio061
 *   38  /soc/espi@400f3400
 *   39  /soc/pin-controller@40081000/gpio@40081000
 *   40  /soc/pin-controller@40081000/i2c00_scl_gpio004
 *   41  /soc/pin-controller@40081000/i2c00_sda_gpio003
 *   42  /soc/i2c@40004000
 *   43  /soc/pin-controller@40081000/i2c07_scl_gpio013
 *   44  /soc/pin-controller@40081000/i2c07_sda_gpio012
 *   45  /soc/i2c@40004800
 *   46  /soc/i2c@40004c00
 *   47  /soc/i2c@40005000
 *   48  /soc/pcr@40080100
 *   49  /soc/pin-controller@40081000/peci_dat_gpio042
 *   50  /soc/pin-controller@40081000/peci_dat_gpio042_sleep
 *   51  /soc/pin-controller@40081000/vref_vtt_gpio044
 *   52  /soc/pin-controller@40081000/vref_vtt_gpio044_sleep
 *   53  /soc/peci@40006400
 *   54  /soc/pin-controller@40081000/ps2_clk0b_gpio007
 *   55  /soc/pin-controller@40081000/ps2_clk0b_gpio007_sleep
 *   56  /soc/pin-controller@40081000/ps2_dat0b_gpio010
 *   57  /soc/pin-controller@40081000/ps2_dat0b_gpio010_sleep
 *   58  /soc/ps2@40009000
 *   59  /soc/pin-controller@40081000/ps2_clk1b_gpio154
 *   60  /soc/pin-controller@40081000/ps2_clk1b_gpio154_sleep
 *   61  /soc/pin-controller@40081000/ps2_dat1b_gpio155
 *   62  /soc/pin-controller@40081000/ps2_dat1b_gpio155_sleep
 *   63  /soc/ps2@40009040
 *   64  /soc/pin-controller@40081000/pwm0_gpio053
 *   65  /soc/pwm@40005800
 *   66  /soc/pwm@40005810
 *   67  /soc/pwm@40005820
 *   68  /soc/pwm@40005830
 *   69  /soc/pwm@40005840
 *   70  /soc/pwm@40005850
 *   71  /soc/pwm@40005860
 *   72  /soc/pwm@40005870
 *   73  /soc/pwm@40005880
 *   74  /soc/pin-controller@40081000/shd_clk_gpio056
 *   75  /soc/pin-controller@40081000/shd_cs0_n_gpio055
 *   76  /soc/pin-controller@40081000/shd_io0_gpio223
 *   77  /soc/pin-controller@40081000/shd_io1_gpio224
 *   78  /soc/spi@40070000
 *   79  /soc/pin-controller@40081000/ict0_tach0_gpio050
 *   80  /soc/tach@40006000
 *   81  /soc/tach@40006010
 *   82  /soc/tach@40006020
 *   83  /soc/tach@40006030
 *   84  /soc/timer@40000c00
 *   85  /soc/timer@40000c20
 *   86  /soc/timer@40000c80
 *   87  /soc/timer@40000ca0
 *   88  /soc/timer@40007400
 *   89  /soc/timer@40009800
 *   90  /soc/timer@40009820
 *   91  /soc/timer@e000e010
 *   92  /soc/uart@400f2400
 *   93  /soc/uart@400f2800
 *   94  /soc/pin-controller@40081000/uart2_rx_gpio145
 *   95  /soc/pin-controller@40081000/uart2_tx_gpio146
 *   96  /soc/uart@400f2c00
 *   97  /soc/watchdog@40000400
 *   98  /soc/ecia@4000e000
 *   99  /soc/ecia@4000e000/girq23@12c
 *   100 /soc/pin-controller@40081000/gpio@40081100
 *   101 /soc/pin-controller@40081000/i2c01_scl_gpio131
 *   102 /soc/pin-controller@40081000/i2c01_sda_gpio130
 *   103 /soc/i2c@40004400
 *   104 /soc/i2c@40004400/pca9555@26
 *   105 /soc/pin-controller@40081000/ksi0_gpio017
 *   106 /soc/pin-controller@40081000/ksi0_gpio017_sleep
 *   107 /soc/pin-controller@40081000/ksi1_gpio020
 *   108 /soc/pin-controller@40081000/ksi1_gpio020_sleep
 *   109 /soc/pin-controller@40081000/ksi2_gpio021
 *   110 /soc/pin-controller@40081000/ksi2_gpio021_sleep
 *   111 /soc/pin-controller@40081000/ksi3_gpio026
 *   112 /soc/pin-controller@40081000/ksi3_gpio026_sleep
 *   113 /soc/pin-controller@40081000/ksi4_gpio027
 *   114 /soc/pin-controller@40081000/ksi4_gpio027_sleep
 *   115 /soc/pin-controller@40081000/ksi5_gpio030
 *   116 /soc/pin-controller@40081000/ksi5_gpio030_sleep
 *   117 /soc/pin-controller@40081000/ksi6_gpio031
 *   118 /soc/pin-controller@40081000/ksi6_gpio031_sleep
 *   119 /soc/pin-controller@40081000/ksi7_gpio032
 *   120 /soc/pin-controller@40081000/ksi7_gpio032_sleep
 *   121 /soc/pin-controller@40081000/kso00_gpio040
 *   122 /soc/pin-controller@40081000/kso00_gpio040_sleep
 *   123 /soc/pin-controller@40081000/kso01_gpio045
 *   124 /soc/pin-controller@40081000/kso01_gpio045_sleep
 *   125 /soc/pin-controller@40081000/kso02_gpio046
 *   126 /soc/pin-controller@40081000/kso02_gpio046_sleep
 *   127 /soc/pin-controller@40081000/kso03_gpio047
 *   128 /soc/pin-controller@40081000/kso03_gpio047_sleep
 *   129 /soc/pin-controller@40081000/kso04_gpio107
 *   130 /soc/pin-controller@40081000/kso04_gpio107_sleep
 *   131 /soc/pin-controller@40081000/kso05_gpio112
 *   132 /soc/pin-controller@40081000/kso05_gpio112_sleep
 *   133 /soc/pin-controller@40081000/kso06_gpio113
 *   134 /soc/pin-controller@40081000/kso06_gpio113_sleep
 *   135 /soc/pin-controller@40081000/kso07_gpio120
 *   136 /soc/pin-controller@40081000/kso07_gpio120_sleep
 *   137 /soc/pin-controller@40081000/kso08_gpio121
 *   138 /soc/pin-controller@40081000/kso08_gpio121_sleep
 *   139 /soc/pin-controller@40081000/kso09_gpio122
 *   140 /soc/pin-controller@40081000/kso09_gpio122_sleep
 *   141 /soc/pin-controller@40081000/kso10_gpio123
 *   142 /soc/pin-controller@40081000/kso10_gpio123_sleep
 *   143 /soc/pin-controller@40081000/kso11_gpio124
 *   144 /soc/pin-controller@40081000/kso11_gpio124_sleep
 *   145 /soc/pin-controller@40081000/kso12_gpio125
 *   146 /soc/pin-controller@40081000/kso12_gpio125_sleep
 *   147 /soc/pin-controller@40081000/kso13_gpio126
 *   148 /soc/pin-controller@40081000/kso13_gpio126_sleep
 *   149 /soc/pin-controller@40081000/kso14_gpio152
 *   150 /soc/pin-controller@40081000/kso14_gpio152_sleep
 *   151 /soc/pin-controller@40081000/kso15_gpio151
 *   152 /soc/pin-controller@40081000/kso15_gpio151_sleep
 *   153 /soc/kbd@40009c00
 *   154 /soc/kbd@40009c00/kscan-input
 *   155 /soc/pin-controller@40081000/gpio@40081080
 *   156 /soc/pin-controller@40081000/gpio@40081200
 *   157 /soc/pin-controller@40081000/gpio@40081280
 *   158 /soc/pin-controller@40081000/kso16_gpio132_sleep
 *   159 /soc/pin-controller@40081000/kso17_gpio140_sleep
 *   160 /soc/pin-controller@40081000/led0_gpio156_sleep
 *   161 /soc/pin-controller@40081000/led1_gpio157_sleep
 *   162 /soc/pin-controller@40081000/led2_gpio153_sleep
 *   163 /soc/pin-controller@40081000/pspi_clk_gpio117_sleep
 *   164 /soc/pin-controller@40081000/pspi_cs_n_gpio116_sleep
 *   165 /soc/pin-controller@40081000/pspi_miso_gpio075_sleep
 *   166 /soc/pin-controller@40081000/pspi_mosi_gpio074_sleep
 *   167 /soc/pin-controller@40081000/pwm0_alt_gpio241_sleep
 *   168 /soc/pin-controller@40081000/pwm0_gpio053_sleep
 *   169 /soc/pin-controller@40081000/pwm1_alt_gpio254_sleep
 *   170 /soc/pin-controller@40081000/pwm1_gpio054_sleep
 *   171 /soc/pin-controller@40081000/pwm2_alt_gpio045_sleep
 *   172 /soc/pin-controller@40081000/pwm2_gpio055_sleep
 *   173 /soc/pin-controller@40081000/pwm3_alt_gpio047_sleep
 *   174 /soc/pin-controller@40081000/pwm3_gpio056_sleep
 *   175 /soc/pin-controller@40081000/pwm4_gpio011_sleep
 *   176 /soc/pin-controller@40081000/pwm5_gpio002_sleep
 *   177 /soc/pin-controller@40081000/pwm6_alt_gpio063_sleep
 *   178 /soc/pin-controller@40081000/pwm6_gpio014_sleep
 *   179 /soc/pin-controller@40081000/pwm7_alt_gpio061_sleep
 *   180 /soc/pin-controller@40081000/pwm7_gpio015_sleep
 *   181 /soc/pin-controller@40081000/pwm8_alt_gpio175_sleep
 *   182 /soc/pin-controller@40081000/pwm8_gpio035_sleep
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/* Used to remove brackets from around a single argument */
#define DT_DEBRACKET_INTERNAL(...) __VA_ARGS__

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"

/* Helpers for dealing with node labels: */
#define DT_N_NODELABEL_NUM 0
#define DT_N_FOREACH_NODELABEL(fn) 
#define DT_N_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_CHILD_NUM 7
#define DT_N_CHILD_NUM_STATUS_OKAY 7
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_flash_e0000) fn(DT_N_S_memory_118000) fn(DT_N_S_leds)
#define DT_N_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_flash_e0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_118000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_flash_e0000, __VA_ARGS__) fn(DT_N_S_memory_118000, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_flash_e0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_118000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_flash_e0000) fn(DT_N_S_memory_118000) fn(DT_N_S_leds)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_flash_e0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_118000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_flash_e0000, __VA_ARGS__) fn(DT_N_S_memory_118000, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_flash_e0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_118000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_ORD 0
#define DT_N_ORD_STR_SORTABLE 00000

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /flash@e0000 */ \
	4, /* /memory@118000 */ \
	5, /* /cpus */ \
	10, /* /soc */ \
	14, /* /leds */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_microchip_mec15xxevb_assy6853 DT_N
#define DT_N_INST_0_microchip_mec1501hsz          DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_IRQ_LEVEL 0
#define DT_N_COMPAT_MATCHES_microchip_mec15xxevb_assy6853 1
#define DT_N_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_0 "mec15xxevb_assy6853"
#define DT_N_COMPAT_MATCHES_microchip_mec1501hsz 1
#define DT_N_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_1 "Microchip Technology Inc."
#define DT_N_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_1 "mec1501hsz"
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"microchip,mec15xxevb_assy6853", "microchip,mec1501hsz"}
#define DT_N_P_compatible_IDX_0 "microchip,mec15xxevb_assy6853"
#define DT_N_P_compatible_IDX_0_STRING_UNQUOTED microchip,mec15xxevb_assy6853
#define DT_N_P_compatible_IDX_0_STRING_TOKEN microchip_mec15xxevb_assy6853
#define DT_N_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_MEC15XXEVB_ASSY6853
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_IDX_1 "microchip,mec1501hsz"
#define DT_N_P_compatible_IDX_1_STRING_UNQUOTED microchip,mec1501hsz
#define DT_N_P_compatible_IDX_1_STRING_TOKEN microchip_mec1501hsz
#define DT_N_P_compatible_IDX_1_STRING_UPPER_TOKEN MICROCHIP_MEC1501HSZ
#define DT_N_P_compatible_IDX_1_EXISTS 1
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0) \
	fn(DT_N, compatible, 1)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N, compatible, 1)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__) \
	fn(DT_N, compatible, 1, __VA_ARGS__)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N, compatible, 1, __VA_ARGS__)
#define DT_N_P_compatible_LEN 2
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_aliases_NODELABEL_NUM 0
#define DT_N_S_aliases_FOREACH_NODELABEL(fn) 
#define DT_N_S_aliases_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_aliases_CHILD_NUM 0
#define DT_N_S_aliases_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1
#define DT_N_S_aliases_ORD_STR_SORTABLE 00001

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_IRQ_LEVEL 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_chosen_NODELABEL_NUM 0
#define DT_N_S_chosen_FOREACH_NODELABEL(fn) 
#define DT_N_S_chosen_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_chosen_CHILD_NUM 0
#define DT_N_S_chosen_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2
#define DT_N_S_chosen_ORD_STR_SORTABLE 00002

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_IRQ_LEVEL 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /flash@e0000
 *
 * Node identifier: DT_N_S_flash_e0000
 */

/* Node's full path: */
#define DT_N_S_flash_e0000_PATH "/flash@e0000"

/* Node's name with unit-address: */
#define DT_N_S_flash_e0000_FULL_NAME "flash@e0000"

/* Node parent (/) identifier: */
#define DT_N_S_flash_e0000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_flash_e0000_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_flash_e0000_NODELABEL_NUM 1
#define DT_N_S_flash_e0000_FOREACH_NODELABEL(fn) fn(flash0)
#define DT_N_S_flash_e0000_FOREACH_NODELABEL_VARGS(fn, ...) fn(flash0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_flash_e0000_CHILD_NUM 0
#define DT_N_S_flash_e0000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_flash_e0000_FOREACH_CHILD(fn) 
#define DT_N_S_flash_e0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_flash_e0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_flash_e0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_flash_e0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_flash_e0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_flash_e0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_flash_e0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_flash_e0000_ORD 3
#define DT_N_S_flash_e0000_ORD_STR_SORTABLE 00003

/* Ordinals for what this node depends on directly: */
#define DT_N_S_flash_e0000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_flash_e0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_flash_e0000_EXISTS 1
#define DT_N_NODELABEL_flash0 DT_N_S_flash_e0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_flash_e0000_REG_NUM 1
#define DT_N_S_flash_e0000_REG_IDX_0_EXISTS 1
#define DT_N_S_flash_e0000_REG_IDX_0_VAL_ADDRESS 917504 /* 0xe0000 */
#define DT_N_S_flash_e0000_REG_IDX_0_VAL_SIZE 229376 /* 0x38000 */
#define DT_N_S_flash_e0000_RANGES_NUM 0
#define DT_N_S_flash_e0000_FOREACH_RANGE(fn) 
#define DT_N_S_flash_e0000_IRQ_NUM 0
#define DT_N_S_flash_e0000_IRQ_LEVEL 0
#define DT_N_S_flash_e0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_flash_e0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_flash_e0000_P_reg {917504 /* 0xe0000 */, 229376 /* 0x38000 */}
#define DT_N_S_flash_e0000_P_reg_IDX_0 917504
#define DT_N_S_flash_e0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_flash_e0000_P_reg_IDX_1 229376
#define DT_N_S_flash_e0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_flash_e0000_P_reg_EXISTS 1

/*
 * Devicetree node: /memory@118000
 *
 * Node identifier: DT_N_S_memory_118000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_118000_PATH "/memory@118000"

/* Node's name with unit-address: */
#define DT_N_S_memory_118000_FULL_NAME "memory@118000"

/* Node parent (/) identifier: */
#define DT_N_S_memory_118000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_memory_118000_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_memory_118000_NODELABEL_NUM 1
#define DT_N_S_memory_118000_FOREACH_NODELABEL(fn) fn(sram0)
#define DT_N_S_memory_118000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_memory_118000_CHILD_NUM 0
#define DT_N_S_memory_118000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_memory_118000_FOREACH_CHILD(fn) 
#define DT_N_S_memory_118000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_memory_118000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_memory_118000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_memory_118000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_memory_118000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_memory_118000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_memory_118000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_memory_118000_ORD 4
#define DT_N_S_memory_118000_ORD_STR_SORTABLE 00004

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_118000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_118000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_118000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_memory_118000
#define DT_N_NODELABEL_sram0  DT_N_S_memory_118000

/* Macros for properties that are special in the specification: */
#define DT_N_S_memory_118000_REG_NUM 1
#define DT_N_S_memory_118000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_118000_REG_IDX_0_VAL_ADDRESS 1146880 /* 0x118000 */
#define DT_N_S_memory_118000_REG_IDX_0_VAL_SIZE 32768 /* 0x8000 */
#define DT_N_S_memory_118000_RANGES_NUM 0
#define DT_N_S_memory_118000_FOREACH_RANGE(fn) 
#define DT_N_S_memory_118000_IRQ_NUM 0
#define DT_N_S_memory_118000_IRQ_LEVEL 0
#define DT_N_S_memory_118000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory_118000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_memory_118000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_memory_118000_P_wakeup_source 0
#define DT_N_S_memory_118000_P_wakeup_source_EXISTS 1
#define DT_N_S_memory_118000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_memory_118000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_memory_118000_P_compatible {"mmio-sram"}
#define DT_N_S_memory_118000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_memory_118000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_memory_118000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_memory_118000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_memory_118000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_118000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_118000, compatible, 0)
#define DT_N_S_memory_118000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory_118000, compatible, 0)
#define DT_N_S_memory_118000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_118000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory_118000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory_118000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory_118000_P_compatible_LEN 1
#define DT_N_S_memory_118000_P_compatible_EXISTS 1
#define DT_N_S_memory_118000_P_reg {1146880 /* 0x118000 */, 32768 /* 0x8000 */}
#define DT_N_S_memory_118000_P_reg_IDX_0 1146880
#define DT_N_S_memory_118000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_118000_P_reg_IDX_1 32768
#define DT_N_S_memory_118000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_118000_P_reg_EXISTS 1
#define DT_N_S_memory_118000_P_zephyr_deferred_init 0
#define DT_N_S_memory_118000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_NODELABEL_NUM 0
#define DT_N_S_cpus_FOREACH_NODELABEL(fn) 
#define DT_N_S_cpus_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_CHILD_NUM 2
#define DT_N_S_cpus_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 5
#define DT_N_S_cpus_ORD_STR_SORTABLE 00005

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	6, /* /cpus/power-states */ \
	9, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_IRQ_LEVEL 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/power-states
 *
 * Node identifier: DT_N_S_cpus_S_power_states
 */

/* Node's full path: */
#define DT_N_S_cpus_S_power_states_PATH "/cpus/power-states"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_power_states_FULL_NAME "power-states"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_power_states_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_power_states_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_power_states_NODELABEL_NUM 0
#define DT_N_S_cpus_S_power_states_FOREACH_NODELABEL(fn) 
#define DT_N_S_cpus_S_power_states_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_power_states_CHILD_NUM 2
#define DT_N_S_cpus_S_power_states_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_power_states_S_idle) fn(DT_N_S_cpus_S_power_states_S_suspend_to_ram)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_idle) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_suspend_to_ram)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_idle, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_suspend_to_ram, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_idle, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_suspend_to_ram, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_power_states_S_idle) fn(DT_N_S_cpus_S_power_states_S_suspend_to_ram)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_idle) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_suspend_to_ram)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_idle, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_suspend_to_ram, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_idle, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_suspend_to_ram, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_power_states_ORD 6
#define DT_N_S_cpus_S_power_states_ORD_STR_SORTABLE 00006

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_power_states_REQUIRES_ORDS \
	5, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_power_states_SUPPORTS_ORDS \
	7, /* /cpus/power-states/idle */ \
	8, /* /cpus/power-states/suspend_to_ram */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_power_states_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_power_states_REG_NUM 0
#define DT_N_S_cpus_S_power_states_RANGES_NUM 0
#define DT_N_S_cpus_S_power_states_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_power_states_IRQ_NUM 0
#define DT_N_S_cpus_S_power_states_IRQ_LEVEL 0
#define DT_N_S_cpus_S_power_states_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_power_states_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/power-states/idle
 *
 * Node identifier: DT_N_S_cpus_S_power_states_S_idle
 *
 * Binding (compatible = zephyr,power-state):
 *   $ZEPHYR_BASE/dts/bindings/power/zephyr,power-state.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_power_states_S_idle_PATH "/cpus/power-states/idle"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_power_states_S_idle_FULL_NAME "idle"

/* Node parent (/cpus/power-states) identifier: */
#define DT_N_S_cpus_S_power_states_S_idle_PARENT DT_N_S_cpus_S_power_states

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_power_states_S_idle_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_power_states_S_idle_NODELABEL_NUM 1
#define DT_N_S_cpus_S_power_states_S_idle_FOREACH_NODELABEL(fn) fn(idle)
#define DT_N_S_cpus_S_power_states_S_idle_FOREACH_NODELABEL_VARGS(fn, ...) fn(idle, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_power_states_S_idle_CHILD_NUM 0
#define DT_N_S_cpus_S_power_states_S_idle_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_power_states_S_idle_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_power_states_S_idle_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_idle_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_idle_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_power_states_S_idle_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_power_states_S_idle_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_idle_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_idle_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_power_states_S_idle_ORD 7
#define DT_N_S_cpus_S_power_states_S_idle_ORD_STR_SORTABLE 00007

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_power_states_S_idle_REQUIRES_ORDS \
	6, /* /cpus/power-states */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_power_states_S_idle_SUPPORTS_ORDS \
	9, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_power_states_S_idle_EXISTS 1
#define DT_N_INST_0_zephyr_power_state DT_N_S_cpus_S_power_states_S_idle
#define DT_N_NODELABEL_idle            DT_N_S_cpus_S_power_states_S_idle

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_power_states_S_idle_REG_NUM 0
#define DT_N_S_cpus_S_power_states_S_idle_RANGES_NUM 0
#define DT_N_S_cpus_S_power_states_S_idle_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_power_states_S_idle_IRQ_NUM 0
#define DT_N_S_cpus_S_power_states_S_idle_IRQ_LEVEL 0
#define DT_N_S_cpus_S_power_states_S_idle_COMPAT_MATCHES_zephyr_power_state 1
#define DT_N_S_cpus_S_power_states_S_idle_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_idle_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_cpus_S_power_states_S_idle_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_idle_COMPAT_MODEL_IDX_0 "power-state"
#define DT_N_S_cpus_S_power_states_S_idle_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_power_states_S_idle_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_power_states_S_idle_P_power_state_name "suspend-to-idle"
#define DT_N_S_cpus_S_power_states_S_idle_P_power_state_name_STRING_UNQUOTED suspend-to-idle
#define DT_N_S_cpus_S_power_states_S_idle_P_power_state_name_STRING_TOKEN suspend_to_idle
#define DT_N_S_cpus_S_power_states_S_idle_P_power_state_name_STRING_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_cpus_S_power_states_S_idle_P_power_state_name_IDX_0 "suspend-to-idle"
#define DT_N_S_cpus_S_power_states_S_idle_P_power_state_name_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_idle_P_power_state_name_ENUM_IDX 2
#define DT_N_S_cpus_S_power_states_S_idle_P_power_state_name_ENUM_VAL_suspend_to_idle_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_idle_P_power_state_name_ENUM_TOKEN suspend_to_idle
#define DT_N_S_cpus_S_power_states_S_idle_P_power_state_name_ENUM_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_cpus_S_power_states_S_idle_P_power_state_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_power_states_S_idle, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_idle_P_power_state_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_idle, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_idle_P_power_state_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_idle, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_idle_P_power_state_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_idle, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_idle_P_power_state_name_LEN 1
#define DT_N_S_cpus_S_power_states_S_idle_P_power_state_name_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_idle_P_min_residency_us 1000000
#define DT_N_S_cpus_S_power_states_S_idle_P_min_residency_us_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_idle_P_zephyr_pm_device_disabled 0
#define DT_N_S_cpus_S_power_states_S_idle_P_zephyr_pm_device_disabled_EXISTS 1

/*
 * Devicetree node: /cpus/power-states/suspend_to_ram
 *
 * Node identifier: DT_N_S_cpus_S_power_states_S_suspend_to_ram
 *
 * Binding (compatible = zephyr,power-state):
 *   $ZEPHYR_BASE/dts/bindings/power/zephyr,power-state.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_PATH "/cpus/power-states/suspend_to_ram"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_FULL_NAME "suspend_to_ram"

/* Node parent (/cpus/power-states) identifier: */
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_PARENT DT_N_S_cpus_S_power_states

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_NODELABEL_NUM 1
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_FOREACH_NODELABEL(fn) fn(suspend_to_ram)
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_FOREACH_NODELABEL_VARGS(fn, ...) fn(suspend_to_ram, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_CHILD_NUM 0
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_ORD 8
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_ORD_STR_SORTABLE 00008

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_REQUIRES_ORDS \
	6, /* /cpus/power-states */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_SUPPORTS_ORDS \
	9, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_EXISTS 1
#define DT_N_INST_1_zephyr_power_state DT_N_S_cpus_S_power_states_S_suspend_to_ram
#define DT_N_NODELABEL_suspend_to_ram  DT_N_S_cpus_S_power_states_S_suspend_to_ram

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_REG_NUM 0
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_RANGES_NUM 0
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_IRQ_NUM 0
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_IRQ_LEVEL 0
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_COMPAT_MATCHES_zephyr_power_state 1
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_COMPAT_MODEL_IDX_0 "power-state"
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_P_power_state_name "suspend-to-ram"
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_P_power_state_name_STRING_UNQUOTED suspend-to-ram
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_P_power_state_name_STRING_TOKEN suspend_to_ram
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_P_power_state_name_STRING_UPPER_TOKEN SUSPEND_TO_RAM
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_P_power_state_name_IDX_0 "suspend-to-ram"
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_P_power_state_name_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_P_power_state_name_ENUM_IDX 4
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_P_power_state_name_ENUM_VAL_suspend_to_ram_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_P_power_state_name_ENUM_TOKEN suspend_to_ram
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_P_power_state_name_ENUM_UPPER_TOKEN SUSPEND_TO_RAM
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_P_power_state_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_power_states_S_suspend_to_ram, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_P_power_state_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_suspend_to_ram, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_P_power_state_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_suspend_to_ram, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_P_power_state_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_suspend_to_ram, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_P_power_state_name_LEN 1
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_P_power_state_name_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_P_min_residency_us 2000000
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_P_min_residency_us_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_P_zephyr_pm_device_disabled 0
#define DT_N_S_cpus_S_power_states_S_suspend_to_ram_P_zephyr_pm_device_disabled_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m4):
 *   $ZEPHYR_BASE/dts/bindings/cpu/arm,cortex-m4.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_cpu_0_NODELABEL_NUM 1
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL(fn) fn(cpu0)
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(cpu0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM 0
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 9
#define DT_N_S_cpus_S_cpu_0_ORD_STR_SORTABLE 00009

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	5, /* /cpus */ \
	7, /* /cpus/power-states/idle */ \
	8, /* /cpus/power-states/suspend_to_ram */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m4 DT_N_S_cpus_S_cpu_0
#define DT_N_NODELABEL_cpu0       DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_IRQ_LEVEL 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m4 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0 "cortex-m4"
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m4"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m4"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UNQUOTED arm,cortex-m4
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_TOKEN arm_cortex_m4
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CORTEX_M4
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0 DT_N_S_cpus_S_power_states_S_idle
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0_PH DT_N_S_cpus_S_power_states_S_idle
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1 DT_N_S_cpus_S_power_states_S_suspend_to_ram
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1_PH DT_N_S_cpus_S_power_states_S_suspend_to_ram
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0) \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0, __VA_ARGS__) \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_LEN 2
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_NODELABEL_NUM 0
#define DT_N_S_soc_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_CHILD_NUM 47
#define DT_N_S_soc_CHILD_NUM_STATUS_OKAY 24
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_ecs_4000fc00) fn(DT_N_S_soc_S_pcr_40080100) fn(DT_N_S_soc_S_ecia_4000e000) fn(DT_N_S_soc_S_pin_controller_40081000) fn(DT_N_S_soc_S_timer_40007400) fn(DT_N_S_soc_S_bb_ram_4000a800) fn(DT_N_S_soc_S_watchdog_40000400) fn(DT_N_S_soc_S_uart_400f2400) fn(DT_N_S_soc_S_uart_400f2800) fn(DT_N_S_soc_S_uart_400f2c00) fn(DT_N_S_soc_S_i2c_40004000) fn(DT_N_S_soc_S_i2c_40004400) fn(DT_N_S_soc_S_i2c_40004800) fn(DT_N_S_soc_S_i2c_40004c00) fn(DT_N_S_soc_S_i2c_40005000) fn(DT_N_S_soc_S_espi_400f3400) fn(DT_N_S_soc_S_espi_40008000) fn(DT_N_S_soc_S_timer_40000c00) fn(DT_N_S_soc_S_timer_40000c20) fn(DT_N_S_soc_S_timer_40000c80) fn(DT_N_S_soc_S_timer_40000ca0) fn(DT_N_S_soc_S_timer_40009800) fn(DT_N_S_soc_S_timer_40009820) fn(DT_N_S_soc_S_ps2_40009000) fn(DT_N_S_soc_S_ps2_40009040) fn(DT_N_S_soc_S_pwm_40005800) fn(DT_N_S_soc_S_pwm_40005810) fn(DT_N_S_soc_S_pwm_40005820) fn(DT_N_S_soc_S_pwm_40005830) fn(DT_N_S_soc_S_pwm_40005840) fn(DT_N_S_soc_S_pwm_40005850) fn(DT_N_S_soc_S_pwm_40005860) fn(DT_N_S_soc_S_pwm_40005870) fn(DT_N_S_soc_S_pwm_40005880) fn(DT_N_S_soc_S_adc_40007c00) fn(DT_N_S_soc_S_kbd_40009c00) fn(DT_N_S_soc_S_peci_40006400) fn(DT_N_S_soc_S_spi_40070000) fn(DT_N_S_soc_S_tach_40006000) fn(DT_N_S_soc_S_tach_40006010) fn(DT_N_S_soc_S_tach_40006020) fn(DT_N_S_soc_S_tach_40006030) fn(DT_N_S_soc_S_bbled_4000b800) fn(DT_N_S_soc_S_bbled_4000b900) fn(DT_N_S_soc_S_bbled_4000ba00)
#define DT_N_S_soc_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ecs_4000fc00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pcr_40080100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ecia_4000e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40007400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_bb_ram_4000a800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40000400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_400f2400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_400f2800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_400f2c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40004000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40004400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40004800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40004c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_espi_400f3400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_espi_40008000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40000c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40000c20) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40000c80) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40000ca0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40009800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40009820) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ps2_40009000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ps2_40009040) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40005800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40005810) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40005820) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40005830) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40005840) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40005850) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40005860) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40005870) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40005880) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_40007c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_kbd_40009c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_peci_40006400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40070000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tach_40006000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tach_40006010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tach_40006020) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tach_40006030) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_bbled_4000b800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_bbled_4000b900) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_bbled_4000ba00)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_ecs_4000fc00, __VA_ARGS__) fn(DT_N_S_soc_S_pcr_40080100, __VA_ARGS__) fn(DT_N_S_soc_S_ecia_4000e000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40007400, __VA_ARGS__) fn(DT_N_S_soc_S_bb_ram_4000a800, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40000400, __VA_ARGS__) fn(DT_N_S_soc_S_uart_400f2400, __VA_ARGS__) fn(DT_N_S_soc_S_uart_400f2800, __VA_ARGS__) fn(DT_N_S_soc_S_uart_400f2c00, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40004000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40004400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40004800, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40004c00, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005000, __VA_ARGS__) fn(DT_N_S_soc_S_espi_400f3400, __VA_ARGS__) fn(DT_N_S_soc_S_espi_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40000c00, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40000c20, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40000c80, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40000ca0, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40009800, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40009820, __VA_ARGS__) fn(DT_N_S_soc_S_ps2_40009000, __VA_ARGS__) fn(DT_N_S_soc_S_ps2_40009040, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40005800, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40005810, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40005820, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40005830, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40005840, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40005850, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40005860, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40005870, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40005880, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40007c00, __VA_ARGS__) fn(DT_N_S_soc_S_kbd_40009c00, __VA_ARGS__) fn(DT_N_S_soc_S_peci_40006400, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40070000, __VA_ARGS__) fn(DT_N_S_soc_S_tach_40006000, __VA_ARGS__) fn(DT_N_S_soc_S_tach_40006010, __VA_ARGS__) fn(DT_N_S_soc_S_tach_40006020, __VA_ARGS__) fn(DT_N_S_soc_S_tach_40006030, __VA_ARGS__) fn(DT_N_S_soc_S_bbled_4000b800, __VA_ARGS__) fn(DT_N_S_soc_S_bbled_4000b900, __VA_ARGS__) fn(DT_N_S_soc_S_bbled_4000ba00, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ecs_4000fc00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pcr_40080100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ecia_4000e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40007400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_bb_ram_4000a800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40000400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_400f2400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_400f2800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_400f2c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40004000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40004400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40004800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40004c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_espi_400f3400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_espi_40008000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40000c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40000c20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40000c80, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40000ca0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40009800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40009820, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ps2_40009000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ps2_40009040, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40005800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40005810, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40005820, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40005830, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40005840, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40005850, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40005860, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40005870, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40005880, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_40007c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_kbd_40009c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_peci_40006400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40070000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tach_40006000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tach_40006010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tach_40006020, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tach_40006030, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_bbled_4000b800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_bbled_4000b900, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_bbled_4000ba00, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_ecs_4000fc00) fn(DT_N_S_soc_S_pcr_40080100) fn(DT_N_S_soc_S_ecia_4000e000) fn(DT_N_S_soc_S_pin_controller_40081000) fn(DT_N_S_soc_S_timer_40007400) fn(DT_N_S_soc_S_bb_ram_4000a800) fn(DT_N_S_soc_S_watchdog_40000400) fn(DT_N_S_soc_S_uart_400f2c00) fn(DT_N_S_soc_S_i2c_40004000) fn(DT_N_S_soc_S_i2c_40004400) fn(DT_N_S_soc_S_i2c_40004800) fn(DT_N_S_soc_S_espi_400f3400) fn(DT_N_S_soc_S_timer_40000ca0) fn(DT_N_S_soc_S_timer_40009800) fn(DT_N_S_soc_S_timer_40009820) fn(DT_N_S_soc_S_ps2_40009000) fn(DT_N_S_soc_S_ps2_40009040) fn(DT_N_S_soc_S_pwm_40005800) fn(DT_N_S_soc_S_adc_40007c00) fn(DT_N_S_soc_S_kbd_40009c00) fn(DT_N_S_soc_S_peci_40006400) fn(DT_N_S_soc_S_spi_40070000) fn(DT_N_S_soc_S_tach_40006000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ecs_4000fc00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pcr_40080100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ecia_4000e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40007400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_bb_ram_4000a800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40000400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_400f2c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40004000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40004400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40004800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_espi_400f3400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40000ca0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40009800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40009820) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ps2_40009000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ps2_40009040) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40005800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_40007c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_kbd_40009c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_peci_40006400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40070000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tach_40006000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_ecs_4000fc00, __VA_ARGS__) fn(DT_N_S_soc_S_pcr_40080100, __VA_ARGS__) fn(DT_N_S_soc_S_ecia_4000e000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40007400, __VA_ARGS__) fn(DT_N_S_soc_S_bb_ram_4000a800, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40000400, __VA_ARGS__) fn(DT_N_S_soc_S_uart_400f2c00, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40004000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40004400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40004800, __VA_ARGS__) fn(DT_N_S_soc_S_espi_400f3400, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40000ca0, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40009800, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40009820, __VA_ARGS__) fn(DT_N_S_soc_S_ps2_40009000, __VA_ARGS__) fn(DT_N_S_soc_S_ps2_40009040, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40005800, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40007c00, __VA_ARGS__) fn(DT_N_S_soc_S_kbd_40009c00, __VA_ARGS__) fn(DT_N_S_soc_S_peci_40006400, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40070000, __VA_ARGS__) fn(DT_N_S_soc_S_tach_40006000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ecs_4000fc00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pcr_40080100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ecia_4000e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40007400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_bb_ram_4000a800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40000400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_400f2c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40004000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40004400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40004800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_espi_400f3400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40000ca0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40009800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40009820, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ps2_40009000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ps2_40009040, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40005800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_40007c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_kbd_40009c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_peci_40006400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40070000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_tach_40006000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 10
#define DT_N_S_soc_ORD_STR_SORTABLE 00010

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/pin-controller@40081000 */ \
	23, /* /soc/adc@40007c00 */ \
	24, /* /soc/bb-ram@4000a800 */ \
	25, /* /soc/bbled@4000b800 */ \
	26, /* /soc/bbled@4000b900 */ \
	27, /* /soc/bbled@4000ba00 */ \
	28, /* /soc/ecs@4000fc00 */ \
	29, /* /soc/espi@40008000 */ \
	38, /* /soc/espi@400f3400 */ \
	42, /* /soc/i2c@40004000 */ \
	45, /* /soc/i2c@40004800 */ \
	46, /* /soc/i2c@40004c00 */ \
	47, /* /soc/i2c@40005000 */ \
	48, /* /soc/pcr@40080100 */ \
	53, /* /soc/peci@40006400 */ \
	58, /* /soc/ps2@40009000 */ \
	63, /* /soc/ps2@40009040 */ \
	65, /* /soc/pwm@40005800 */ \
	66, /* /soc/pwm@40005810 */ \
	67, /* /soc/pwm@40005820 */ \
	68, /* /soc/pwm@40005830 */ \
	69, /* /soc/pwm@40005840 */ \
	70, /* /soc/pwm@40005850 */ \
	71, /* /soc/pwm@40005860 */ \
	72, /* /soc/pwm@40005870 */ \
	73, /* /soc/pwm@40005880 */ \
	78, /* /soc/spi@40070000 */ \
	80, /* /soc/tach@40006000 */ \
	81, /* /soc/tach@40006010 */ \
	82, /* /soc/tach@40006020 */ \
	83, /* /soc/tach@40006030 */ \
	84, /* /soc/timer@40000c00 */ \
	85, /* /soc/timer@40000c20 */ \
	86, /* /soc/timer@40000c80 */ \
	87, /* /soc/timer@40000ca0 */ \
	88, /* /soc/timer@40007400 */ \
	89, /* /soc/timer@40009800 */ \
	90, /* /soc/timer@40009820 */ \
	91, /* /soc/timer@e000e010 */ \
	92, /* /soc/uart@400f2400 */ \
	93, /* /soc/uart@400f2800 */ \
	96, /* /soc/uart@400f2c00 */ \
	97, /* /soc/watchdog@40000400 */ \
	98, /* /soc/ecia@4000e000 */ \
	103, /* /soc/i2c@40004400 */ \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_simple_bus DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_IRQ_LEVEL 0
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UNQUOTED simple-bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_TOKEN simple_bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 1
#define DT_N_S_soc_P_compatible_EXISTS 1
#define DT_N_S_soc_P_ranges_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v7m-nvic):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/arm,v7m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_NODELABEL_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_NODELABEL(fn) fn(nvic)
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_NODELABEL_VARGS(fn, ...) fn(nvic, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 11
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD_STR_SORTABLE 00011

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	10, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	13, /* /soc/pin-controller@40081000/gpio@40081180 */ \
	23, /* /soc/adc@40007c00 */ \
	25, /* /soc/bbled@4000b800 */ \
	26, /* /soc/bbled@4000b900 */ \
	27, /* /soc/bbled@4000ba00 */ \
	38, /* /soc/espi@400f3400 */ \
	39, /* /soc/pin-controller@40081000/gpio@40081000 */ \
	42, /* /soc/i2c@40004000 */ \
	45, /* /soc/i2c@40004800 */ \
	46, /* /soc/i2c@40004c00 */ \
	47, /* /soc/i2c@40005000 */ \
	53, /* /soc/peci@40006400 */ \
	58, /* /soc/ps2@40009000 */ \
	63, /* /soc/ps2@40009040 */ \
	78, /* /soc/spi@40070000 */ \
	80, /* /soc/tach@40006000 */ \
	81, /* /soc/tach@40006010 */ \
	82, /* /soc/tach@40006020 */ \
	83, /* /soc/tach@40006030 */ \
	84, /* /soc/timer@40000c00 */ \
	85, /* /soc/timer@40000c20 */ \
	86, /* /soc/timer@40000c80 */ \
	87, /* /soc/timer@40000ca0 */ \
	88, /* /soc/timer@40007400 */ \
	89, /* /soc/timer@40009800 */ \
	90, /* /soc/timer@40009820 */ \
	92, /* /soc/uart@400f2400 */ \
	93, /* /soc/uart@400f2800 */ \
	96, /* /soc/uart@400f2c00 */ \
	97, /* /soc/watchdog@40000400 */ \
	99, /* /soc/ecia@4000e000/girq23@12c */ \
	100, /* /soc/pin-controller@40081000/gpio@40081100 */ \
	103, /* /soc/i2c@40004400 */ \
	153, /* /soc/kbd@40009c00 */ \
	155, /* /soc/pin-controller@40081000/gpio@40081080 */ \
	156, /* /soc/pin-controller@40081000/gpio@40081200 */ \
	157, /* /soc/pin-controller@40081000/gpio@40081280 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v7m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_LEVEL 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v7m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0 "v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v7m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UNQUOTED arm,v7m-nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_TOKEN arm_v7m_nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_V7M_NVIC
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 3
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000
 *
 * Binding (compatible = microchip,xec-pinctrl):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/microchip,xec-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_PATH "/soc/pin-controller@40081000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_FULL_NAME "pin-controller@40081000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_FOREACH_NODELABEL(fn) fn(pinctrl)
#define DT_N_S_soc_S_pin_controller_40081000_FOREACH_NODELABEL_VARGS(fn, ...) fn(pinctrl, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_CHILD_NUM 118
#define DT_N_S_soc_S_pin_controller_40081000_CHILD_NUM_STATUS_OKAY 118
#define DT_N_S_soc_S_pin_controller_40081000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012) fn(DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012) fn(DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_ORD 12
#define DT_N_S_soc_S_pin_controller_40081000_ORD_STR_SORTABLE 00012

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_REQUIRES_ORDS \
	10, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_SUPPORTS_ORDS \
	13, /* /soc/pin-controller@40081000/gpio@40081180 */ \
	18, /* /soc/pin-controller@40081000/adc04_gpio204 */ \
	19, /* /soc/pin-controller@40081000/adc05_gpio205 */ \
	20, /* /soc/pin-controller@40081000/adc06_gpio206 */ \
	21, /* /soc/pin-controller@40081000/adc07_gpio207 */ \
	22, /* /soc/pin-controller@40081000/vref2_adc_gpio067 */ \
	30, /* /soc/pin-controller@40081000/espi_alert_n_gpio063 */ \
	31, /* /soc/pin-controller@40081000/espi_clk_gpio065 */ \
	32, /* /soc/pin-controller@40081000/espi_cs_n_gpio066 */ \
	33, /* /soc/pin-controller@40081000/espi_io0_gpio070 */ \
	34, /* /soc/pin-controller@40081000/espi_io1_gpio071 */ \
	35, /* /soc/pin-controller@40081000/espi_io2_gpio072 */ \
	36, /* /soc/pin-controller@40081000/espi_io3_gpio073 */ \
	37, /* /soc/pin-controller@40081000/espi_reset_n_gpio061 */ \
	39, /* /soc/pin-controller@40081000/gpio@40081000 */ \
	40, /* /soc/pin-controller@40081000/i2c00_scl_gpio004 */ \
	41, /* /soc/pin-controller@40081000/i2c00_sda_gpio003 */ \
	43, /* /soc/pin-controller@40081000/i2c07_scl_gpio013 */ \
	44, /* /soc/pin-controller@40081000/i2c07_sda_gpio012 */ \
	49, /* /soc/pin-controller@40081000/peci_dat_gpio042 */ \
	50, /* /soc/pin-controller@40081000/peci_dat_gpio042_sleep */ \
	51, /* /soc/pin-controller@40081000/vref_vtt_gpio044 */ \
	52, /* /soc/pin-controller@40081000/vref_vtt_gpio044_sleep */ \
	54, /* /soc/pin-controller@40081000/ps2_clk0b_gpio007 */ \
	55, /* /soc/pin-controller@40081000/ps2_clk0b_gpio007_sleep */ \
	56, /* /soc/pin-controller@40081000/ps2_dat0b_gpio010 */ \
	57, /* /soc/pin-controller@40081000/ps2_dat0b_gpio010_sleep */ \
	59, /* /soc/pin-controller@40081000/ps2_clk1b_gpio154 */ \
	60, /* /soc/pin-controller@40081000/ps2_clk1b_gpio154_sleep */ \
	61, /* /soc/pin-controller@40081000/ps2_dat1b_gpio155 */ \
	62, /* /soc/pin-controller@40081000/ps2_dat1b_gpio155_sleep */ \
	64, /* /soc/pin-controller@40081000/pwm0_gpio053 */ \
	74, /* /soc/pin-controller@40081000/shd_clk_gpio056 */ \
	75, /* /soc/pin-controller@40081000/shd_cs0_n_gpio055 */ \
	76, /* /soc/pin-controller@40081000/shd_io0_gpio223 */ \
	77, /* /soc/pin-controller@40081000/shd_io1_gpio224 */ \
	79, /* /soc/pin-controller@40081000/ict0_tach0_gpio050 */ \
	94, /* /soc/pin-controller@40081000/uart2_rx_gpio145 */ \
	95, /* /soc/pin-controller@40081000/uart2_tx_gpio146 */ \
	100, /* /soc/pin-controller@40081000/gpio@40081100 */ \
	101, /* /soc/pin-controller@40081000/i2c01_scl_gpio131 */ \
	102, /* /soc/pin-controller@40081000/i2c01_sda_gpio130 */ \
	105, /* /soc/pin-controller@40081000/ksi0_gpio017 */ \
	106, /* /soc/pin-controller@40081000/ksi0_gpio017_sleep */ \
	107, /* /soc/pin-controller@40081000/ksi1_gpio020 */ \
	108, /* /soc/pin-controller@40081000/ksi1_gpio020_sleep */ \
	109, /* /soc/pin-controller@40081000/ksi2_gpio021 */ \
	110, /* /soc/pin-controller@40081000/ksi2_gpio021_sleep */ \
	111, /* /soc/pin-controller@40081000/ksi3_gpio026 */ \
	112, /* /soc/pin-controller@40081000/ksi3_gpio026_sleep */ \
	113, /* /soc/pin-controller@40081000/ksi4_gpio027 */ \
	114, /* /soc/pin-controller@40081000/ksi4_gpio027_sleep */ \
	115, /* /soc/pin-controller@40081000/ksi5_gpio030 */ \
	116, /* /soc/pin-controller@40081000/ksi5_gpio030_sleep */ \
	117, /* /soc/pin-controller@40081000/ksi6_gpio031 */ \
	118, /* /soc/pin-controller@40081000/ksi6_gpio031_sleep */ \
	119, /* /soc/pin-controller@40081000/ksi7_gpio032 */ \
	120, /* /soc/pin-controller@40081000/ksi7_gpio032_sleep */ \
	121, /* /soc/pin-controller@40081000/kso00_gpio040 */ \
	122, /* /soc/pin-controller@40081000/kso00_gpio040_sleep */ \
	123, /* /soc/pin-controller@40081000/kso01_gpio045 */ \
	124, /* /soc/pin-controller@40081000/kso01_gpio045_sleep */ \
	125, /* /soc/pin-controller@40081000/kso02_gpio046 */ \
	126, /* /soc/pin-controller@40081000/kso02_gpio046_sleep */ \
	127, /* /soc/pin-controller@40081000/kso03_gpio047 */ \
	128, /* /soc/pin-controller@40081000/kso03_gpio047_sleep */ \
	129, /* /soc/pin-controller@40081000/kso04_gpio107 */ \
	130, /* /soc/pin-controller@40081000/kso04_gpio107_sleep */ \
	131, /* /soc/pin-controller@40081000/kso05_gpio112 */ \
	132, /* /soc/pin-controller@40081000/kso05_gpio112_sleep */ \
	133, /* /soc/pin-controller@40081000/kso06_gpio113 */ \
	134, /* /soc/pin-controller@40081000/kso06_gpio113_sleep */ \
	135, /* /soc/pin-controller@40081000/kso07_gpio120 */ \
	136, /* /soc/pin-controller@40081000/kso07_gpio120_sleep */ \
	137, /* /soc/pin-controller@40081000/kso08_gpio121 */ \
	138, /* /soc/pin-controller@40081000/kso08_gpio121_sleep */ \
	139, /* /soc/pin-controller@40081000/kso09_gpio122 */ \
	140, /* /soc/pin-controller@40081000/kso09_gpio122_sleep */ \
	141, /* /soc/pin-controller@40081000/kso10_gpio123 */ \
	142, /* /soc/pin-controller@40081000/kso10_gpio123_sleep */ \
	143, /* /soc/pin-controller@40081000/kso11_gpio124 */ \
	144, /* /soc/pin-controller@40081000/kso11_gpio124_sleep */ \
	145, /* /soc/pin-controller@40081000/kso12_gpio125 */ \
	146, /* /soc/pin-controller@40081000/kso12_gpio125_sleep */ \
	147, /* /soc/pin-controller@40081000/kso13_gpio126 */ \
	148, /* /soc/pin-controller@40081000/kso13_gpio126_sleep */ \
	149, /* /soc/pin-controller@40081000/kso14_gpio152 */ \
	150, /* /soc/pin-controller@40081000/kso14_gpio152_sleep */ \
	151, /* /soc/pin-controller@40081000/kso15_gpio151 */ \
	152, /* /soc/pin-controller@40081000/kso15_gpio151_sleep */ \
	155, /* /soc/pin-controller@40081000/gpio@40081080 */ \
	156, /* /soc/pin-controller@40081000/gpio@40081200 */ \
	157, /* /soc/pin-controller@40081000/gpio@40081280 */ \
	158, /* /soc/pin-controller@40081000/kso16_gpio132_sleep */ \
	159, /* /soc/pin-controller@40081000/kso17_gpio140_sleep */ \
	160, /* /soc/pin-controller@40081000/led0_gpio156_sleep */ \
	161, /* /soc/pin-controller@40081000/led1_gpio157_sleep */ \
	162, /* /soc/pin-controller@40081000/led2_gpio153_sleep */ \
	163, /* /soc/pin-controller@40081000/pspi_clk_gpio117_sleep */ \
	164, /* /soc/pin-controller@40081000/pspi_cs_n_gpio116_sleep */ \
	165, /* /soc/pin-controller@40081000/pspi_miso_gpio075_sleep */ \
	166, /* /soc/pin-controller@40081000/pspi_mosi_gpio074_sleep */ \
	167, /* /soc/pin-controller@40081000/pwm0_alt_gpio241_sleep */ \
	168, /* /soc/pin-controller@40081000/pwm0_gpio053_sleep */ \
	169, /* /soc/pin-controller@40081000/pwm1_alt_gpio254_sleep */ \
	170, /* /soc/pin-controller@40081000/pwm1_gpio054_sleep */ \
	171, /* /soc/pin-controller@40081000/pwm2_alt_gpio045_sleep */ \
	172, /* /soc/pin-controller@40081000/pwm2_gpio055_sleep */ \
	173, /* /soc/pin-controller@40081000/pwm3_alt_gpio047_sleep */ \
	174, /* /soc/pin-controller@40081000/pwm3_gpio056_sleep */ \
	175, /* /soc/pin-controller@40081000/pwm4_gpio011_sleep */ \
	176, /* /soc/pin-controller@40081000/pwm5_gpio002_sleep */ \
	177, /* /soc/pin-controller@40081000/pwm6_alt_gpio063_sleep */ \
	178, /* /soc/pin-controller@40081000/pwm6_gpio014_sleep */ \
	179, /* /soc/pin-controller@40081000/pwm7_alt_gpio061_sleep */ \
	180, /* /soc/pin-controller@40081000/pwm7_gpio015_sleep */ \
	181, /* /soc/pin-controller@40081000/pwm8_alt_gpio175_sleep */ \
	182, /* /soc/pin-controller@40081000/pwm8_gpio035_sleep */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_EXISTS 1
#define DT_N_INST_0_microchip_xec_pinctrl DT_N_S_soc_S_pin_controller_40081000
#define DT_N_NODELABEL_pinctrl            DT_N_S_soc_S_pin_controller_40081000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_REG_IDX_0_VAL_ADDRESS 1074270208 /* 0x40081000 */
#define DT_N_S_soc_S_pin_controller_40081000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pin_controller_40081000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_COMPAT_MATCHES_microchip_xec_pinctrl 1
#define DT_N_S_soc_S_pin_controller_40081000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_pin_controller_40081000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_COMPAT_MODEL_IDX_0 "xec-pinctrl"
#define DT_N_S_soc_S_pin_controller_40081000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40081000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_40081000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_P_compatible {"microchip,xec-pinctrl"}
#define DT_N_S_soc_S_pin_controller_40081000_P_compatible_IDX_0 "microchip,xec-pinctrl"
#define DT_N_S_soc_S_pin_controller_40081000_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-pinctrl
#define DT_N_S_soc_S_pin_controller_40081000_P_compatible_IDX_0_STRING_TOKEN microchip_xec_pinctrl
#define DT_N_S_soc_S_pin_controller_40081000_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_PINCTRL
#define DT_N_S_soc_S_pin_controller_40081000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40081000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40081000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_P_reg {1074270208 /* 0x40081000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pin_controller_40081000_P_reg_IDX_0 1074270208
#define DT_N_S_soc_S_pin_controller_40081000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pin_controller_40081000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_40081000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/gpio@40081180
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180
 *
 * Binding (compatible = microchip,xec-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/microchip,xec-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_PATH "/soc/pin-controller@40081000/gpio@40081180"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_FULL_NAME "gpio@40081180"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_FOREACH_NODELABEL(fn) fn(gpio_140_176)
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpio_140_176, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_ORD 13
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_ORD_STR_SORTABLE 00013

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_SUPPORTS_ORDS \
	14, /* /leds */ \
	15, /* /leds/led_0 */ \
	16, /* /leds/led_1 */ \
	17, /* /leds/led_2 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_EXISTS 1
#define DT_N_INST_3_microchip_xec_gpio DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180
#define DT_N_NODELABEL_gpio_140_176    DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_REG_NUM 4
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_REG_IDX_0_VAL_ADDRESS 1074270592 /* 0x40081180 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_REG_IDX_0_VAL_SIZE 128 /* 0x80 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_REG_IDX_1_VAL_ADDRESS 1074270988 /* 0x4008130c */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_REG_IDX_1_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_REG_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_REG_IDX_2_VAL_ADDRESS 1074271116 /* 0x4008138c */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_REG_IDX_2_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_REG_IDX_3_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_REG_IDX_3_VAL_ADDRESS 1074271216 /* 0x400813f0 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_REG_IDX_3_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_IRQ_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_IRQ_IDX_0_VAL_irq 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_IRQ_IDX_0_VAL_priority 2
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_IRQ_LEVEL 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_COMPAT_MATCHES_microchip_xec_gpio 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_COMPAT_MODEL_IDX_0 "xec-gpio"
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_compatible {"microchip,xec-gpio"}
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_compatible_IDX_0 "microchip,xec-gpio"
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-gpio
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_compatible_IDX_0_STRING_TOKEN microchip_xec_gpio
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_GPIO
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_reg {1074270592 /* 0x40081180 */, 128 /* 0x80 */, 1074270988 /* 0x4008130c */, 4 /* 0x4 */, 1074271116 /* 0x4008138c */, 4 /* 0x4 */, 1074271216 /* 0x400813f0 */, 4 /* 0x4 */}
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_reg_IDX_0 1074270592
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_reg_IDX_1 128
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_reg_IDX_2 1074270988
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_reg_IDX_3 4
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_reg_IDX_4 1074271116
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_reg_IDX_4_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_reg_IDX_5 4
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_reg_IDX_5_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_reg_IDX_6 1074271216
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_reg_IDX_6_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_reg_IDX_7 4
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_reg_IDX_7_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_interrupts {0 /* 0x0 */, 2 /* 0x2 */}
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_interrupts_IDX_1 2
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_port_id 3
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_port_id_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_girq_id 8
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180_P_girq_id_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/led/gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_NODELABEL_NUM 0
#define DT_N_S_leds_FOREACH_NODELABEL(fn) 
#define DT_N_S_leds_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_CHILD_NUM 3
#define DT_N_S_leds_CHILD_NUM_STATUS_OKAY 3
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2)
#define DT_N_S_leds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_leds_S_led_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_2)
#define DT_N_S_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_2, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_leds_S_led_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_2)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_2, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 14
#define DT_N_S_leds_ORD_STR_SORTABLE 00014

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */ \
	13, /* /soc/pin-controller@40081000/gpio@40081180 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	15, /* /leds/led_0 */ \
	16, /* /leds/led_1 */ \
	17, /* /leds/led_2 */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_RANGES_NUM 0
#define DT_N_S_leds_FOREACH_RANGE(fn) 
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_IRQ_LEVEL 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_P_compatible {"gpio-leds"}
#define DT_N_S_leds_P_compatible_IDX_0 "gpio-leds"
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UNQUOTED gpio-leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_TOKEN gpio_leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_LEDS
#define DT_N_S_leds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_LEN 1
#define DT_N_S_leds_P_compatible_EXISTS 1

/*
 * Devicetree node: /leds/led_0
 *
 * Node identifier: DT_N_S_leds_S_led_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_0_PATH "/leds/led_0"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_0_FULL_NAME "led_0"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_0_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_0_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_0_FOREACH_NODELABEL(fn) fn(led2)
#define DT_N_S_leds_S_led_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(led2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_0_CHILD_NUM 0
#define DT_N_S_leds_S_led_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_0_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_0_ORD 15
#define DT_N_S_leds_S_led_0_ORD_STR_SORTABLE 00015

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_0_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40081000/gpio@40081180 */ \
	14, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_0_EXISTS 1
#define DT_N_ALIAS_led0     DT_N_S_leds_S_led_0
#define DT_N_NODELABEL_led2 DT_N_S_leds_S_led_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_0_REG_NUM 0
#define DT_N_S_leds_S_led_0_RANGES_NUM 0
#define DT_N_S_leds_S_led_0_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_0_IRQ_NUM 0
#define DT_N_S_leds_S_led_0_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin 14
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_0, gpios, 0)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_0, gpios, 0)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_gpios_LEN 1
#define DT_N_S_leds_S_led_0_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_0_P_label "LED 2"
#define DT_N_S_leds_S_led_0_P_label_STRING_UNQUOTED LED 2
#define DT_N_S_leds_S_led_0_P_label_STRING_TOKEN LED_2
#define DT_N_S_leds_S_led_0_P_label_STRING_UPPER_TOKEN LED_2
#define DT_N_S_leds_S_led_0_P_label_IDX_0 "LED 2"
#define DT_N_S_leds_S_led_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_0, label, 0)
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_0, label, 0)
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_label_LEN 1
#define DT_N_S_leds_S_led_0_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_1
 *
 * Node identifier: DT_N_S_leds_S_led_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_1_PATH "/leds/led_1"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_1_FULL_NAME "led_1"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_1_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_1_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_1_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_1_FOREACH_NODELABEL(fn) fn(led3)
#define DT_N_S_leds_S_led_1_FOREACH_NODELABEL_VARGS(fn, ...) fn(led3, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_1_CHILD_NUM 0
#define DT_N_S_leds_S_led_1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_1_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_1_ORD 16
#define DT_N_S_leds_S_led_1_ORD_STR_SORTABLE 00016

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_1_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40081000/gpio@40081180 */ \
	14, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_1_EXISTS 1
#define DT_N_ALIAS_led1     DT_N_S_leds_S_led_1
#define DT_N_NODELABEL_led3 DT_N_S_leds_S_led_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_1_REG_NUM 0
#define DT_N_S_leds_S_led_1_RANGES_NUM 0
#define DT_N_S_leds_S_led_1_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_1_IRQ_NUM 0
#define DT_N_S_leds_S_led_1_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin 15
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, gpios, 0)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_1, gpios, 0)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_gpios_LEN 1
#define DT_N_S_leds_S_led_1_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_1_P_label "LED 3"
#define DT_N_S_leds_S_led_1_P_label_STRING_UNQUOTED LED 3
#define DT_N_S_leds_S_led_1_P_label_STRING_TOKEN LED_3
#define DT_N_S_leds_S_led_1_P_label_STRING_UPPER_TOKEN LED_3
#define DT_N_S_leds_S_led_1_P_label_IDX_0 "LED 3"
#define DT_N_S_leds_S_led_1_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, label, 0)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_1, label, 0)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_label_LEN 1
#define DT_N_S_leds_S_led_1_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_2
 *
 * Node identifier: DT_N_S_leds_S_led_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_2_PATH "/leds/led_2"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_2_FULL_NAME "led_2"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_2_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_2_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_2_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_2_FOREACH_NODELABEL(fn) fn(led4)
#define DT_N_S_leds_S_led_2_FOREACH_NODELABEL_VARGS(fn, ...) fn(led4, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_2_CHILD_NUM 0
#define DT_N_S_leds_S_led_2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_2_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_2_ORD 17
#define DT_N_S_leds_S_led_2_ORD_STR_SORTABLE 00017

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_2_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40081000/gpio@40081180 */ \
	14, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_2_EXISTS 1
#define DT_N_ALIAS_led2     DT_N_S_leds_S_led_2
#define DT_N_NODELABEL_led4 DT_N_S_leds_S_led_2

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_2_REG_NUM 0
#define DT_N_S_leds_S_led_2_RANGES_NUM 0
#define DT_N_S_leds_S_led_2_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_2_IRQ_NUM 0
#define DT_N_S_leds_S_led_2_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_pin 11
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_2, gpios, 0)
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_2, gpios, 0)
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_2, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_2, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_gpios_LEN 1
#define DT_N_S_leds_S_led_2_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_2_P_label "LED 4"
#define DT_N_S_leds_S_led_2_P_label_STRING_UNQUOTED LED 4
#define DT_N_S_leds_S_led_2_P_label_STRING_TOKEN LED_4
#define DT_N_S_leds_S_led_2_P_label_STRING_UPPER_TOKEN LED_4
#define DT_N_S_leds_S_led_2_P_label_IDX_0 "LED 4"
#define DT_N_S_leds_S_led_2_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_2, label, 0)
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_2, label, 0)
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_2, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_2, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_label_LEN 1
#define DT_N_S_leds_S_led_2_P_label_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/adc04_gpio204
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_PATH "/soc/pin-controller@40081000/adc04_gpio204"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_FULL_NAME "adc04_gpio204"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_FOREACH_NODELABEL(fn) fn(adc04_gpio204)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_FOREACH_NODELABEL_VARGS(fn, ...) fn(adc04_gpio204, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_ORD 18
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_ORD_STR_SORTABLE 00018

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_SUPPORTS_ORDS \
	23, /* /soc/adc@40007c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_EXISTS 1
#define DT_N_NODELABEL_adc04_gpio204 DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_pinmux 580
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/adc05_gpio205
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_PATH "/soc/pin-controller@40081000/adc05_gpio205"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_FULL_NAME "adc05_gpio205"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_FOREACH_NODELABEL(fn) fn(adc05_gpio205)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_FOREACH_NODELABEL_VARGS(fn, ...) fn(adc05_gpio205, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_ORD 19
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_ORD_STR_SORTABLE 00019

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_SUPPORTS_ORDS \
	23, /* /soc/adc@40007c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_EXISTS 1
#define DT_N_NODELABEL_adc05_gpio205 DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_pinmux 596
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/adc06_gpio206
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_PATH "/soc/pin-controller@40081000/adc06_gpio206"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_FULL_NAME "adc06_gpio206"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_FOREACH_NODELABEL(fn) fn(adc06_gpio206)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_FOREACH_NODELABEL_VARGS(fn, ...) fn(adc06_gpio206, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_ORD 20
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_ORD_STR_SORTABLE 00020

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_SUPPORTS_ORDS \
	23, /* /soc/adc@40007c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_EXISTS 1
#define DT_N_NODELABEL_adc06_gpio206 DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_pinmux 612
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/adc07_gpio207
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_PATH "/soc/pin-controller@40081000/adc07_gpio207"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_FULL_NAME "adc07_gpio207"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_FOREACH_NODELABEL(fn) fn(adc07_gpio207)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_FOREACH_NODELABEL_VARGS(fn, ...) fn(adc07_gpio207, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_ORD 21
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_ORD_STR_SORTABLE 00021

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_SUPPORTS_ORDS \
	23, /* /soc/adc@40007c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_EXISTS 1
#define DT_N_NODELABEL_adc07_gpio207 DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_pinmux 628
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/vref2_adc_gpio067
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_PATH "/soc/pin-controller@40081000/vref2_adc_gpio067"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_FULL_NAME "vref2_adc_gpio067"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_FOREACH_NODELABEL(fn) fn(vref2_adc_gpio067)
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_FOREACH_NODELABEL_VARGS(fn, ...) fn(vref2_adc_gpio067, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_ORD 22
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_ORD_STR_SORTABLE 00022

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_SUPPORTS_ORDS \
	23, /* /soc/adc@40007c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_EXISTS 1
#define DT_N_NODELABEL_vref2_adc_gpio067 DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_pinmux 881
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/adc@40007c00
 *
 * Node identifier: DT_N_S_soc_S_adc_40007c00
 *
 * Binding (compatible = microchip,xec-adc):
 *   $ZEPHYR_BASE/dts/bindings/adc/microchip,xec-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_40007c00_PATH "/soc/adc@40007c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_40007c00_FULL_NAME "adc@40007c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_40007c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_40007c00_CHILD_IDX 36

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_adc_40007c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_adc_40007c00_FOREACH_NODELABEL(fn) fn(adc0)
#define DT_N_S_soc_S_adc_40007c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(adc0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_40007c00_CHILD_NUM 0
#define DT_N_S_soc_S_adc_40007c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_adc_40007c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_40007c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_40007c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_40007c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_40007c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_40007c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_40007c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_40007c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_40007c00_ORD 23
#define DT_N_S_soc_S_adc_40007c00_ORD_STR_SORTABLE 00023

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_40007c00_REQUIRES_ORDS \
	10, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */ \
	18, /* /soc/pin-controller@40081000/adc04_gpio204 */ \
	19, /* /soc/pin-controller@40081000/adc05_gpio205 */ \
	20, /* /soc/pin-controller@40081000/adc06_gpio206 */ \
	21, /* /soc/pin-controller@40081000/adc07_gpio207 */ \
	22, /* /soc/pin-controller@40081000/vref2_adc_gpio067 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_40007c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_40007c00_EXISTS 1
#define DT_N_INST_0_microchip_xec_adc DT_N_S_soc_S_adc_40007c00
#define DT_N_NODELABEL_adc0           DT_N_S_soc_S_adc_40007c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_40007c00_REG_NUM 1
#define DT_N_S_soc_S_adc_40007c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_REG_IDX_0_VAL_ADDRESS 1073773568 /* 0x40007c00 */
#define DT_N_S_soc_S_adc_40007c00_REG_IDX_0_VAL_SIZE 144 /* 0x90 */
#define DT_N_S_soc_S_adc_40007c00_RANGES_NUM 0
#define DT_N_S_soc_S_adc_40007c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_40007c00_IRQ_NUM 2
#define DT_N_S_soc_S_adc_40007c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_IRQ_IDX_0_VAL_irq 78
#define DT_N_S_soc_S_adc_40007c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_adc_40007c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_adc_40007c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_IRQ_IDX_1_VAL_irq 79
#define DT_N_S_soc_S_adc_40007c00_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_adc_40007c00_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_adc_40007c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_adc_40007c00_COMPAT_MATCHES_microchip_xec_adc 1
#define DT_N_S_soc_S_adc_40007c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_adc_40007c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_COMPAT_MODEL_IDX_0 "xec-adc"
#define DT_N_S_soc_S_adc_40007c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_40007c00_PINCTRL_NUM 1
#define DT_N_S_soc_S_adc_40007c00_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_adc_40007c00_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_adc_40007c00_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_adc_40007c00_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204
#define DT_N_S_soc_S_adc_40007c00_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205
#define DT_N_S_soc_S_adc_40007c00_PINCTRL_NAME_default_IDX_2_PH DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206
#define DT_N_S_soc_S_adc_40007c00_PINCTRL_NAME_default_IDX_3_PH DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207
#define DT_N_S_soc_S_adc_40007c00_PINCTRL_NAME_default_IDX_4_PH DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067

/* Generic property macros: */
#define DT_N_S_soc_S_adc_40007c00_P_wakeup_source 0
#define DT_N_S_soc_S_adc_40007c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_adc_40007c00_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_status "okay"
#define DT_N_S_soc_S_adc_40007c00_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_adc_40007c00_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_adc_40007c00_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_40007c00_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_adc_40007c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_adc_40007c00_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_adc_40007c00_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_40007c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40007c00, status, 0)
#define DT_N_S_soc_S_adc_40007c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40007c00, status, 0)
#define DT_N_S_soc_S_adc_40007c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40007c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40007c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40007c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40007c00_P_status_LEN 1
#define DT_N_S_soc_S_adc_40007c00_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_compatible {"microchip,xec-adc"}
#define DT_N_S_soc_S_adc_40007c00_P_compatible_IDX_0 "microchip,xec-adc"
#define DT_N_S_soc_S_adc_40007c00_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-adc
#define DT_N_S_soc_S_adc_40007c00_P_compatible_IDX_0_STRING_TOKEN microchip_xec_adc
#define DT_N_S_soc_S_adc_40007c00_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_ADC
#define DT_N_S_soc_S_adc_40007c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40007c00, compatible, 0)
#define DT_N_S_soc_S_adc_40007c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40007c00, compatible, 0)
#define DT_N_S_soc_S_adc_40007c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40007c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40007c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40007c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40007c00_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_40007c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_reg {1073773568 /* 0x40007c00 */, 144 /* 0x90 */}
#define DT_N_S_soc_S_adc_40007c00_P_reg_IDX_0 1073773568
#define DT_N_S_soc_S_adc_40007c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_reg_IDX_1 144
#define DT_N_S_soc_S_adc_40007c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_interrupts {78 /* 0x4e */, 0 /* 0x0 */, 79 /* 0x4f */, 0 /* 0x0 */}
#define DT_N_S_soc_S_adc_40007c00_P_interrupts_IDX_0 78
#define DT_N_S_soc_S_adc_40007c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_adc_40007c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_interrupts_IDX_2 79
#define DT_N_S_soc_S_adc_40007c00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_adc_40007c00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_adc_40007c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_0_IDX_2 DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_0_IDX_2_PH DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_0_IDX_2_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_0_IDX_3 DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_0_IDX_3_PH DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_0_IDX_3_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_0_IDX_4 DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_0_IDX_4_PH DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_0_IDX_4_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40007c00, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_adc_40007c00, pinctrl_0, 1) \
	fn(DT_N_S_soc_S_adc_40007c00, pinctrl_0, 2) \
	fn(DT_N_S_soc_S_adc_40007c00, pinctrl_0, 3) \
	fn(DT_N_S_soc_S_adc_40007c00, pinctrl_0, 4)
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40007c00, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40007c00, pinctrl_0, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40007c00, pinctrl_0, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40007c00, pinctrl_0, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40007c00, pinctrl_0, 4)
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40007c00, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40007c00, pinctrl_0, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40007c00, pinctrl_0, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40007c00, pinctrl_0, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40007c00, pinctrl_0, 4, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40007c00, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40007c00, pinctrl_0, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40007c00, pinctrl_0, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40007c00, pinctrl_0, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40007c00, pinctrl_0, 4, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_0_LEN 5
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40007c00, pinctrl_names, 0)
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40007c00, pinctrl_names, 0)
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40007c00, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40007c00, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_adc_40007c00_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_girqs {17 /* 0x11 */, 8 /* 0x8 */, 17 /* 0x11 */, 9 /* 0x9 */}
#define DT_N_S_soc_S_adc_40007c00_P_girqs_IDX_0 17
#define DT_N_S_soc_S_adc_40007c00_P_girqs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_girqs_IDX_1 8
#define DT_N_S_soc_S_adc_40007c00_P_girqs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_girqs_IDX_2 17
#define DT_N_S_soc_S_adc_40007c00_P_girqs_IDX_2_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_girqs_IDX_3 9
#define DT_N_S_soc_S_adc_40007c00_P_girqs_IDX_3_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_girqs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40007c00, girqs, 0) \
	fn(DT_N_S_soc_S_adc_40007c00, girqs, 1) \
	fn(DT_N_S_soc_S_adc_40007c00, girqs, 2) \
	fn(DT_N_S_soc_S_adc_40007c00, girqs, 3)
#define DT_N_S_soc_S_adc_40007c00_P_girqs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40007c00, girqs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40007c00, girqs, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40007c00, girqs, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40007c00, girqs, 3)
#define DT_N_S_soc_S_adc_40007c00_P_girqs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40007c00, girqs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40007c00, girqs, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40007c00, girqs, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40007c00, girqs, 3, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40007c00_P_girqs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40007c00, girqs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40007c00, girqs, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40007c00, girqs, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40007c00, girqs, 3, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40007c00_P_girqs_LEN 4
#define DT_N_S_soc_S_adc_40007c00_P_girqs_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_pcrs {3 /* 0x3 */, 3 /* 0x3 */}
#define DT_N_S_soc_S_adc_40007c00_P_pcrs_IDX_0 3
#define DT_N_S_soc_S_adc_40007c00_P_pcrs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_pcrs_IDX_1 3
#define DT_N_S_soc_S_adc_40007c00_P_pcrs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_pcrs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40007c00, pcrs, 0) \
	fn(DT_N_S_soc_S_adc_40007c00, pcrs, 1)
#define DT_N_S_soc_S_adc_40007c00_P_pcrs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40007c00, pcrs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40007c00, pcrs, 1)
#define DT_N_S_soc_S_adc_40007c00_P_pcrs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40007c00, pcrs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40007c00, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40007c00_P_pcrs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40007c00, pcrs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40007c00, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40007c00_P_pcrs_LEN 2
#define DT_N_S_soc_S_adc_40007c00_P_pcrs_EXISTS 1
#define DT_N_S_soc_S_adc_40007c00_P_clktime 32
#define DT_N_S_soc_S_adc_40007c00_P_clktime_EXISTS 1

/*
 * Devicetree node: /soc/bb-ram@4000a800
 *
 * Node identifier: DT_N_S_soc_S_bb_ram_4000a800
 *
 * Binding (compatible = microchip,xec-bbram):
 *   $ZEPHYR_BASE/dts/bindings/memory-controllers/microchip,xec-bbram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_bb_ram_4000a800_PATH "/soc/bb-ram@4000a800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_bb_ram_4000a800_FULL_NAME "bb-ram@4000a800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_bb_ram_4000a800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_bb_ram_4000a800_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_bb_ram_4000a800_NODELABEL_NUM 1
#define DT_N_S_soc_S_bb_ram_4000a800_FOREACH_NODELABEL(fn) fn(bbram)
#define DT_N_S_soc_S_bb_ram_4000a800_FOREACH_NODELABEL_VARGS(fn, ...) fn(bbram, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_bb_ram_4000a800_CHILD_NUM 0
#define DT_N_S_soc_S_bb_ram_4000a800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_bb_ram_4000a800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_bb_ram_4000a800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_bb_ram_4000a800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_bb_ram_4000a800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_bb_ram_4000a800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_bb_ram_4000a800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_bb_ram_4000a800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_bb_ram_4000a800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_bb_ram_4000a800_ORD 24
#define DT_N_S_soc_S_bb_ram_4000a800_ORD_STR_SORTABLE 00024

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_bb_ram_4000a800_REQUIRES_ORDS \
	10, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_bb_ram_4000a800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_bb_ram_4000a800_EXISTS 1
#define DT_N_INST_0_microchip_xec_bbram DT_N_S_soc_S_bb_ram_4000a800
#define DT_N_NODELABEL_bbram            DT_N_S_soc_S_bb_ram_4000a800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_bb_ram_4000a800_REG_NUM 1
#define DT_N_S_soc_S_bb_ram_4000a800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_bb_ram_4000a800_REG_IDX_0_VAL_ADDRESS 1073784832 /* 0x4000a800 */
#define DT_N_S_soc_S_bb_ram_4000a800_REG_IDX_0_VAL_SIZE 128 /* 0x80 */
#define DT_N_S_soc_S_bb_ram_4000a800_REG_NAME_memory_EXISTS 1
#define DT_N_S_soc_S_bb_ram_4000a800_REG_NAME_memory_VAL_ADDRESS DT_N_S_soc_S_bb_ram_4000a800_REG_IDX_0_VAL_ADDRESS
#define DT_N_S_soc_S_bb_ram_4000a800_REG_NAME_memory_VAL_SIZE DT_N_S_soc_S_bb_ram_4000a800_REG_IDX_0_VAL_SIZE
#define DT_N_S_soc_S_bb_ram_4000a800_RANGES_NUM 0
#define DT_N_S_soc_S_bb_ram_4000a800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_bb_ram_4000a800_IRQ_NUM 0
#define DT_N_S_soc_S_bb_ram_4000a800_IRQ_LEVEL 0
#define DT_N_S_soc_S_bb_ram_4000a800_COMPAT_MATCHES_microchip_xec_bbram 1
#define DT_N_S_soc_S_bb_ram_4000a800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_bb_ram_4000a800_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_bb_ram_4000a800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_bb_ram_4000a800_COMPAT_MODEL_IDX_0 "xec-bbram"
#define DT_N_S_soc_S_bb_ram_4000a800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_bb_ram_4000a800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_bb_ram_4000a800_P_wakeup_source 0
#define DT_N_S_soc_S_bb_ram_4000a800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_bb_ram_4000a800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_bb_ram_4000a800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_bb_ram_4000a800_P_compatible {"microchip,xec-bbram"}
#define DT_N_S_soc_S_bb_ram_4000a800_P_compatible_IDX_0 "microchip,xec-bbram"
#define DT_N_S_soc_S_bb_ram_4000a800_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-bbram
#define DT_N_S_soc_S_bb_ram_4000a800_P_compatible_IDX_0_STRING_TOKEN microchip_xec_bbram
#define DT_N_S_soc_S_bb_ram_4000a800_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_BBRAM
#define DT_N_S_soc_S_bb_ram_4000a800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_bb_ram_4000a800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_bb_ram_4000a800, compatible, 0)
#define DT_N_S_soc_S_bb_ram_4000a800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_bb_ram_4000a800, compatible, 0)
#define DT_N_S_soc_S_bb_ram_4000a800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_bb_ram_4000a800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_bb_ram_4000a800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_bb_ram_4000a800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_bb_ram_4000a800_P_compatible_LEN 1
#define DT_N_S_soc_S_bb_ram_4000a800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_bb_ram_4000a800_P_reg {1073784832 /* 0x4000a800 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_bb_ram_4000a800_P_reg_IDX_0 1073784832
#define DT_N_S_soc_S_bb_ram_4000a800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_bb_ram_4000a800_P_reg_IDX_1 128
#define DT_N_S_soc_S_bb_ram_4000a800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_bb_ram_4000a800_P_reg_EXISTS 1
#define DT_N_S_soc_S_bb_ram_4000a800_P_reg_names {"memory"}
#define DT_N_S_soc_S_bb_ram_4000a800_P_reg_names_IDX_0 "memory"
#define DT_N_S_soc_S_bb_ram_4000a800_P_reg_names_IDX_0_STRING_UNQUOTED memory
#define DT_N_S_soc_S_bb_ram_4000a800_P_reg_names_IDX_0_STRING_TOKEN memory
#define DT_N_S_soc_S_bb_ram_4000a800_P_reg_names_IDX_0_STRING_UPPER_TOKEN MEMORY
#define DT_N_S_soc_S_bb_ram_4000a800_P_reg_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_bb_ram_4000a800_P_reg_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_bb_ram_4000a800, reg_names, 0)
#define DT_N_S_soc_S_bb_ram_4000a800_P_reg_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_bb_ram_4000a800, reg_names, 0)
#define DT_N_S_soc_S_bb_ram_4000a800_P_reg_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_bb_ram_4000a800, reg_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_bb_ram_4000a800_P_reg_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_bb_ram_4000a800, reg_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_bb_ram_4000a800_P_reg_names_LEN 1
#define DT_N_S_soc_S_bb_ram_4000a800_P_reg_names_EXISTS 1
#define DT_N_S_soc_S_bb_ram_4000a800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_bb_ram_4000a800_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/bbled@4000b800
 *
 * Node identifier: DT_N_S_soc_S_bbled_4000b800
 */

/* Node's full path: */
#define DT_N_S_soc_S_bbled_4000b800_PATH "/soc/bbled@4000b800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_bbled_4000b800_FULL_NAME "bbled@4000b800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_bbled_4000b800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_bbled_4000b800_CHILD_IDX 44

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_bbled_4000b800_NODELABEL_NUM 1
#define DT_N_S_soc_S_bbled_4000b800_FOREACH_NODELABEL(fn) fn(bbled0)
#define DT_N_S_soc_S_bbled_4000b800_FOREACH_NODELABEL_VARGS(fn, ...) fn(bbled0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_bbled_4000b800_CHILD_NUM 0
#define DT_N_S_soc_S_bbled_4000b800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_bbled_4000b800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_bbled_4000b800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_bbled_4000b800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_bbled_4000b800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_bbled_4000b800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_bbled_4000b800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_bbled_4000b800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_bbled_4000b800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_bbled_4000b800_ORD 25
#define DT_N_S_soc_S_bbled_4000b800_ORD_STR_SORTABLE 00025

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_bbled_4000b800_REQUIRES_ORDS \
	10, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_bbled_4000b800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_bbled_4000b800_EXISTS 1
#define DT_N_NODELABEL_bbled0 DT_N_S_soc_S_bbled_4000b800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_bbled_4000b800_REG_NUM 1
#define DT_N_S_soc_S_bbled_4000b800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_bbled_4000b800_REG_IDX_0_VAL_ADDRESS 1073788928 /* 0x4000b800 */
#define DT_N_S_soc_S_bbled_4000b800_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_soc_S_bbled_4000b800_RANGES_NUM 0
#define DT_N_S_soc_S_bbled_4000b800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_bbled_4000b800_IRQ_NUM 1
#define DT_N_S_soc_S_bbled_4000b800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_bbled_4000b800_IRQ_IDX_0_VAL_irq 83
#define DT_N_S_soc_S_bbled_4000b800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_bbled_4000b800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_bbled_4000b800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_bbled_4000b800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_bbled_4000b800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_bbled_4000b800_IRQ_LEVEL 1
#define DT_N_S_soc_S_bbled_4000b800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_bbled_4000b800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_bbled_4000b800_P_reg {1073788928 /* 0x4000b800 */, 256 /* 0x100 */}
#define DT_N_S_soc_S_bbled_4000b800_P_reg_IDX_0 1073788928
#define DT_N_S_soc_S_bbled_4000b800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_bbled_4000b800_P_reg_IDX_1 256
#define DT_N_S_soc_S_bbled_4000b800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_bbled_4000b800_P_reg_EXISTS 1
#define DT_N_S_soc_S_bbled_4000b800_P_interrupts {83 /* 0x53 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_bbled_4000b800_P_interrupts_IDX_0 83
#define DT_N_S_soc_S_bbled_4000b800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_bbled_4000b800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_bbled_4000b800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_bbled_4000b800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_bbled_4000b800_P_status "disabled"
#define DT_N_S_soc_S_bbled_4000b800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_bbled_4000b800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_bbled_4000b800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_bbled_4000b800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_bbled_4000b800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_bbled_4000b800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_bbled_4000b800_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_bbled_4000b800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_bbled_4000b800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_bbled_4000b800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_bbled_4000b800, status, 0)
#define DT_N_S_soc_S_bbled_4000b800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_bbled_4000b800, status, 0)
#define DT_N_S_soc_S_bbled_4000b800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_bbled_4000b800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_bbled_4000b800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_bbled_4000b800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_bbled_4000b800_P_status_LEN 1
#define DT_N_S_soc_S_bbled_4000b800_P_status_EXISTS 1

/*
 * Devicetree node: /soc/bbled@4000b900
 *
 * Node identifier: DT_N_S_soc_S_bbled_4000b900
 */

/* Node's full path: */
#define DT_N_S_soc_S_bbled_4000b900_PATH "/soc/bbled@4000b900"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_bbled_4000b900_FULL_NAME "bbled@4000b900"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_bbled_4000b900_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_bbled_4000b900_CHILD_IDX 45

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_bbled_4000b900_NODELABEL_NUM 1
#define DT_N_S_soc_S_bbled_4000b900_FOREACH_NODELABEL(fn) fn(bbled1)
#define DT_N_S_soc_S_bbled_4000b900_FOREACH_NODELABEL_VARGS(fn, ...) fn(bbled1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_bbled_4000b900_CHILD_NUM 0
#define DT_N_S_soc_S_bbled_4000b900_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_bbled_4000b900_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_bbled_4000b900_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_bbled_4000b900_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_bbled_4000b900_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_bbled_4000b900_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_bbled_4000b900_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_bbled_4000b900_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_bbled_4000b900_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_bbled_4000b900_ORD 26
#define DT_N_S_soc_S_bbled_4000b900_ORD_STR_SORTABLE 00026

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_bbled_4000b900_REQUIRES_ORDS \
	10, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_bbled_4000b900_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_bbled_4000b900_EXISTS 1
#define DT_N_NODELABEL_bbled1 DT_N_S_soc_S_bbled_4000b900

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_bbled_4000b900_REG_NUM 1
#define DT_N_S_soc_S_bbled_4000b900_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_bbled_4000b900_REG_IDX_0_VAL_ADDRESS 1073789184 /* 0x4000b900 */
#define DT_N_S_soc_S_bbled_4000b900_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_soc_S_bbled_4000b900_RANGES_NUM 0
#define DT_N_S_soc_S_bbled_4000b900_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_bbled_4000b900_IRQ_NUM 1
#define DT_N_S_soc_S_bbled_4000b900_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_bbled_4000b900_IRQ_IDX_0_VAL_irq 84
#define DT_N_S_soc_S_bbled_4000b900_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_bbled_4000b900_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_bbled_4000b900_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_bbled_4000b900_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_bbled_4000b900_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_bbled_4000b900_IRQ_LEVEL 1
#define DT_N_S_soc_S_bbled_4000b900_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_bbled_4000b900_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_bbled_4000b900_P_reg {1073789184 /* 0x4000b900 */, 256 /* 0x100 */}
#define DT_N_S_soc_S_bbled_4000b900_P_reg_IDX_0 1073789184
#define DT_N_S_soc_S_bbled_4000b900_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_bbled_4000b900_P_reg_IDX_1 256
#define DT_N_S_soc_S_bbled_4000b900_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_bbled_4000b900_P_reg_EXISTS 1
#define DT_N_S_soc_S_bbled_4000b900_P_interrupts {84 /* 0x54 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_bbled_4000b900_P_interrupts_IDX_0 84
#define DT_N_S_soc_S_bbled_4000b900_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_bbled_4000b900_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_bbled_4000b900_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_bbled_4000b900_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_bbled_4000b900_P_status "disabled"
#define DT_N_S_soc_S_bbled_4000b900_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_bbled_4000b900_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_bbled_4000b900_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_bbled_4000b900_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_bbled_4000b900_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_bbled_4000b900_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_bbled_4000b900_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_bbled_4000b900_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_bbled_4000b900_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_bbled_4000b900_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_bbled_4000b900, status, 0)
#define DT_N_S_soc_S_bbled_4000b900_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_bbled_4000b900, status, 0)
#define DT_N_S_soc_S_bbled_4000b900_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_bbled_4000b900, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_bbled_4000b900_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_bbled_4000b900, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_bbled_4000b900_P_status_LEN 1
#define DT_N_S_soc_S_bbled_4000b900_P_status_EXISTS 1

/*
 * Devicetree node: /soc/bbled@4000ba00
 *
 * Node identifier: DT_N_S_soc_S_bbled_4000ba00
 */

/* Node's full path: */
#define DT_N_S_soc_S_bbled_4000ba00_PATH "/soc/bbled@4000ba00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_bbled_4000ba00_FULL_NAME "bbled@4000ba00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_bbled_4000ba00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_bbled_4000ba00_CHILD_IDX 46

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_bbled_4000ba00_NODELABEL_NUM 1
#define DT_N_S_soc_S_bbled_4000ba00_FOREACH_NODELABEL(fn) fn(bbled2)
#define DT_N_S_soc_S_bbled_4000ba00_FOREACH_NODELABEL_VARGS(fn, ...) fn(bbled2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_bbled_4000ba00_CHILD_NUM 0
#define DT_N_S_soc_S_bbled_4000ba00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_bbled_4000ba00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_bbled_4000ba00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_bbled_4000ba00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_bbled_4000ba00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_bbled_4000ba00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_bbled_4000ba00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_bbled_4000ba00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_bbled_4000ba00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_bbled_4000ba00_ORD 27
#define DT_N_S_soc_S_bbled_4000ba00_ORD_STR_SORTABLE 00027

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_bbled_4000ba00_REQUIRES_ORDS \
	10, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_bbled_4000ba00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_bbled_4000ba00_EXISTS 1
#define DT_N_NODELABEL_bbled2 DT_N_S_soc_S_bbled_4000ba00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_bbled_4000ba00_REG_NUM 1
#define DT_N_S_soc_S_bbled_4000ba00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_bbled_4000ba00_REG_IDX_0_VAL_ADDRESS 1073789440 /* 0x4000ba00 */
#define DT_N_S_soc_S_bbled_4000ba00_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_soc_S_bbled_4000ba00_RANGES_NUM 0
#define DT_N_S_soc_S_bbled_4000ba00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_bbled_4000ba00_IRQ_NUM 1
#define DT_N_S_soc_S_bbled_4000ba00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_bbled_4000ba00_IRQ_IDX_0_VAL_irq 85
#define DT_N_S_soc_S_bbled_4000ba00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_bbled_4000ba00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_bbled_4000ba00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_bbled_4000ba00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_bbled_4000ba00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_bbled_4000ba00_IRQ_LEVEL 1
#define DT_N_S_soc_S_bbled_4000ba00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_bbled_4000ba00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_bbled_4000ba00_P_reg {1073789440 /* 0x4000ba00 */, 256 /* 0x100 */}
#define DT_N_S_soc_S_bbled_4000ba00_P_reg_IDX_0 1073789440
#define DT_N_S_soc_S_bbled_4000ba00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_bbled_4000ba00_P_reg_IDX_1 256
#define DT_N_S_soc_S_bbled_4000ba00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_bbled_4000ba00_P_reg_EXISTS 1
#define DT_N_S_soc_S_bbled_4000ba00_P_interrupts {85 /* 0x55 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_bbled_4000ba00_P_interrupts_IDX_0 85
#define DT_N_S_soc_S_bbled_4000ba00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_bbled_4000ba00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_bbled_4000ba00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_bbled_4000ba00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_bbled_4000ba00_P_status "disabled"
#define DT_N_S_soc_S_bbled_4000ba00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_bbled_4000ba00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_bbled_4000ba00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_bbled_4000ba00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_bbled_4000ba00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_bbled_4000ba00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_bbled_4000ba00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_bbled_4000ba00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_bbled_4000ba00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_bbled_4000ba00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_bbled_4000ba00, status, 0)
#define DT_N_S_soc_S_bbled_4000ba00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_bbled_4000ba00, status, 0)
#define DT_N_S_soc_S_bbled_4000ba00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_bbled_4000ba00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_bbled_4000ba00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_bbled_4000ba00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_bbled_4000ba00_P_status_LEN 1
#define DT_N_S_soc_S_bbled_4000ba00_P_status_EXISTS 1

/*
 * Devicetree node: /soc/ecs@4000fc00
 *
 * Node identifier: DT_N_S_soc_S_ecs_4000fc00
 *
 * Binding (compatible = microchip,xec-ecs):
 *   $ZEPHYR_BASE/dts/bindings/hwinfo/microchip,xec-ecs.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ecs_4000fc00_PATH "/soc/ecs@4000fc00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ecs_4000fc00_FULL_NAME "ecs@4000fc00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ecs_4000fc00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ecs_4000fc00_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_ecs_4000fc00_NODELABEL_NUM 1
#define DT_N_S_soc_S_ecs_4000fc00_FOREACH_NODELABEL(fn) fn(ecs)
#define DT_N_S_soc_S_ecs_4000fc00_FOREACH_NODELABEL_VARGS(fn, ...) fn(ecs, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ecs_4000fc00_CHILD_NUM 0
#define DT_N_S_soc_S_ecs_4000fc00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_ecs_4000fc00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ecs_4000fc00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ecs_4000fc00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ecs_4000fc00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ecs_4000fc00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ecs_4000fc00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ecs_4000fc00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ecs_4000fc00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ecs_4000fc00_ORD 28
#define DT_N_S_soc_S_ecs_4000fc00_ORD_STR_SORTABLE 00028

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ecs_4000fc00_REQUIRES_ORDS \
	10, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ecs_4000fc00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ecs_4000fc00_EXISTS 1
#define DT_N_INST_0_microchip_xec_ecs DT_N_S_soc_S_ecs_4000fc00
#define DT_N_NODELABEL_ecs            DT_N_S_soc_S_ecs_4000fc00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ecs_4000fc00_REG_NUM 1
#define DT_N_S_soc_S_ecs_4000fc00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecs_4000fc00_REG_IDX_0_VAL_ADDRESS 1073806336 /* 0x4000fc00 */
#define DT_N_S_soc_S_ecs_4000fc00_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_ecs_4000fc00_RANGES_NUM 0
#define DT_N_S_soc_S_ecs_4000fc00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ecs_4000fc00_IRQ_NUM 0
#define DT_N_S_soc_S_ecs_4000fc00_IRQ_LEVEL 0
#define DT_N_S_soc_S_ecs_4000fc00_COMPAT_MATCHES_microchip_xec_ecs 1
#define DT_N_S_soc_S_ecs_4000fc00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecs_4000fc00_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_ecs_4000fc00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecs_4000fc00_COMPAT_MODEL_IDX_0 "xec-ecs"
#define DT_N_S_soc_S_ecs_4000fc00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ecs_4000fc00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ecs_4000fc00_P_wakeup_source 0
#define DT_N_S_soc_S_ecs_4000fc00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ecs_4000fc00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_ecs_4000fc00_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_ecs_4000fc00_P_compatible {"microchip,xec-ecs"}
#define DT_N_S_soc_S_ecs_4000fc00_P_compatible_IDX_0 "microchip,xec-ecs"
#define DT_N_S_soc_S_ecs_4000fc00_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-ecs
#define DT_N_S_soc_S_ecs_4000fc00_P_compatible_IDX_0_STRING_TOKEN microchip_xec_ecs
#define DT_N_S_soc_S_ecs_4000fc00_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_ECS
#define DT_N_S_soc_S_ecs_4000fc00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecs_4000fc00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ecs_4000fc00, compatible, 0)
#define DT_N_S_soc_S_ecs_4000fc00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ecs_4000fc00, compatible, 0)
#define DT_N_S_soc_S_ecs_4000fc00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ecs_4000fc00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ecs_4000fc00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ecs_4000fc00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ecs_4000fc00_P_compatible_LEN 1
#define DT_N_S_soc_S_ecs_4000fc00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ecs_4000fc00_P_reg {1073806336 /* 0x4000fc00 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_ecs_4000fc00_P_reg_IDX_0 1073806336
#define DT_N_S_soc_S_ecs_4000fc00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecs_4000fc00_P_reg_IDX_1 512
#define DT_N_S_soc_S_ecs_4000fc00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ecs_4000fc00_P_reg_EXISTS 1
#define DT_N_S_soc_S_ecs_4000fc00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_ecs_4000fc00_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/espi@40008000
 *
 * Node identifier: DT_N_S_soc_S_espi_40008000
 *
 * Binding (compatible = microchip,xec-espi-saf):
 *   $ZEPHYR_BASE/dts/bindings/espi/microchip,xec-espi-saf.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_espi_40008000_PATH "/soc/espi@40008000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_espi_40008000_FULL_NAME "espi@40008000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_espi_40008000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_espi_40008000_CHILD_IDX 18

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_espi_40008000_NODELABEL_NUM 1
#define DT_N_S_soc_S_espi_40008000_FOREACH_NODELABEL(fn) fn(espi_saf0)
#define DT_N_S_soc_S_espi_40008000_FOREACH_NODELABEL_VARGS(fn, ...) fn(espi_saf0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_espi_40008000_CHILD_NUM 0
#define DT_N_S_soc_S_espi_40008000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_espi_40008000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_espi_40008000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_espi_40008000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_espi_40008000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_espi_40008000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_espi_40008000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_espi_40008000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_espi_40008000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_espi_40008000_ORD 29
#define DT_N_S_soc_S_espi_40008000_ORD_STR_SORTABLE 00029

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_espi_40008000_REQUIRES_ORDS \
	10, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_espi_40008000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_espi_40008000_EXISTS 1
#define DT_N_INST_0_microchip_xec_espi_saf DT_N_S_soc_S_espi_40008000
#define DT_N_NODELABEL_espi_saf0           DT_N_S_soc_S_espi_40008000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_espi_40008000_REG_NUM 3
#define DT_N_S_soc_S_espi_40008000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_espi_40008000_REG_IDX_0_VAL_ADDRESS 1073774592 /* 0x40008000 */
#define DT_N_S_soc_S_espi_40008000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_espi_40008000_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_espi_40008000_REG_IDX_1_VAL_ADDRESS 1074200576 /* 0x40070000 */
#define DT_N_S_soc_S_espi_40008000_REG_IDX_1_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_espi_40008000_REG_IDX_2_EXISTS 1
#define DT_N_S_soc_S_espi_40008000_REG_IDX_2_VAL_ADDRESS 1074204672 /* 0x40071000 */
#define DT_N_S_soc_S_espi_40008000_REG_IDX_2_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_espi_40008000_RANGES_NUM 0
#define DT_N_S_soc_S_espi_40008000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_espi_40008000_IRQ_NUM 0
#define DT_N_S_soc_S_espi_40008000_IRQ_LEVEL 0
#define DT_N_S_soc_S_espi_40008000_COMPAT_MATCHES_microchip_xec_espi_saf 1
#define DT_N_S_soc_S_espi_40008000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_espi_40008000_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_espi_40008000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_espi_40008000_COMPAT_MODEL_IDX_0 "xec-espi-saf"
#define DT_N_S_soc_S_espi_40008000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_espi_40008000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_espi_40008000_P_wakeup_source 0
#define DT_N_S_soc_S_espi_40008000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_espi_40008000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_espi_40008000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_espi_40008000_P_status "disabled"
#define DT_N_S_soc_S_espi_40008000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_espi_40008000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_espi_40008000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_espi_40008000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_espi_40008000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_espi_40008000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_espi_40008000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_espi_40008000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_espi_40008000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_espi_40008000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_espi_40008000, status, 0)
#define DT_N_S_soc_S_espi_40008000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_espi_40008000, status, 0)
#define DT_N_S_soc_S_espi_40008000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_espi_40008000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_espi_40008000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_espi_40008000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_espi_40008000_P_status_LEN 1
#define DT_N_S_soc_S_espi_40008000_P_status_EXISTS 1
#define DT_N_S_soc_S_espi_40008000_P_compatible {"microchip,xec-espi-saf"}
#define DT_N_S_soc_S_espi_40008000_P_compatible_IDX_0 "microchip,xec-espi-saf"
#define DT_N_S_soc_S_espi_40008000_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-espi-saf
#define DT_N_S_soc_S_espi_40008000_P_compatible_IDX_0_STRING_TOKEN microchip_xec_espi_saf
#define DT_N_S_soc_S_espi_40008000_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_ESPI_SAF
#define DT_N_S_soc_S_espi_40008000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_espi_40008000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_espi_40008000, compatible, 0)
#define DT_N_S_soc_S_espi_40008000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_espi_40008000, compatible, 0)
#define DT_N_S_soc_S_espi_40008000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_espi_40008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_espi_40008000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_espi_40008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_espi_40008000_P_compatible_LEN 1
#define DT_N_S_soc_S_espi_40008000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_espi_40008000_P_reg {1073774592 /* 0x40008000 */, 1024 /* 0x400 */, 1074200576 /* 0x40070000 */, 1024 /* 0x400 */, 1074204672 /* 0x40071000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_espi_40008000_P_reg_IDX_0 1073774592
#define DT_N_S_soc_S_espi_40008000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_espi_40008000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_espi_40008000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_espi_40008000_P_reg_IDX_2 1074200576
#define DT_N_S_soc_S_espi_40008000_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_espi_40008000_P_reg_IDX_3 1024
#define DT_N_S_soc_S_espi_40008000_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_espi_40008000_P_reg_IDX_4 1074204672
#define DT_N_S_soc_S_espi_40008000_P_reg_IDX_4_EXISTS 1
#define DT_N_S_soc_S_espi_40008000_P_reg_IDX_5 1024
#define DT_N_S_soc_S_espi_40008000_P_reg_IDX_5_EXISTS 1
#define DT_N_S_soc_S_espi_40008000_P_reg_EXISTS 1
#define DT_N_S_soc_S_espi_40008000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_espi_40008000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/espi_alert_n_gpio063
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_PATH "/soc/pin-controller@40081000/espi_alert_n_gpio063"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_FULL_NAME "espi_alert_n_gpio063"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_FOREACH_NODELABEL(fn) fn(espi_alert_n_gpio063)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_FOREACH_NODELABEL_VARGS(fn, ...) fn(espi_alert_n_gpio063, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_ORD 30
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_ORD_STR_SORTABLE 00030

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_SUPPORTS_ORDS \
	38, /* /soc/espi@400f3400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_EXISTS 1
#define DT_N_NODELABEL_espi_alert_n_gpio063 DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_pinmux 817
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/espi_clk_gpio065
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_PATH "/soc/pin-controller@40081000/espi_clk_gpio065"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_FULL_NAME "espi_clk_gpio065"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_FOREACH_NODELABEL(fn) fn(espi_clk_gpio065)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_FOREACH_NODELABEL_VARGS(fn, ...) fn(espi_clk_gpio065, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_ORD 31
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_ORD_STR_SORTABLE 00031

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_SUPPORTS_ORDS \
	38, /* /soc/espi@400f3400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_EXISTS 1
#define DT_N_NODELABEL_espi_clk_gpio065 DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_pinmux 849
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/espi_cs_n_gpio066
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_PATH "/soc/pin-controller@40081000/espi_cs_n_gpio066"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_FULL_NAME "espi_cs_n_gpio066"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_CHILD_IDX 14

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_FOREACH_NODELABEL(fn) fn(espi_cs_n_gpio066)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_FOREACH_NODELABEL_VARGS(fn, ...) fn(espi_cs_n_gpio066, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_ORD 32
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_ORD_STR_SORTABLE 00032

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_SUPPORTS_ORDS \
	38, /* /soc/espi@400f3400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_EXISTS 1
#define DT_N_NODELABEL_espi_cs_n_gpio066 DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_pinmux 865
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/espi_io0_gpio070
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_PATH "/soc/pin-controller@40081000/espi_io0_gpio070"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_FULL_NAME "espi_io0_gpio070"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_CHILD_IDX 15

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_FOREACH_NODELABEL(fn) fn(espi_io0_gpio070)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_FOREACH_NODELABEL_VARGS(fn, ...) fn(espi_io0_gpio070, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_ORD 33
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_ORD_STR_SORTABLE 00033

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_SUPPORTS_ORDS \
	38, /* /soc/espi@400f3400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_EXISTS 1
#define DT_N_NODELABEL_espi_io0_gpio070 DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_pinmux 897
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/espi_io1_gpio071
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_PATH "/soc/pin-controller@40081000/espi_io1_gpio071"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_FULL_NAME "espi_io1_gpio071"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_CHILD_IDX 16

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_FOREACH_NODELABEL(fn) fn(espi_io1_gpio071)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_FOREACH_NODELABEL_VARGS(fn, ...) fn(espi_io1_gpio071, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_ORD 34
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_ORD_STR_SORTABLE 00034

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_SUPPORTS_ORDS \
	38, /* /soc/espi@400f3400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_EXISTS 1
#define DT_N_NODELABEL_espi_io1_gpio071 DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_pinmux 913
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/espi_io2_gpio072
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_PATH "/soc/pin-controller@40081000/espi_io2_gpio072"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_FULL_NAME "espi_io2_gpio072"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_CHILD_IDX 17

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_FOREACH_NODELABEL(fn) fn(espi_io2_gpio072)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_FOREACH_NODELABEL_VARGS(fn, ...) fn(espi_io2_gpio072, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_ORD 35
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_ORD_STR_SORTABLE 00035

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_SUPPORTS_ORDS \
	38, /* /soc/espi@400f3400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_EXISTS 1
#define DT_N_NODELABEL_espi_io2_gpio072 DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_pinmux 929
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/espi_io3_gpio073
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_PATH "/soc/pin-controller@40081000/espi_io3_gpio073"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_FULL_NAME "espi_io3_gpio073"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_CHILD_IDX 18

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_FOREACH_NODELABEL(fn) fn(espi_io3_gpio073)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_FOREACH_NODELABEL_VARGS(fn, ...) fn(espi_io3_gpio073, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_ORD 36
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_ORD_STR_SORTABLE 00036

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_SUPPORTS_ORDS \
	38, /* /soc/espi@400f3400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_EXISTS 1
#define DT_N_NODELABEL_espi_io3_gpio073 DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_pinmux 945
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/espi_reset_n_gpio061
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_PATH "/soc/pin-controller@40081000/espi_reset_n_gpio061"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_FULL_NAME "espi_reset_n_gpio061"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_FOREACH_NODELABEL(fn) fn(espi_reset_n_gpio061)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_FOREACH_NODELABEL_VARGS(fn, ...) fn(espi_reset_n_gpio061, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_ORD 37
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_ORD_STR_SORTABLE 00037

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_SUPPORTS_ORDS \
	38, /* /soc/espi@400f3400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_EXISTS 1
#define DT_N_NODELABEL_espi_reset_n_gpio061 DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_pinmux 785
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/espi@400f3400
 *
 * Node identifier: DT_N_S_soc_S_espi_400f3400
 *
 * Binding (compatible = microchip,xec-espi):
 *   $ZEPHYR_BASE/dts/bindings/espi/microchip,xec-espi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_espi_400f3400_PATH "/soc/espi@400f3400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_espi_400f3400_FULL_NAME "espi@400f3400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_espi_400f3400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_espi_400f3400_CHILD_IDX 17

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_espi_400f3400_NODELABEL_NUM 1
#define DT_N_S_soc_S_espi_400f3400_FOREACH_NODELABEL(fn) fn(espi0)
#define DT_N_S_soc_S_espi_400f3400_FOREACH_NODELABEL_VARGS(fn, ...) fn(espi0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_espi_400f3400_CHILD_NUM 0
#define DT_N_S_soc_S_espi_400f3400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_espi_400f3400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_espi_400f3400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_espi_400f3400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_espi_400f3400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_espi_400f3400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_espi_400f3400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_espi_400f3400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_espi_400f3400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_espi_400f3400_ORD 38
#define DT_N_S_soc_S_espi_400f3400_ORD_STR_SORTABLE 00038

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_espi_400f3400_REQUIRES_ORDS \
	10, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */ \
	30, /* /soc/pin-controller@40081000/espi_alert_n_gpio063 */ \
	31, /* /soc/pin-controller@40081000/espi_clk_gpio065 */ \
	32, /* /soc/pin-controller@40081000/espi_cs_n_gpio066 */ \
	33, /* /soc/pin-controller@40081000/espi_io0_gpio070 */ \
	34, /* /soc/pin-controller@40081000/espi_io1_gpio071 */ \
	35, /* /soc/pin-controller@40081000/espi_io2_gpio072 */ \
	36, /* /soc/pin-controller@40081000/espi_io3_gpio073 */ \
	37, /* /soc/pin-controller@40081000/espi_reset_n_gpio061 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_espi_400f3400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_espi_400f3400_EXISTS 1
#define DT_N_INST_0_microchip_xec_espi DT_N_S_soc_S_espi_400f3400
#define DT_N_NODELABEL_espi0           DT_N_S_soc_S_espi_400f3400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_espi_400f3400_REG_NUM 1
#define DT_N_S_soc_S_espi_400f3400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_REG_IDX_0_VAL_ADDRESS 1074738176 /* 0x400f3400 */
#define DT_N_S_soc_S_espi_400f3400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_espi_400f3400_RANGES_NUM 0
#define DT_N_S_soc_S_espi_400f3400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_espi_400f3400_IRQ_NUM 4
#define DT_N_S_soc_S_espi_400f3400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_espi_400f3400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_IRQ_IDX_0_VAL_priority 3
#define DT_N_S_soc_S_espi_400f3400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_espi_400f3400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_IRQ_IDX_1_VAL_irq 15
#define DT_N_S_soc_S_espi_400f3400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_IRQ_IDX_1_VAL_priority 3
#define DT_N_S_soc_S_espi_400f3400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_espi_400f3400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_IRQ_IDX_2_VAL_irq 7
#define DT_N_S_soc_S_espi_400f3400_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_IRQ_IDX_2_VAL_priority 3
#define DT_N_S_soc_S_espi_400f3400_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_espi_400f3400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_IRQ_IDX_3_VAL_irq 16
#define DT_N_S_soc_S_espi_400f3400_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_IRQ_IDX_3_VAL_priority 3
#define DT_N_S_soc_S_espi_400f3400_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_espi_400f3400_IRQ_LEVEL 1
#define DT_N_S_soc_S_espi_400f3400_COMPAT_MATCHES_microchip_xec_espi 1
#define DT_N_S_soc_S_espi_400f3400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_espi_400f3400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_COMPAT_MODEL_IDX_0 "xec-espi"
#define DT_N_S_soc_S_espi_400f3400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_espi_400f3400_PINCTRL_NUM 1
#define DT_N_S_soc_S_espi_400f3400_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_espi_400f3400_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_espi_400f3400_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_espi_400f3400_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061
#define DT_N_S_soc_S_espi_400f3400_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066
#define DT_N_S_soc_S_espi_400f3400_PINCTRL_NAME_default_IDX_2_PH DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063
#define DT_N_S_soc_S_espi_400f3400_PINCTRL_NAME_default_IDX_3_PH DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065
#define DT_N_S_soc_S_espi_400f3400_PINCTRL_NAME_default_IDX_4_PH DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070
#define DT_N_S_soc_S_espi_400f3400_PINCTRL_NAME_default_IDX_5_PH DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071
#define DT_N_S_soc_S_espi_400f3400_PINCTRL_NAME_default_IDX_6_PH DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072
#define DT_N_S_soc_S_espi_400f3400_PINCTRL_NAME_default_IDX_7_PH DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073

/* Generic property macros: */
#define DT_N_S_soc_S_espi_400f3400_P_wakeup_source 0
#define DT_N_S_soc_S_espi_400f3400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_espi_400f3400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_status "okay"
#define DT_N_S_soc_S_espi_400f3400_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_espi_400f3400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_espi_400f3400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_espi_400f3400_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_espi_400f3400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_espi_400f3400_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_espi_400f3400_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_espi_400f3400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_espi_400f3400, status, 0)
#define DT_N_S_soc_S_espi_400f3400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_espi_400f3400, status, 0)
#define DT_N_S_soc_S_espi_400f3400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_espi_400f3400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_espi_400f3400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_espi_400f3400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_espi_400f3400_P_status_LEN 1
#define DT_N_S_soc_S_espi_400f3400_P_status_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_compatible {"microchip,xec-espi"}
#define DT_N_S_soc_S_espi_400f3400_P_compatible_IDX_0 "microchip,xec-espi"
#define DT_N_S_soc_S_espi_400f3400_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-espi
#define DT_N_S_soc_S_espi_400f3400_P_compatible_IDX_0_STRING_TOKEN microchip_xec_espi
#define DT_N_S_soc_S_espi_400f3400_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_ESPI
#define DT_N_S_soc_S_espi_400f3400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_espi_400f3400, compatible, 0)
#define DT_N_S_soc_S_espi_400f3400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_espi_400f3400, compatible, 0)
#define DT_N_S_soc_S_espi_400f3400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_espi_400f3400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_espi_400f3400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_espi_400f3400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_espi_400f3400_P_compatible_LEN 1
#define DT_N_S_soc_S_espi_400f3400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_reg {1074738176 /* 0x400f3400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_espi_400f3400_P_reg_IDX_0 1074738176
#define DT_N_S_soc_S_espi_400f3400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_espi_400f3400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_reg_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_interrupts {11 /* 0xb */, 3 /* 0x3 */, 15 /* 0xf */, 3 /* 0x3 */, 7 /* 0x7 */, 3 /* 0x3 */, 16 /* 0x10 */, 3 /* 0x3 */}
#define DT_N_S_soc_S_espi_400f3400_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_espi_400f3400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_interrupts_IDX_1 3
#define DT_N_S_soc_S_espi_400f3400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_interrupts_IDX_2 15
#define DT_N_S_soc_S_espi_400f3400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_interrupts_IDX_3 3
#define DT_N_S_soc_S_espi_400f3400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_interrupts_IDX_4 7
#define DT_N_S_soc_S_espi_400f3400_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_interrupts_IDX_5 3
#define DT_N_S_soc_S_espi_400f3400_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_interrupts_IDX_6 16
#define DT_N_S_soc_S_espi_400f3400_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_interrupts_IDX_7 3
#define DT_N_S_soc_S_espi_400f3400_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_espi_400f3400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_0_IDX_2 DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_0_IDX_2_PH DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_0_IDX_2_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_0_IDX_3 DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_0_IDX_3_PH DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_0_IDX_3_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_0_IDX_4 DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_0_IDX_4_PH DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_0_IDX_4_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_0_IDX_5 DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_0_IDX_5_PH DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_0_IDX_5_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_0_IDX_6 DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_0_IDX_6_PH DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_0_IDX_6_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_0_IDX_7 DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_0_IDX_7_PH DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_0_IDX_7_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 1) \
	fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 2) \
	fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 3) \
	fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 4) \
	fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 5) \
	fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 6) \
	fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 7)
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 7)
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 7, __VA_ARGS__)
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_espi_400f3400, pinctrl_0, 7, __VA_ARGS__)
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_0_LEN 8
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_espi_400f3400, pinctrl_names, 0)
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_espi_400f3400, pinctrl_names, 0)
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_espi_400f3400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_espi_400f3400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_espi_400f3400_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_io_girq 19
#define DT_N_S_soc_S_espi_400f3400_P_io_girq_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_vw_girqs {24 /* 0x18 */, 25 /* 0x19 */}
#define DT_N_S_soc_S_espi_400f3400_P_vw_girqs_IDX_0 24
#define DT_N_S_soc_S_espi_400f3400_P_vw_girqs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_vw_girqs_IDX_1 25
#define DT_N_S_soc_S_espi_400f3400_P_vw_girqs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_vw_girqs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_espi_400f3400, vw_girqs, 0) \
	fn(DT_N_S_soc_S_espi_400f3400, vw_girqs, 1)
#define DT_N_S_soc_S_espi_400f3400_P_vw_girqs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_espi_400f3400, vw_girqs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_espi_400f3400, vw_girqs, 1)
#define DT_N_S_soc_S_espi_400f3400_P_vw_girqs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_espi_400f3400, vw_girqs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_espi_400f3400, vw_girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_espi_400f3400_P_vw_girqs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_espi_400f3400, vw_girqs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_espi_400f3400, vw_girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_espi_400f3400_P_vw_girqs_LEN 2
#define DT_N_S_soc_S_espi_400f3400_P_vw_girqs_EXISTS 1
#define DT_N_S_soc_S_espi_400f3400_P_pc_girq 15
#define DT_N_S_soc_S_espi_400f3400_P_pc_girq_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/gpio@40081000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000
 *
 * Binding (compatible = microchip,xec-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/microchip,xec-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_PATH "/soc/pin-controller@40081000/gpio@40081000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_FULL_NAME "gpio@40081000"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_FOREACH_NODELABEL(fn) fn(gpio_000_036)
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpio_000_036, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_ORD 39
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_ORD_STR_SORTABLE 00039

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_SUPPORTS_ORDS \
	42, /* /soc/i2c@40004000 */ \
	45, /* /soc/i2c@40004800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_EXISTS 1
#define DT_N_INST_0_microchip_xec_gpio DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000
#define DT_N_NODELABEL_gpio_000_036    DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_REG_NUM 4
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_REG_IDX_0_VAL_ADDRESS 1074270208 /* 0x40081000 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_REG_IDX_0_VAL_SIZE 128 /* 0x80 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_REG_IDX_1_VAL_ADDRESS 1074270976 /* 0x40081300 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_REG_IDX_1_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_REG_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_REG_IDX_2_VAL_ADDRESS 1074271104 /* 0x40081380 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_REG_IDX_2_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_REG_IDX_3_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_REG_IDX_3_VAL_ADDRESS 1074271228 /* 0x400813fc */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_REG_IDX_3_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_IRQ_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_IRQ_IDX_0_VAL_irq 3
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_IRQ_IDX_0_VAL_priority 2
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_IRQ_LEVEL 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_COMPAT_MATCHES_microchip_xec_gpio 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_COMPAT_MODEL_IDX_0 "xec-gpio"
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_compatible {"microchip,xec-gpio"}
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_compatible_IDX_0 "microchip,xec-gpio"
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-gpio
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_compatible_IDX_0_STRING_TOKEN microchip_xec_gpio
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_GPIO
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_reg {1074270208 /* 0x40081000 */, 128 /* 0x80 */, 1074270976 /* 0x40081300 */, 4 /* 0x4 */, 1074271104 /* 0x40081380 */, 4 /* 0x4 */, 1074271228 /* 0x400813fc */, 4 /* 0x4 */}
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_reg_IDX_0 1074270208
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_reg_IDX_1 128
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_reg_IDX_2 1074270976
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_reg_IDX_3 4
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_reg_IDX_4 1074271104
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_reg_IDX_4_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_reg_IDX_5 4
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_reg_IDX_5_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_reg_IDX_6 1074271228
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_reg_IDX_6_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_reg_IDX_7 4
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_reg_IDX_7_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_interrupts {3 /* 0x3 */, 2 /* 0x2 */}
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_interrupts_IDX_0 3
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_interrupts_IDX_1 2
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_port_id 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_port_id_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_girq_id 11
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000_P_girq_id_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/i2c00_scl_gpio004
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_PATH "/soc/pin-controller@40081000/i2c00_scl_gpio004"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_FULL_NAME "i2c00_scl_gpio004"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_CHILD_IDX 19

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_FOREACH_NODELABEL(fn) fn(i2c00_scl_gpio004)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c00_scl_gpio004, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_ORD 40
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_ORD_STR_SORTABLE 00040

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_SUPPORTS_ORDS \
	42, /* /soc/i2c@40004000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_EXISTS 1
#define DT_N_NODELABEL_i2c00_scl_gpio004 DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_pinmux 576
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/i2c00_sda_gpio003
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_PATH "/soc/pin-controller@40081000/i2c00_sda_gpio003"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_FULL_NAME "i2c00_sda_gpio003"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_CHILD_IDX 20

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_FOREACH_NODELABEL(fn) fn(i2c00_sda_gpio003)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c00_sda_gpio003, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_ORD 41
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_ORD_STR_SORTABLE 00041

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_SUPPORTS_ORDS \
	42, /* /soc/i2c@40004000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_EXISTS 1
#define DT_N_NODELABEL_i2c00_sda_gpio003 DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_pinmux 560
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40004000
 *
 * Node identifier: DT_N_S_soc_S_i2c_40004000
 *
 * Binding (compatible = microchip,xec-i2c):
 *   $ZEPHYR_BASE/dts/bindings/i2c/microchip,xec-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40004000_PATH "/soc/i2c@40004000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40004000_FULL_NAME "i2c@40004000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40004000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40004000_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_40004000_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_40004000_FOREACH_NODELABEL(fn) fn(i2c_smb_0)
#define DT_N_S_soc_S_i2c_40004000_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c_smb_0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40004000_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_40004000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40004000_ORD 42
#define DT_N_S_soc_S_i2c_40004000_ORD_STR_SORTABLE 00042

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40004000_REQUIRES_ORDS \
	10, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */ \
	39, /* /soc/pin-controller@40081000/gpio@40081000 */ \
	40, /* /soc/pin-controller@40081000/i2c00_scl_gpio004 */ \
	41, /* /soc/pin-controller@40081000/i2c00_sda_gpio003 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40004000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40004000_EXISTS 1
#define DT_N_ALIAS_i2c_smb_0          DT_N_S_soc_S_i2c_40004000
#define DT_N_ALIAS_i2c0               DT_N_S_soc_S_i2c_40004000
#define DT_N_ALIAS_i2c_0              DT_N_S_soc_S_i2c_40004000
#define DT_N_INST_0_microchip_xec_i2c DT_N_S_soc_S_i2c_40004000
#define DT_N_NODELABEL_i2c_smb_0      DT_N_S_soc_S_i2c_40004000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40004000_REG_NUM 1
#define DT_N_S_soc_S_i2c_40004000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_REG_IDX_0_VAL_ADDRESS 1073758208 /* 0x40004000 */
#define DT_N_S_soc_S_i2c_40004000_REG_IDX_0_VAL_SIZE 128 /* 0x80 */
#define DT_N_S_soc_S_i2c_40004000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40004000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40004000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_VAL_irq 20
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_40004000_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c_40004000_COMPAT_MATCHES_microchip_xec_i2c 1
#define DT_N_S_soc_S_i2c_40004000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_i2c_40004000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_COMPAT_MODEL_IDX_0 "xec-i2c"
#define DT_N_S_soc_S_i2c_40004000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40004000_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_40004000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_40004000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40004000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_40004000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004
#define DT_N_S_soc_S_i2c_40004000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40004000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40004000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40004000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_status "okay"
#define DT_N_S_soc_S_i2c_40004000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_40004000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40004000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40004000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_i2c_40004000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40004000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_40004000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40004000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004000, status, 0)
#define DT_N_S_soc_S_i2c_40004000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004000, status, 0)
#define DT_N_S_soc_S_i2c_40004000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004000_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40004000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_compatible {"microchip,xec-i2c"}
#define DT_N_S_soc_S_i2c_40004000_P_compatible_IDX_0 "microchip,xec-i2c"
#define DT_N_S_soc_S_i2c_40004000_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-i2c
#define DT_N_S_soc_S_i2c_40004000_P_compatible_IDX_0_STRING_TOKEN microchip_xec_i2c
#define DT_N_S_soc_S_i2c_40004000_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_I2C
#define DT_N_S_soc_S_i2c_40004000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004000, compatible, 0)
#define DT_N_S_soc_S_i2c_40004000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004000, compatible, 0)
#define DT_N_S_soc_S_i2c_40004000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40004000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_reg {1073758208 /* 0x40004000 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_i2c_40004000_P_reg_IDX_0 1073758208
#define DT_N_S_soc_S_i2c_40004000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_reg_IDX_1 128
#define DT_N_S_soc_S_i2c_40004000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_interrupts {20 /* 0x14 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_IDX_0 20
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_40004000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40004000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_sq_size 4
#define DT_N_S_soc_S_i2c_40004000_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_cq_size 4
#define DT_N_S_soc_S_i2c_40004000_P_cq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004
#define DT_N_S_soc_S_i2c_40004000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004
#define DT_N_S_soc_S_i2c_40004000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003
#define DT_N_S_soc_S_i2c_40004000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003
#define DT_N_S_soc_S_i2c_40004000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_i2c_40004000, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40004000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40004000, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40004000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40004000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40004000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004000_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_i2c_40004000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c_40004000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_40004000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2c_40004000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2c_40004000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40004000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40004000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40004000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c_40004000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_port_sel 0
#define DT_N_S_soc_S_i2c_40004000_P_port_sel_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_girq 13
#define DT_N_S_soc_S_i2c_40004000_P_girq_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_girq_bit 0
#define DT_N_S_soc_S_i2c_40004000_P_girq_bit_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_pcrs {1 /* 0x1 */, 10 /* 0xa */}
#define DT_N_S_soc_S_i2c_40004000_P_pcrs_IDX_0 1
#define DT_N_S_soc_S_i2c_40004000_P_pcrs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_pcrs_IDX_1 10
#define DT_N_S_soc_S_i2c_40004000_P_pcrs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_pcrs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004000, pcrs, 0) \
	fn(DT_N_S_soc_S_i2c_40004000, pcrs, 1)
#define DT_N_S_soc_S_i2c_40004000_P_pcrs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004000, pcrs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40004000, pcrs, 1)
#define DT_N_S_soc_S_i2c_40004000_P_pcrs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004000, pcrs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40004000, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004000_P_pcrs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004000, pcrs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40004000, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004000_P_pcrs_LEN 2
#define DT_N_S_soc_S_i2c_40004000_P_pcrs_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_sda_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_sda_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000
#define DT_N_S_soc_S_i2c_40004000_P_sda_gpios_IDX_0_VAL_pin 3
#define DT_N_S_soc_S_i2c_40004000_P_sda_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_sda_gpios_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_i2c_40004000_P_sda_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_sda_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004000, sda_gpios, 0)
#define DT_N_S_soc_S_i2c_40004000_P_sda_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004000, sda_gpios, 0)
#define DT_N_S_soc_S_i2c_40004000_P_sda_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004000, sda_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004000_P_sda_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004000, sda_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004000_P_sda_gpios_LEN 1
#define DT_N_S_soc_S_i2c_40004000_P_sda_gpios_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_scl_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_scl_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000
#define DT_N_S_soc_S_i2c_40004000_P_scl_gpios_IDX_0_VAL_pin 4
#define DT_N_S_soc_S_i2c_40004000_P_scl_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_scl_gpios_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_i2c_40004000_P_scl_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_scl_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004000, scl_gpios, 0)
#define DT_N_S_soc_S_i2c_40004000_P_scl_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004000, scl_gpios, 0)
#define DT_N_S_soc_S_i2c_40004000_P_scl_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004000, scl_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004000_P_scl_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004000, scl_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004000_P_scl_gpios_LEN 1
#define DT_N_S_soc_S_i2c_40004000_P_scl_gpios_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/i2c07_scl_gpio013
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_PATH "/soc/pin-controller@40081000/i2c07_scl_gpio013"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_FULL_NAME "i2c07_scl_gpio013"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_CHILD_IDX 23

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_FOREACH_NODELABEL(fn) fn(i2c07_scl_gpio013)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c07_scl_gpio013, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_ORD 43
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_ORD_STR_SORTABLE 00043

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_SUPPORTS_ORDS \
	45, /* /soc/i2c@40004800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_EXISTS 1
#define DT_N_NODELABEL_i2c07_scl_gpio013 DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_pinmux 688
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/i2c07_sda_gpio012
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_PATH "/soc/pin-controller@40081000/i2c07_sda_gpio012"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_FULL_NAME "i2c07_sda_gpio012"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_CHILD_IDX 24

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_FOREACH_NODELABEL(fn) fn(i2c07_sda_gpio012)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c07_sda_gpio012, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_ORD 44
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_ORD_STR_SORTABLE 00044

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_SUPPORTS_ORDS \
	45, /* /soc/i2c@40004800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_EXISTS 1
#define DT_N_NODELABEL_i2c07_sda_gpio012 DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_pinmux 672
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40004800
 *
 * Node identifier: DT_N_S_soc_S_i2c_40004800
 *
 * Binding (compatible = microchip,xec-i2c):
 *   $ZEPHYR_BASE/dts/bindings/i2c/microchip,xec-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40004800_PATH "/soc/i2c@40004800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40004800_FULL_NAME "i2c@40004800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40004800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40004800_CHILD_IDX 14

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_40004800_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_40004800_FOREACH_NODELABEL(fn) fn(i2c_smb_2)
#define DT_N_S_soc_S_i2c_40004800_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c_smb_2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40004800_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_40004800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_40004800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40004800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40004800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40004800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40004800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40004800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40004800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40004800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40004800_ORD 45
#define DT_N_S_soc_S_i2c_40004800_ORD_STR_SORTABLE 00045

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40004800_REQUIRES_ORDS \
	10, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */ \
	39, /* /soc/pin-controller@40081000/gpio@40081000 */ \
	43, /* /soc/pin-controller@40081000/i2c07_scl_gpio013 */ \
	44, /* /soc/pin-controller@40081000/i2c07_sda_gpio012 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40004800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40004800_EXISTS 1
#define DT_N_ALIAS_i2c_smb_2          DT_N_S_soc_S_i2c_40004800
#define DT_N_ALIAS_i2c7               DT_N_S_soc_S_i2c_40004800
#define DT_N_INST_2_microchip_xec_i2c DT_N_S_soc_S_i2c_40004800
#define DT_N_NODELABEL_i2c_smb_2      DT_N_S_soc_S_i2c_40004800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40004800_REG_NUM 1
#define DT_N_S_soc_S_i2c_40004800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_REG_IDX_0_VAL_ADDRESS 1073760256 /* 0x40004800 */
#define DT_N_S_soc_S_i2c_40004800_REG_IDX_0_VAL_SIZE 128 /* 0x80 */
#define DT_N_S_soc_S_i2c_40004800_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40004800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40004800_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_40004800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_IRQ_IDX_0_VAL_irq 22
#define DT_N_S_soc_S_i2c_40004800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_i2c_40004800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_40004800_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c_40004800_COMPAT_MATCHES_microchip_xec_i2c 1
#define DT_N_S_soc_S_i2c_40004800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_i2c_40004800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_COMPAT_MODEL_IDX_0 "xec-i2c"
#define DT_N_S_soc_S_i2c_40004800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40004800_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_40004800_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_40004800_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40004800_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_40004800_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013
#define DT_N_S_soc_S_i2c_40004800_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40004800_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40004800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40004800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_status "okay"
#define DT_N_S_soc_S_i2c_40004800_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_40004800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40004800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40004800_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_i2c_40004800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40004800_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_40004800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40004800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004800, status, 0)
#define DT_N_S_soc_S_i2c_40004800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004800, status, 0)
#define DT_N_S_soc_S_i2c_40004800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004800_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40004800_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_compatible {"microchip,xec-i2c"}
#define DT_N_S_soc_S_i2c_40004800_P_compatible_IDX_0 "microchip,xec-i2c"
#define DT_N_S_soc_S_i2c_40004800_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-i2c
#define DT_N_S_soc_S_i2c_40004800_P_compatible_IDX_0_STRING_TOKEN microchip_xec_i2c
#define DT_N_S_soc_S_i2c_40004800_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_I2C
#define DT_N_S_soc_S_i2c_40004800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004800, compatible, 0)
#define DT_N_S_soc_S_i2c_40004800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004800, compatible, 0)
#define DT_N_S_soc_S_i2c_40004800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004800_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40004800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_reg {1073760256 /* 0x40004800 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_i2c_40004800_P_reg_IDX_0 1073760256
#define DT_N_S_soc_S_i2c_40004800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_reg_IDX_1 128
#define DT_N_S_soc_S_i2c_40004800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_interrupts {22 /* 0x16 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_i2c_40004800_P_interrupts_IDX_0 22
#define DT_N_S_soc_S_i2c_40004800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_i2c_40004800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_40004800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40004800_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_sq_size 4
#define DT_N_S_soc_S_i2c_40004800_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_cq_size 4
#define DT_N_S_soc_S_i2c_40004800_P_cq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013
#define DT_N_S_soc_S_i2c_40004800_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013
#define DT_N_S_soc_S_i2c_40004800_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012
#define DT_N_S_soc_S_i2c_40004800_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012
#define DT_N_S_soc_S_i2c_40004800_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004800, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_i2c_40004800, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40004800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004800, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40004800, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40004800_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004800, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40004800, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004800, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40004800, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004800_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_i2c_40004800_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c_40004800_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_40004800_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2c_40004800_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2c_40004800_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40004800_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004800, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40004800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004800, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40004800_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004800_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c_40004800_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_port_sel 7
#define DT_N_S_soc_S_i2c_40004800_P_port_sel_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_girq 13
#define DT_N_S_soc_S_i2c_40004800_P_girq_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_girq_bit 2
#define DT_N_S_soc_S_i2c_40004800_P_girq_bit_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_pcrs {3 /* 0x3 */, 14 /* 0xe */}
#define DT_N_S_soc_S_i2c_40004800_P_pcrs_IDX_0 3
#define DT_N_S_soc_S_i2c_40004800_P_pcrs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_pcrs_IDX_1 14
#define DT_N_S_soc_S_i2c_40004800_P_pcrs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_pcrs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004800, pcrs, 0) \
	fn(DT_N_S_soc_S_i2c_40004800, pcrs, 1)
#define DT_N_S_soc_S_i2c_40004800_P_pcrs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004800, pcrs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40004800, pcrs, 1)
#define DT_N_S_soc_S_i2c_40004800_P_pcrs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004800, pcrs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40004800, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004800_P_pcrs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004800, pcrs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40004800, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004800_P_pcrs_LEN 2
#define DT_N_S_soc_S_i2c_40004800_P_pcrs_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_sda_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_sda_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000
#define DT_N_S_soc_S_i2c_40004800_P_sda_gpios_IDX_0_VAL_pin 10
#define DT_N_S_soc_S_i2c_40004800_P_sda_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_sda_gpios_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_i2c_40004800_P_sda_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_sda_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004800, sda_gpios, 0)
#define DT_N_S_soc_S_i2c_40004800_P_sda_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004800, sda_gpios, 0)
#define DT_N_S_soc_S_i2c_40004800_P_sda_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004800, sda_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004800_P_sda_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004800, sda_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004800_P_sda_gpios_LEN 1
#define DT_N_S_soc_S_i2c_40004800_P_sda_gpios_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_scl_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_scl_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000
#define DT_N_S_soc_S_i2c_40004800_P_scl_gpios_IDX_0_VAL_pin 11
#define DT_N_S_soc_S_i2c_40004800_P_scl_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_scl_gpios_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_i2c_40004800_P_scl_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_40004800_P_scl_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004800, scl_gpios, 0)
#define DT_N_S_soc_S_i2c_40004800_P_scl_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004800, scl_gpios, 0)
#define DT_N_S_soc_S_i2c_40004800_P_scl_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004800, scl_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004800_P_scl_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004800, scl_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004800_P_scl_gpios_LEN 1
#define DT_N_S_soc_S_i2c_40004800_P_scl_gpios_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40004c00
 *
 * Node identifier: DT_N_S_soc_S_i2c_40004c00
 *
 * Binding (compatible = microchip,xec-i2c):
 *   $ZEPHYR_BASE/dts/bindings/i2c/microchip,xec-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40004c00_PATH "/soc/i2c@40004c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40004c00_FULL_NAME "i2c@40004c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40004c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40004c00_CHILD_IDX 15

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_40004c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_40004c00_FOREACH_NODELABEL(fn) fn(i2c_smb_3)
#define DT_N_S_soc_S_i2c_40004c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c_smb_3, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40004c00_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_40004c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_40004c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40004c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40004c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40004c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40004c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40004c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40004c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40004c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40004c00_ORD 46
#define DT_N_S_soc_S_i2c_40004c00_ORD_STR_SORTABLE 00046

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40004c00_REQUIRES_ORDS \
	10, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40004c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40004c00_EXISTS 1
#define DT_N_ALIAS_i2c_smb_3          DT_N_S_soc_S_i2c_40004c00
#define DT_N_INST_3_microchip_xec_i2c DT_N_S_soc_S_i2c_40004c00
#define DT_N_NODELABEL_i2c_smb_3      DT_N_S_soc_S_i2c_40004c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40004c00_REG_NUM 1
#define DT_N_S_soc_S_i2c_40004c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004c00_REG_IDX_0_VAL_ADDRESS 1073761280 /* 0x40004c00 */
#define DT_N_S_soc_S_i2c_40004c00_REG_IDX_0_VAL_SIZE 128 /* 0x80 */
#define DT_N_S_soc_S_i2c_40004c00_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40004c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40004c00_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_40004c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004c00_IRQ_IDX_0_VAL_irq 23
#define DT_N_S_soc_S_i2c_40004c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40004c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004c00_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_i2c_40004c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40004c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_40004c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c_40004c00_COMPAT_MATCHES_microchip_xec_i2c 1
#define DT_N_S_soc_S_i2c_40004c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004c00_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_i2c_40004c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004c00_COMPAT_MODEL_IDX_0 "xec-i2c"
#define DT_N_S_soc_S_i2c_40004c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40004c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40004c00_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40004c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40004c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40004c00_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40004c00_P_status "disabled"
#define DT_N_S_soc_S_i2c_40004c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_40004c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40004c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40004c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_40004c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40004c00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40004c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40004c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40004c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004c00, status, 0)
#define DT_N_S_soc_S_i2c_40004c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004c00, status, 0)
#define DT_N_S_soc_S_i2c_40004c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004c00_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40004c00_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40004c00_P_compatible {"microchip,xec-i2c"}
#define DT_N_S_soc_S_i2c_40004c00_P_compatible_IDX_0 "microchip,xec-i2c"
#define DT_N_S_soc_S_i2c_40004c00_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-i2c
#define DT_N_S_soc_S_i2c_40004c00_P_compatible_IDX_0_STRING_TOKEN microchip_xec_i2c
#define DT_N_S_soc_S_i2c_40004c00_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_I2C
#define DT_N_S_soc_S_i2c_40004c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004c00, compatible, 0)
#define DT_N_S_soc_S_i2c_40004c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004c00, compatible, 0)
#define DT_N_S_soc_S_i2c_40004c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004c00_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40004c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40004c00_P_reg {1073761280 /* 0x40004c00 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_i2c_40004c00_P_reg_IDX_0 1073761280
#define DT_N_S_soc_S_i2c_40004c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004c00_P_reg_IDX_1 128
#define DT_N_S_soc_S_i2c_40004c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40004c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40004c00_P_interrupts {23 /* 0x17 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_i2c_40004c00_P_interrupts_IDX_0 23
#define DT_N_S_soc_S_i2c_40004c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004c00_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_i2c_40004c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40004c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40004c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_40004c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_40004c00_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40004c00_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40004c00_P_sq_size 4
#define DT_N_S_soc_S_i2c_40004c00_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40004c00_P_cq_size 4
#define DT_N_S_soc_S_i2c_40004c00_P_cq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40004c00_P_girq 13
#define DT_N_S_soc_S_i2c_40004c00_P_girq_EXISTS 1
#define DT_N_S_soc_S_i2c_40004c00_P_girq_bit 3
#define DT_N_S_soc_S_i2c_40004c00_P_girq_bit_EXISTS 1
#define DT_N_S_soc_S_i2c_40004c00_P_pcrs {3 /* 0x3 */, 15 /* 0xf */}
#define DT_N_S_soc_S_i2c_40004c00_P_pcrs_IDX_0 3
#define DT_N_S_soc_S_i2c_40004c00_P_pcrs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004c00_P_pcrs_IDX_1 15
#define DT_N_S_soc_S_i2c_40004c00_P_pcrs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40004c00_P_pcrs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004c00, pcrs, 0) \
	fn(DT_N_S_soc_S_i2c_40004c00, pcrs, 1)
#define DT_N_S_soc_S_i2c_40004c00_P_pcrs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004c00, pcrs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40004c00, pcrs, 1)
#define DT_N_S_soc_S_i2c_40004c00_P_pcrs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004c00, pcrs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40004c00, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004c00_P_pcrs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004c00, pcrs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40004c00, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004c00_P_pcrs_LEN 2
#define DT_N_S_soc_S_i2c_40004c00_P_pcrs_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005000
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005000
 *
 * Binding (compatible = microchip,xec-i2c):
 *   $ZEPHYR_BASE/dts/bindings/i2c/microchip,xec-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005000_PATH "/soc/i2c@40005000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005000_FULL_NAME "i2c@40005000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005000_CHILD_IDX 16

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_40005000_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_40005000_FOREACH_NODELABEL(fn) fn(i2c_smb_4)
#define DT_N_S_soc_S_i2c_40005000_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c_smb_4, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40005000_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_40005000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_40005000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40005000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005000_ORD 47
#define DT_N_S_soc_S_i2c_40005000_ORD_STR_SORTABLE 00047

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005000_REQUIRES_ORDS \
	10, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005000_EXISTS 1
#define DT_N_ALIAS_i2c_smb_4          DT_N_S_soc_S_i2c_40005000
#define DT_N_INST_4_microchip_xec_i2c DT_N_S_soc_S_i2c_40005000
#define DT_N_NODELABEL_i2c_smb_4      DT_N_S_soc_S_i2c_40005000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005000_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005000_REG_IDX_0_VAL_ADDRESS 1073762304 /* 0x40005000 */
#define DT_N_S_soc_S_i2c_40005000_REG_IDX_0_VAL_SIZE 128 /* 0x80 */
#define DT_N_S_soc_S_i2c_40005000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_40005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005000_IRQ_IDX_0_VAL_irq 158
#define DT_N_S_soc_S_i2c_40005000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_i2c_40005000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_40005000_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c_40005000_COMPAT_MATCHES_microchip_xec_i2c 1
#define DT_N_S_soc_S_i2c_40005000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005000_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_i2c_40005000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005000_COMPAT_MODEL_IDX_0 "xec-i2c"
#define DT_N_S_soc_S_i2c_40005000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40005000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40005000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40005000_P_status "disabled"
#define DT_N_S_soc_S_i2c_40005000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_40005000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40005000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40005000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_40005000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40005000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40005000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40005000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40005000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005000, status, 0)
#define DT_N_S_soc_S_i2c_40005000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005000, status, 0)
#define DT_N_S_soc_S_i2c_40005000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005000_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40005000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005000_P_compatible {"microchip,xec-i2c"}
#define DT_N_S_soc_S_i2c_40005000_P_compatible_IDX_0 "microchip,xec-i2c"
#define DT_N_S_soc_S_i2c_40005000_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-i2c
#define DT_N_S_soc_S_i2c_40005000_P_compatible_IDX_0_STRING_TOKEN microchip_xec_i2c
#define DT_N_S_soc_S_i2c_40005000_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_I2C
#define DT_N_S_soc_S_i2c_40005000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005000, compatible, 0)
#define DT_N_S_soc_S_i2c_40005000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005000, compatible, 0)
#define DT_N_S_soc_S_i2c_40005000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005000_P_reg {1073762304 /* 0x40005000 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_i2c_40005000_P_reg_IDX_0 1073762304
#define DT_N_S_soc_S_i2c_40005000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005000_P_reg_IDX_1 128
#define DT_N_S_soc_S_i2c_40005000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005000_P_interrupts {158 /* 0x9e */, 1 /* 0x1 */}
#define DT_N_S_soc_S_i2c_40005000_P_interrupts_IDX_0 158
#define DT_N_S_soc_S_i2c_40005000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_i2c_40005000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_40005000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_40005000_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40005000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005000_P_sq_size 4
#define DT_N_S_soc_S_i2c_40005000_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40005000_P_cq_size 4
#define DT_N_S_soc_S_i2c_40005000_P_cq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40005000_P_girq 13
#define DT_N_S_soc_S_i2c_40005000_P_girq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005000_P_girq_bit 4
#define DT_N_S_soc_S_i2c_40005000_P_girq_bit_EXISTS 1
#define DT_N_S_soc_S_i2c_40005000_P_pcrs {3 /* 0x3 */, 20 /* 0x14 */}
#define DT_N_S_soc_S_i2c_40005000_P_pcrs_IDX_0 3
#define DT_N_S_soc_S_i2c_40005000_P_pcrs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005000_P_pcrs_IDX_1 20
#define DT_N_S_soc_S_i2c_40005000_P_pcrs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005000_P_pcrs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005000, pcrs, 0) \
	fn(DT_N_S_soc_S_i2c_40005000, pcrs, 1)
#define DT_N_S_soc_S_i2c_40005000_P_pcrs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005000, pcrs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005000, pcrs, 1)
#define DT_N_S_soc_S_i2c_40005000_P_pcrs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005000, pcrs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005000, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005000_P_pcrs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005000, pcrs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005000, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005000_P_pcrs_LEN 2
#define DT_N_S_soc_S_i2c_40005000_P_pcrs_EXISTS 1

/*
 * Devicetree node: /soc/pcr@40080100
 *
 * Node identifier: DT_N_S_soc_S_pcr_40080100
 *
 * Binding (compatible = microchip,xec-pcr):
 *   $ZEPHYR_BASE/dts/bindings/clock/microchip,xec-pcr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pcr_40080100_PATH "/soc/pcr@40080100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pcr_40080100_FULL_NAME "pcr@40080100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pcr_40080100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pcr_40080100_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pcr_40080100_NODELABEL_NUM 1
#define DT_N_S_soc_S_pcr_40080100_FOREACH_NODELABEL(fn) fn(pcr)
#define DT_N_S_soc_S_pcr_40080100_FOREACH_NODELABEL_VARGS(fn, ...) fn(pcr, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pcr_40080100_CHILD_NUM 0
#define DT_N_S_soc_S_pcr_40080100_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pcr_40080100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pcr_40080100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pcr_40080100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pcr_40080100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pcr_40080100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pcr_40080100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pcr_40080100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pcr_40080100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pcr_40080100_ORD 48
#define DT_N_S_soc_S_pcr_40080100_ORD_STR_SORTABLE 00048

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pcr_40080100_REQUIRES_ORDS \
	10, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pcr_40080100_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pcr_40080100_EXISTS 1
#define DT_N_INST_0_microchip_xec_pcr DT_N_S_soc_S_pcr_40080100
#define DT_N_NODELABEL_pcr            DT_N_S_soc_S_pcr_40080100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pcr_40080100_REG_NUM 2
#define DT_N_S_soc_S_pcr_40080100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_REG_IDX_0_VAL_ADDRESS 1074266368 /* 0x40080100 */
#define DT_N_S_soc_S_pcr_40080100_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_soc_S_pcr_40080100_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_REG_IDX_1_VAL_ADDRESS 1073783808 /* 0x4000a400 */
#define DT_N_S_soc_S_pcr_40080100_REG_IDX_1_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_soc_S_pcr_40080100_REG_NAME_pcrr_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_REG_NAME_pcrr_VAL_ADDRESS DT_N_S_soc_S_pcr_40080100_REG_IDX_0_VAL_ADDRESS
#define DT_N_S_soc_S_pcr_40080100_REG_NAME_pcrr_VAL_SIZE DT_N_S_soc_S_pcr_40080100_REG_IDX_0_VAL_SIZE
#define DT_N_S_soc_S_pcr_40080100_REG_NAME_vbatr_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_REG_NAME_vbatr_VAL_ADDRESS DT_N_S_soc_S_pcr_40080100_REG_IDX_1_VAL_ADDRESS
#define DT_N_S_soc_S_pcr_40080100_REG_NAME_vbatr_VAL_SIZE DT_N_S_soc_S_pcr_40080100_REG_IDX_1_VAL_SIZE
#define DT_N_S_soc_S_pcr_40080100_RANGES_NUM 0
#define DT_N_S_soc_S_pcr_40080100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pcr_40080100_IRQ_NUM 0
#define DT_N_S_soc_S_pcr_40080100_IRQ_LEVEL 0
#define DT_N_S_soc_S_pcr_40080100_COMPAT_MATCHES_microchip_xec_pcr 1
#define DT_N_S_soc_S_pcr_40080100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_pcr_40080100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_COMPAT_MODEL_IDX_0 "xec-pcr"
#define DT_N_S_soc_S_pcr_40080100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pcr_40080100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pcr_40080100_P_wakeup_source 0
#define DT_N_S_soc_S_pcr_40080100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pcr_40080100_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_P_status "okay"
#define DT_N_S_soc_S_pcr_40080100_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_pcr_40080100_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_pcr_40080100_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pcr_40080100_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_pcr_40080100_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_pcr_40080100_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_pcr_40080100_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pcr_40080100_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pcr_40080100, status, 0)
#define DT_N_S_soc_S_pcr_40080100_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pcr_40080100, status, 0)
#define DT_N_S_soc_S_pcr_40080100_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pcr_40080100, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcr_40080100_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pcr_40080100, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcr_40080100_P_status_LEN 1
#define DT_N_S_soc_S_pcr_40080100_P_status_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_P_compatible {"microchip,xec-pcr"}
#define DT_N_S_soc_S_pcr_40080100_P_compatible_IDX_0 "microchip,xec-pcr"
#define DT_N_S_soc_S_pcr_40080100_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-pcr
#define DT_N_S_soc_S_pcr_40080100_P_compatible_IDX_0_STRING_TOKEN microchip_xec_pcr
#define DT_N_S_soc_S_pcr_40080100_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_PCR
#define DT_N_S_soc_S_pcr_40080100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pcr_40080100, compatible, 0)
#define DT_N_S_soc_S_pcr_40080100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pcr_40080100, compatible, 0)
#define DT_N_S_soc_S_pcr_40080100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pcr_40080100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcr_40080100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pcr_40080100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcr_40080100_P_compatible_LEN 1
#define DT_N_S_soc_S_pcr_40080100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_P_reg {1074266368 /* 0x40080100 */, 256 /* 0x100 */, 1073783808 /* 0x4000a400 */, 256 /* 0x100 */}
#define DT_N_S_soc_S_pcr_40080100_P_reg_IDX_0 1074266368
#define DT_N_S_soc_S_pcr_40080100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_P_reg_IDX_1 256
#define DT_N_S_soc_S_pcr_40080100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_P_reg_IDX_2 1073783808
#define DT_N_S_soc_S_pcr_40080100_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_P_reg_IDX_3 256
#define DT_N_S_soc_S_pcr_40080100_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_P_reg_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_P_reg_names {"pcrr", "vbatr"}
#define DT_N_S_soc_S_pcr_40080100_P_reg_names_IDX_0 "pcrr"
#define DT_N_S_soc_S_pcr_40080100_P_reg_names_IDX_0_STRING_UNQUOTED pcrr
#define DT_N_S_soc_S_pcr_40080100_P_reg_names_IDX_0_STRING_TOKEN pcrr
#define DT_N_S_soc_S_pcr_40080100_P_reg_names_IDX_0_STRING_UPPER_TOKEN PCRR
#define DT_N_S_soc_S_pcr_40080100_P_reg_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_P_reg_names_IDX_1 "vbatr"
#define DT_N_S_soc_S_pcr_40080100_P_reg_names_IDX_1_STRING_UNQUOTED vbatr
#define DT_N_S_soc_S_pcr_40080100_P_reg_names_IDX_1_STRING_TOKEN vbatr
#define DT_N_S_soc_S_pcr_40080100_P_reg_names_IDX_1_STRING_UPPER_TOKEN VBATR
#define DT_N_S_soc_S_pcr_40080100_P_reg_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_P_reg_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pcr_40080100, reg_names, 0) \
	fn(DT_N_S_soc_S_pcr_40080100, reg_names, 1)
#define DT_N_S_soc_S_pcr_40080100_P_reg_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pcr_40080100, reg_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pcr_40080100, reg_names, 1)
#define DT_N_S_soc_S_pcr_40080100_P_reg_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pcr_40080100, reg_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pcr_40080100, reg_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pcr_40080100_P_reg_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pcr_40080100, reg_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pcr_40080100, reg_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pcr_40080100_P_reg_names_LEN 2
#define DT_N_S_soc_S_pcr_40080100_P_reg_names_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pcr_40080100_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_P_core_clock_div 1
#define DT_N_S_soc_S_pcr_40080100_P_core_clock_div_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_P_pll_32k_src 0
#define DT_N_S_soc_S_pcr_40080100_P_pll_32k_src_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_P_periph_32k_src 0
#define DT_N_S_soc_S_pcr_40080100_P_periph_32k_src_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_P_xtal_single_ended 0
#define DT_N_S_soc_S_pcr_40080100_P_xtal_single_ended_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_P_clk32kmon_period_min 1435
#define DT_N_S_soc_S_pcr_40080100_P_clk32kmon_period_min_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_P_clk32kmon_period_max 1495
#define DT_N_S_soc_S_pcr_40080100_P_clk32kmon_period_max_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_P_clk32kmon_duty_cycle_var_max 132
#define DT_N_S_soc_S_pcr_40080100_P_clk32kmon_duty_cycle_var_max_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_P_clk32kmon_valid_min 4
#define DT_N_S_soc_S_pcr_40080100_P_clk32kmon_valid_min_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_P_xtal_enable_delay_ms 300
#define DT_N_S_soc_S_pcr_40080100_P_xtal_enable_delay_ms_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_P_pll_lock_timeout_ms 30
#define DT_N_S_soc_S_pcr_40080100_P_pll_lock_timeout_ms_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_P_clkmon_bypass 0
#define DT_N_S_soc_S_pcr_40080100_P_clkmon_bypass_EXISTS 1
#define DT_N_S_soc_S_pcr_40080100_P_internal_osc_disable 0
#define DT_N_S_soc_S_pcr_40080100_P_internal_osc_disable_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/peci_dat_gpio042
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_PATH "/soc/pin-controller@40081000/peci_dat_gpio042"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_FULL_NAME "peci_dat_gpio042"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_CHILD_IDX 54

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_FOREACH_NODELABEL(fn) fn(peci_dat_gpio042)
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_FOREACH_NODELABEL_VARGS(fn, ...) fn(peci_dat_gpio042, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_ORD 49
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_ORD_STR_SORTABLE 00049

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_SUPPORTS_ORDS \
	53, /* /soc/peci@40006400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_EXISTS 1
#define DT_N_NODELABEL_peci_dat_gpio042 DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_pinmux 545
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/peci_dat_gpio042_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_PATH "/soc/pin-controller@40081000/peci_dat_gpio042_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_FULL_NAME "peci_dat_gpio042_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_CHILD_IDX 63

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_FOREACH_NODELABEL(fn) fn(peci_dat_gpio042_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(peci_dat_gpio042_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_ORD 50
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_ORD_STR_SORTABLE 00050

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_SUPPORTS_ORDS \
	53, /* /soc/peci@40006400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_EXISTS 1
#define DT_N_NODELABEL_peci_dat_gpio042_sleep DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_pinmux 545
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/vref_vtt_gpio044
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_PATH "/soc/pin-controller@40081000/vref_vtt_gpio044"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_FULL_NAME "vref_vtt_gpio044"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_CHILD_IDX 55

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_FOREACH_NODELABEL(fn) fn(vref_vtt_gpio044)
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_FOREACH_NODELABEL_VARGS(fn, ...) fn(vref_vtt_gpio044, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_ORD 51
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_ORD_STR_SORTABLE 00051

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_SUPPORTS_ORDS \
	53, /* /soc/peci@40006400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_EXISTS 1
#define DT_N_NODELABEL_vref_vtt_gpio044 DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_pinmux 577
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/vref_vtt_gpio044_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_PATH "/soc/pin-controller@40081000/vref_vtt_gpio044_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_FULL_NAME "vref_vtt_gpio044_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_CHILD_IDX 64

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_FOREACH_NODELABEL(fn) fn(vref_vtt_gpio044_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(vref_vtt_gpio044_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_ORD 52
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_ORD_STR_SORTABLE 00052

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_SUPPORTS_ORDS \
	53, /* /soc/peci@40006400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_EXISTS 1
#define DT_N_NODELABEL_vref_vtt_gpio044_sleep DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_pinmux 577
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/peci@40006400
 *
 * Node identifier: DT_N_S_soc_S_peci_40006400
 *
 * Binding (compatible = microchip,xec-peci):
 *   $ZEPHYR_BASE/dts/bindings/peci/microchip,xec-peci.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peci_40006400_PATH "/soc/peci@40006400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peci_40006400_FULL_NAME "peci@40006400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_peci_40006400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_peci_40006400_CHILD_IDX 38

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_peci_40006400_NODELABEL_NUM 1
#define DT_N_S_soc_S_peci_40006400_FOREACH_NODELABEL(fn) fn(peci0)
#define DT_N_S_soc_S_peci_40006400_FOREACH_NODELABEL_VARGS(fn, ...) fn(peci0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_peci_40006400_CHILD_NUM 0
#define DT_N_S_soc_S_peci_40006400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_peci_40006400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peci_40006400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_peci_40006400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peci_40006400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_peci_40006400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peci_40006400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_peci_40006400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_peci_40006400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peci_40006400_ORD 53
#define DT_N_S_soc_S_peci_40006400_ORD_STR_SORTABLE 00053

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peci_40006400_REQUIRES_ORDS \
	10, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */ \
	49, /* /soc/pin-controller@40081000/peci_dat_gpio042 */ \
	50, /* /soc/pin-controller@40081000/peci_dat_gpio042_sleep */ \
	51, /* /soc/pin-controller@40081000/vref_vtt_gpio044 */ \
	52, /* /soc/pin-controller@40081000/vref_vtt_gpio044_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peci_40006400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peci_40006400_EXISTS 1
#define DT_N_ALIAS_peci_0              DT_N_S_soc_S_peci_40006400
#define DT_N_INST_0_microchip_xec_peci DT_N_S_soc_S_peci_40006400
#define DT_N_NODELABEL_peci0           DT_N_S_soc_S_peci_40006400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peci_40006400_REG_NUM 1
#define DT_N_S_soc_S_peci_40006400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_REG_IDX_0_VAL_ADDRESS 1073767424 /* 0x40006400 */
#define DT_N_S_soc_S_peci_40006400_REG_IDX_0_VAL_SIZE 128 /* 0x80 */
#define DT_N_S_soc_S_peci_40006400_RANGES_NUM 0
#define DT_N_S_soc_S_peci_40006400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peci_40006400_IRQ_NUM 1
#define DT_N_S_soc_S_peci_40006400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_IRQ_IDX_0_VAL_irq 70
#define DT_N_S_soc_S_peci_40006400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_IRQ_IDX_0_VAL_priority 4
#define DT_N_S_soc_S_peci_40006400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_peci_40006400_IRQ_LEVEL 1
#define DT_N_S_soc_S_peci_40006400_COMPAT_MATCHES_microchip_xec_peci 1
#define DT_N_S_soc_S_peci_40006400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_peci_40006400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_COMPAT_MODEL_IDX_0 "xec-peci"
#define DT_N_S_soc_S_peci_40006400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peci_40006400_PINCTRL_NUM 2
#define DT_N_S_soc_S_peci_40006400_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_peci_40006400_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_peci_40006400_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_peci_40006400_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042
#define DT_N_S_soc_S_peci_40006400_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044
#define DT_N_S_soc_S_peci_40006400_PINCTRL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_PINCTRL_IDX_1_TOKEN sleep
#define DT_N_S_soc_S_peci_40006400_PINCTRL_IDX_1_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_peci_40006400_PINCTRL_NAME_sleep_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_PINCTRL_NAME_sleep_IDX 1
#define DT_N_S_soc_S_peci_40006400_PINCTRL_NAME_sleep_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep
#define DT_N_S_soc_S_peci_40006400_PINCTRL_NAME_sleep_IDX_1_PH DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep

/* Generic property macros: */
#define DT_N_S_soc_S_peci_40006400_P_wakeup_source 0
#define DT_N_S_soc_S_peci_40006400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_peci_40006400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_P_status "okay"
#define DT_N_S_soc_S_peci_40006400_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_peci_40006400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peci_40006400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peci_40006400_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_peci_40006400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peci_40006400_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peci_40006400_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peci_40006400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peci_40006400, status, 0)
#define DT_N_S_soc_S_peci_40006400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_peci_40006400, status, 0)
#define DT_N_S_soc_S_peci_40006400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peci_40006400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peci_40006400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_peci_40006400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peci_40006400_P_status_LEN 1
#define DT_N_S_soc_S_peci_40006400_P_status_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_P_compatible {"microchip,xec-peci"}
#define DT_N_S_soc_S_peci_40006400_P_compatible_IDX_0 "microchip,xec-peci"
#define DT_N_S_soc_S_peci_40006400_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-peci
#define DT_N_S_soc_S_peci_40006400_P_compatible_IDX_0_STRING_TOKEN microchip_xec_peci
#define DT_N_S_soc_S_peci_40006400_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_PECI
#define DT_N_S_soc_S_peci_40006400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peci_40006400, compatible, 0)
#define DT_N_S_soc_S_peci_40006400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_peci_40006400, compatible, 0)
#define DT_N_S_soc_S_peci_40006400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peci_40006400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peci_40006400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_peci_40006400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peci_40006400_P_compatible_LEN 1
#define DT_N_S_soc_S_peci_40006400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_P_reg {1073767424 /* 0x40006400 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_peci_40006400_P_reg_IDX_0 1073767424
#define DT_N_S_soc_S_peci_40006400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_P_reg_IDX_1 128
#define DT_N_S_soc_S_peci_40006400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_P_reg_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_P_interrupts {70 /* 0x46 */, 4 /* 0x4 */}
#define DT_N_S_soc_S_peci_40006400_P_interrupts_IDX_0 70
#define DT_N_S_soc_S_peci_40006400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_P_interrupts_IDX_1 4
#define DT_N_S_soc_S_peci_40006400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_peci_40006400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peci_40006400, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_peci_40006400, pinctrl_0, 1)
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_peci_40006400, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_peci_40006400, pinctrl_0, 1)
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peci_40006400, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peci_40006400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_peci_40006400, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_peci_40006400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_1_IDX_0 DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_1_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_1_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_1_IDX_1 DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_1_IDX_1_PH DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_1_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_1_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peci_40006400, pinctrl_1, 0) \
	fn(DT_N_S_soc_S_peci_40006400, pinctrl_1, 1)
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_1_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_peci_40006400, pinctrl_1, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_peci_40006400, pinctrl_1, 1)
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_1_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peci_40006400, pinctrl_1, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peci_40006400, pinctrl_1, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_1_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_peci_40006400, pinctrl_1, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_peci_40006400, pinctrl_1, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_1_LEN 2
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_1_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_names {"default", "sleep"}
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_names_IDX_1 "sleep"
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_names_IDX_1_STRING_UNQUOTED sleep
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_names_IDX_1_STRING_TOKEN sleep
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_names_IDX_1_STRING_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peci_40006400, pinctrl_names, 0) \
	fn(DT_N_S_soc_S_peci_40006400, pinctrl_names, 1)
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_peci_40006400, pinctrl_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_peci_40006400, pinctrl_names, 1)
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peci_40006400, pinctrl_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peci_40006400, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_peci_40006400, pinctrl_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_peci_40006400, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_names_LEN 2
#define DT_N_S_soc_S_peci_40006400_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_P_girqs {17 /* 0x11 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_peci_40006400_P_girqs_IDX_0 17
#define DT_N_S_soc_S_peci_40006400_P_girqs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_P_girqs_IDX_1 0
#define DT_N_S_soc_S_peci_40006400_P_girqs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_P_girqs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peci_40006400, girqs, 0) \
	fn(DT_N_S_soc_S_peci_40006400, girqs, 1)
#define DT_N_S_soc_S_peci_40006400_P_girqs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_peci_40006400, girqs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_peci_40006400, girqs, 1)
#define DT_N_S_soc_S_peci_40006400_P_girqs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peci_40006400, girqs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peci_40006400, girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peci_40006400_P_girqs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_peci_40006400, girqs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_peci_40006400, girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peci_40006400_P_girqs_LEN 2
#define DT_N_S_soc_S_peci_40006400_P_girqs_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_P_pcrs {1 /* 0x1 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peci_40006400_P_pcrs_IDX_0 1
#define DT_N_S_soc_S_peci_40006400_P_pcrs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_P_pcrs_IDX_1 1
#define DT_N_S_soc_S_peci_40006400_P_pcrs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peci_40006400_P_pcrs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peci_40006400, pcrs, 0) \
	fn(DT_N_S_soc_S_peci_40006400, pcrs, 1)
#define DT_N_S_soc_S_peci_40006400_P_pcrs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_peci_40006400, pcrs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_peci_40006400, pcrs, 1)
#define DT_N_S_soc_S_peci_40006400_P_pcrs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peci_40006400, pcrs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peci_40006400, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peci_40006400_P_pcrs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_peci_40006400, pcrs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_peci_40006400, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peci_40006400_P_pcrs_LEN 2
#define DT_N_S_soc_S_peci_40006400_P_pcrs_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/ps2_clk0b_gpio007
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_PATH "/soc/pin-controller@40081000/ps2_clk0b_gpio007"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_FULL_NAME "ps2_clk0b_gpio007"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_CHILD_IDX 56

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_FOREACH_NODELABEL(fn) fn(ps2_clk0b_gpio007)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_FOREACH_NODELABEL_VARGS(fn, ...) fn(ps2_clk0b_gpio007, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_ORD 54
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_ORD_STR_SORTABLE 00054

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_SUPPORTS_ORDS \
	58, /* /soc/ps2@40009000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_EXISTS 1
#define DT_N_NODELABEL_ps2_clk0b_gpio007 DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_pinmux 1136
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/ps2_clk0b_gpio007_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_PATH "/soc/pin-controller@40081000/ps2_clk0b_gpio007_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_FULL_NAME "ps2_clk0b_gpio007_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_CHILD_IDX 65

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_FOREACH_NODELABEL(fn) fn(ps2_clk0b_gpio007_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(ps2_clk0b_gpio007_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_ORD 55
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_ORD_STR_SORTABLE 00055

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_SUPPORTS_ORDS \
	58, /* /soc/ps2@40009000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_EXISTS 1
#define DT_N_NODELABEL_ps2_clk0b_gpio007_sleep DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_pinmux 1136
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/ps2_dat0b_gpio010
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_PATH "/soc/pin-controller@40081000/ps2_dat0b_gpio010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_FULL_NAME "ps2_dat0b_gpio010"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_CHILD_IDX 57

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_FOREACH_NODELABEL(fn) fn(ps2_dat0b_gpio010)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_FOREACH_NODELABEL_VARGS(fn, ...) fn(ps2_dat0b_gpio010, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_ORD 56
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_ORD_STR_SORTABLE 00056

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_SUPPORTS_ORDS \
	58, /* /soc/ps2@40009000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_EXISTS 1
#define DT_N_NODELABEL_ps2_dat0b_gpio010 DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_pinmux 1152
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/ps2_dat0b_gpio010_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_PATH "/soc/pin-controller@40081000/ps2_dat0b_gpio010_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_FULL_NAME "ps2_dat0b_gpio010_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_CHILD_IDX 66

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_FOREACH_NODELABEL(fn) fn(ps2_dat0b_gpio010_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(ps2_dat0b_gpio010_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_ORD 57
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_ORD_STR_SORTABLE 00057

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_SUPPORTS_ORDS \
	58, /* /soc/ps2@40009000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_EXISTS 1
#define DT_N_NODELABEL_ps2_dat0b_gpio010_sleep DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_pinmux 1152
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/ps2@40009000
 *
 * Node identifier: DT_N_S_soc_S_ps2_40009000
 *
 * Binding (compatible = microchip,xec-ps2):
 *   $ZEPHYR_BASE/dts/bindings/ps2/microchip,xec-ps2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ps2_40009000_PATH "/soc/ps2@40009000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ps2_40009000_FULL_NAME "ps2@40009000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ps2_40009000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ps2_40009000_CHILD_IDX 25

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_ps2_40009000_NODELABEL_NUM 1
#define DT_N_S_soc_S_ps2_40009000_FOREACH_NODELABEL(fn) fn(ps2_0)
#define DT_N_S_soc_S_ps2_40009000_FOREACH_NODELABEL_VARGS(fn, ...) fn(ps2_0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ps2_40009000_CHILD_NUM 0
#define DT_N_S_soc_S_ps2_40009000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_ps2_40009000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ps2_40009000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ps2_40009000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ps2_40009000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ps2_40009000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ps2_40009000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ps2_40009000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ps2_40009000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ps2_40009000_ORD 58
#define DT_N_S_soc_S_ps2_40009000_ORD_STR_SORTABLE 00058

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ps2_40009000_REQUIRES_ORDS \
	10, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */ \
	54, /* /soc/pin-controller@40081000/ps2_clk0b_gpio007 */ \
	55, /* /soc/pin-controller@40081000/ps2_clk0b_gpio007_sleep */ \
	56, /* /soc/pin-controller@40081000/ps2_dat0b_gpio010 */ \
	57, /* /soc/pin-controller@40081000/ps2_dat0b_gpio010_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ps2_40009000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ps2_40009000_EXISTS 1
#define DT_N_INST_0_microchip_xec_ps2 DT_N_S_soc_S_ps2_40009000
#define DT_N_NODELABEL_ps2_0          DT_N_S_soc_S_ps2_40009000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ps2_40009000_REG_NUM 1
#define DT_N_S_soc_S_ps2_40009000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_REG_IDX_0_VAL_ADDRESS 1073778688 /* 0x40009000 */
#define DT_N_S_soc_S_ps2_40009000_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_ps2_40009000_RANGES_NUM 0
#define DT_N_S_soc_S_ps2_40009000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ps2_40009000_IRQ_NUM 1
#define DT_N_S_soc_S_ps2_40009000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_IRQ_IDX_0_VAL_irq 100
#define DT_N_S_soc_S_ps2_40009000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_ps2_40009000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_ps2_40009000_IRQ_LEVEL 1
#define DT_N_S_soc_S_ps2_40009000_COMPAT_MATCHES_microchip_xec_ps2 1
#define DT_N_S_soc_S_ps2_40009000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_ps2_40009000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_COMPAT_MODEL_IDX_0 "xec-ps2"
#define DT_N_S_soc_S_ps2_40009000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ps2_40009000_PINCTRL_NUM 2
#define DT_N_S_soc_S_ps2_40009000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_ps2_40009000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_ps2_40009000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_ps2_40009000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007
#define DT_N_S_soc_S_ps2_40009000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010
#define DT_N_S_soc_S_ps2_40009000_PINCTRL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_PINCTRL_IDX_1_TOKEN sleep
#define DT_N_S_soc_S_ps2_40009000_PINCTRL_IDX_1_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_ps2_40009000_PINCTRL_NAME_sleep_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_PINCTRL_NAME_sleep_IDX 1
#define DT_N_S_soc_S_ps2_40009000_PINCTRL_NAME_sleep_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep
#define DT_N_S_soc_S_ps2_40009000_PINCTRL_NAME_sleep_IDX_1_PH DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep

/* Generic property macros: */
#define DT_N_S_soc_S_ps2_40009000_P_wakeup_source 0
#define DT_N_S_soc_S_ps2_40009000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_ps2_40009000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_P_status "okay"
#define DT_N_S_soc_S_ps2_40009000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_ps2_40009000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_ps2_40009000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ps2_40009000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_ps2_40009000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_ps2_40009000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_ps2_40009000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ps2_40009000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ps2_40009000, status, 0)
#define DT_N_S_soc_S_ps2_40009000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ps2_40009000, status, 0)
#define DT_N_S_soc_S_ps2_40009000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ps2_40009000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ps2_40009000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ps2_40009000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ps2_40009000_P_status_LEN 1
#define DT_N_S_soc_S_ps2_40009000_P_status_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_P_compatible {"microchip,xec-ps2"}
#define DT_N_S_soc_S_ps2_40009000_P_compatible_IDX_0 "microchip,xec-ps2"
#define DT_N_S_soc_S_ps2_40009000_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-ps2
#define DT_N_S_soc_S_ps2_40009000_P_compatible_IDX_0_STRING_TOKEN microchip_xec_ps2
#define DT_N_S_soc_S_ps2_40009000_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_PS2
#define DT_N_S_soc_S_ps2_40009000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ps2_40009000, compatible, 0)
#define DT_N_S_soc_S_ps2_40009000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ps2_40009000, compatible, 0)
#define DT_N_S_soc_S_ps2_40009000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ps2_40009000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ps2_40009000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ps2_40009000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ps2_40009000_P_compatible_LEN 1
#define DT_N_S_soc_S_ps2_40009000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_P_reg {1073778688 /* 0x40009000 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_ps2_40009000_P_reg_IDX_0 1073778688
#define DT_N_S_soc_S_ps2_40009000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_P_reg_IDX_1 64
#define DT_N_S_soc_S_ps2_40009000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_P_reg_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_P_interrupts {100 /* 0x64 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_ps2_40009000_P_interrupts_IDX_0 100
#define DT_N_S_soc_S_ps2_40009000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_ps2_40009000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_ps2_40009000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ps2_40009000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_ps2_40009000, pinctrl_0, 1)
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ps2_40009000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ps2_40009000, pinctrl_0, 1)
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ps2_40009000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ps2_40009000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ps2_40009000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ps2_40009000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_1_IDX_0 DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_1_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_1_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_1_IDX_1 DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_1_IDX_1_PH DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_1_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_1_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ps2_40009000, pinctrl_1, 0) \
	fn(DT_N_S_soc_S_ps2_40009000, pinctrl_1, 1)
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ps2_40009000, pinctrl_1, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ps2_40009000, pinctrl_1, 1)
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_1_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ps2_40009000, pinctrl_1, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ps2_40009000, pinctrl_1, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ps2_40009000, pinctrl_1, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ps2_40009000, pinctrl_1, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_1_LEN 2
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_1_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_names {"default", "sleep"}
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_names_IDX_1 "sleep"
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_names_IDX_1_STRING_UNQUOTED sleep
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_names_IDX_1_STRING_TOKEN sleep
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_names_IDX_1_STRING_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ps2_40009000, pinctrl_names, 0) \
	fn(DT_N_S_soc_S_ps2_40009000, pinctrl_names, 1)
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ps2_40009000, pinctrl_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ps2_40009000, pinctrl_names, 1)
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ps2_40009000, pinctrl_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ps2_40009000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ps2_40009000, pinctrl_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ps2_40009000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_names_LEN 2
#define DT_N_S_soc_S_ps2_40009000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_P_girqs {18 /* 0x12 */, 10 /* 0xa */, 21 /* 0x15 */, 18 /* 0x12 */}
#define DT_N_S_soc_S_ps2_40009000_P_girqs_IDX_0 18
#define DT_N_S_soc_S_ps2_40009000_P_girqs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_P_girqs_IDX_1 10
#define DT_N_S_soc_S_ps2_40009000_P_girqs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_P_girqs_IDX_2 21
#define DT_N_S_soc_S_ps2_40009000_P_girqs_IDX_2_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_P_girqs_IDX_3 18
#define DT_N_S_soc_S_ps2_40009000_P_girqs_IDX_3_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_P_girqs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ps2_40009000, girqs, 0) \
	fn(DT_N_S_soc_S_ps2_40009000, girqs, 1) \
	fn(DT_N_S_soc_S_ps2_40009000, girqs, 2) \
	fn(DT_N_S_soc_S_ps2_40009000, girqs, 3)
#define DT_N_S_soc_S_ps2_40009000_P_girqs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ps2_40009000, girqs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ps2_40009000, girqs, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ps2_40009000, girqs, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ps2_40009000, girqs, 3)
#define DT_N_S_soc_S_ps2_40009000_P_girqs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ps2_40009000, girqs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ps2_40009000, girqs, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ps2_40009000, girqs, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ps2_40009000, girqs, 3, __VA_ARGS__)
#define DT_N_S_soc_S_ps2_40009000_P_girqs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ps2_40009000, girqs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ps2_40009000, girqs, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ps2_40009000, girqs, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ps2_40009000, girqs, 3, __VA_ARGS__)
#define DT_N_S_soc_S_ps2_40009000_P_girqs_LEN 4
#define DT_N_S_soc_S_ps2_40009000_P_girqs_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_P_pcrs {3 /* 0x3 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_ps2_40009000_P_pcrs_IDX_0 3
#define DT_N_S_soc_S_ps2_40009000_P_pcrs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_P_pcrs_IDX_1 5
#define DT_N_S_soc_S_ps2_40009000_P_pcrs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ps2_40009000_P_pcrs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ps2_40009000, pcrs, 0) \
	fn(DT_N_S_soc_S_ps2_40009000, pcrs, 1)
#define DT_N_S_soc_S_ps2_40009000_P_pcrs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ps2_40009000, pcrs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ps2_40009000, pcrs, 1)
#define DT_N_S_soc_S_ps2_40009000_P_pcrs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ps2_40009000, pcrs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ps2_40009000, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ps2_40009000_P_pcrs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ps2_40009000, pcrs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ps2_40009000, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ps2_40009000_P_pcrs_LEN 2
#define DT_N_S_soc_S_ps2_40009000_P_pcrs_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/ps2_clk1b_gpio154
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_PATH "/soc/pin-controller@40081000/ps2_clk1b_gpio154"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_FULL_NAME "ps2_clk1b_gpio154"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_CHILD_IDX 58

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_FOREACH_NODELABEL(fn) fn(ps2_clk1b_gpio154)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_FOREACH_NODELABEL_VARGS(fn, ...) fn(ps2_clk1b_gpio154, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_ORD 59
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_ORD_STR_SORTABLE 00059

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_SUPPORTS_ORDS \
	63, /* /soc/ps2@40009040 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_EXISTS 1
#define DT_N_NODELABEL_ps2_clk1b_gpio154 DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_pinmux 1219
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/ps2_clk1b_gpio154_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_PATH "/soc/pin-controller@40081000/ps2_clk1b_gpio154_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_FULL_NAME "ps2_clk1b_gpio154_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_CHILD_IDX 67

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_FOREACH_NODELABEL(fn) fn(ps2_clk1b_gpio154_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(ps2_clk1b_gpio154_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_ORD 60
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_ORD_STR_SORTABLE 00060

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_SUPPORTS_ORDS \
	63, /* /soc/ps2@40009040 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_EXISTS 1
#define DT_N_NODELABEL_ps2_clk1b_gpio154_sleep DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_pinmux 1219
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/ps2_dat1b_gpio155
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_PATH "/soc/pin-controller@40081000/ps2_dat1b_gpio155"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_FULL_NAME "ps2_dat1b_gpio155"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_CHILD_IDX 59

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_FOREACH_NODELABEL(fn) fn(ps2_dat1b_gpio155)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_FOREACH_NODELABEL_VARGS(fn, ...) fn(ps2_dat1b_gpio155, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_ORD 61
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_ORD_STR_SORTABLE 00061

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_SUPPORTS_ORDS \
	63, /* /soc/ps2@40009040 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_EXISTS 1
#define DT_N_NODELABEL_ps2_dat1b_gpio155 DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_pinmux 1235
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/ps2_dat1b_gpio155_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_PATH "/soc/pin-controller@40081000/ps2_dat1b_gpio155_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_FULL_NAME "ps2_dat1b_gpio155_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_CHILD_IDX 68

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_FOREACH_NODELABEL(fn) fn(ps2_dat1b_gpio155_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(ps2_dat1b_gpio155_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_ORD 62
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_ORD_STR_SORTABLE 00062

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_SUPPORTS_ORDS \
	63, /* /soc/ps2@40009040 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_EXISTS 1
#define DT_N_NODELABEL_ps2_dat1b_gpio155_sleep DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_pinmux 1235
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/ps2@40009040
 *
 * Node identifier: DT_N_S_soc_S_ps2_40009040
 *
 * Binding (compatible = microchip,xec-ps2):
 *   $ZEPHYR_BASE/dts/bindings/ps2/microchip,xec-ps2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ps2_40009040_PATH "/soc/ps2@40009040"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ps2_40009040_FULL_NAME "ps2@40009040"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ps2_40009040_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ps2_40009040_CHILD_IDX 26

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_ps2_40009040_NODELABEL_NUM 1
#define DT_N_S_soc_S_ps2_40009040_FOREACH_NODELABEL(fn) fn(ps2_1)
#define DT_N_S_soc_S_ps2_40009040_FOREACH_NODELABEL_VARGS(fn, ...) fn(ps2_1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ps2_40009040_CHILD_NUM 0
#define DT_N_S_soc_S_ps2_40009040_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_ps2_40009040_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ps2_40009040_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ps2_40009040_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ps2_40009040_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ps2_40009040_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ps2_40009040_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ps2_40009040_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ps2_40009040_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ps2_40009040_ORD 63
#define DT_N_S_soc_S_ps2_40009040_ORD_STR_SORTABLE 00063

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ps2_40009040_REQUIRES_ORDS \
	10, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */ \
	59, /* /soc/pin-controller@40081000/ps2_clk1b_gpio154 */ \
	60, /* /soc/pin-controller@40081000/ps2_clk1b_gpio154_sleep */ \
	61, /* /soc/pin-controller@40081000/ps2_dat1b_gpio155 */ \
	62, /* /soc/pin-controller@40081000/ps2_dat1b_gpio155_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ps2_40009040_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ps2_40009040_EXISTS 1
#define DT_N_INST_1_microchip_xec_ps2 DT_N_S_soc_S_ps2_40009040
#define DT_N_NODELABEL_ps2_1          DT_N_S_soc_S_ps2_40009040

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ps2_40009040_REG_NUM 1
#define DT_N_S_soc_S_ps2_40009040_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_REG_IDX_0_VAL_ADDRESS 1073778752 /* 0x40009040 */
#define DT_N_S_soc_S_ps2_40009040_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_ps2_40009040_RANGES_NUM 0
#define DT_N_S_soc_S_ps2_40009040_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ps2_40009040_IRQ_NUM 1
#define DT_N_S_soc_S_ps2_40009040_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_IRQ_IDX_0_VAL_irq 101
#define DT_N_S_soc_S_ps2_40009040_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_ps2_40009040_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_ps2_40009040_IRQ_LEVEL 1
#define DT_N_S_soc_S_ps2_40009040_COMPAT_MATCHES_microchip_xec_ps2 1
#define DT_N_S_soc_S_ps2_40009040_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_ps2_40009040_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_COMPAT_MODEL_IDX_0 "xec-ps2"
#define DT_N_S_soc_S_ps2_40009040_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ps2_40009040_PINCTRL_NUM 2
#define DT_N_S_soc_S_ps2_40009040_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_ps2_40009040_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_ps2_40009040_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_ps2_40009040_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154
#define DT_N_S_soc_S_ps2_40009040_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155
#define DT_N_S_soc_S_ps2_40009040_PINCTRL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_PINCTRL_IDX_1_TOKEN sleep
#define DT_N_S_soc_S_ps2_40009040_PINCTRL_IDX_1_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_ps2_40009040_PINCTRL_NAME_sleep_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_PINCTRL_NAME_sleep_IDX 1
#define DT_N_S_soc_S_ps2_40009040_PINCTRL_NAME_sleep_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep
#define DT_N_S_soc_S_ps2_40009040_PINCTRL_NAME_sleep_IDX_1_PH DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep

/* Generic property macros: */
#define DT_N_S_soc_S_ps2_40009040_P_wakeup_source 0
#define DT_N_S_soc_S_ps2_40009040_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_ps2_40009040_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_P_status "okay"
#define DT_N_S_soc_S_ps2_40009040_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_ps2_40009040_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_ps2_40009040_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ps2_40009040_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_ps2_40009040_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_ps2_40009040_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_ps2_40009040_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ps2_40009040_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ps2_40009040, status, 0)
#define DT_N_S_soc_S_ps2_40009040_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ps2_40009040, status, 0)
#define DT_N_S_soc_S_ps2_40009040_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ps2_40009040, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ps2_40009040_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ps2_40009040, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ps2_40009040_P_status_LEN 1
#define DT_N_S_soc_S_ps2_40009040_P_status_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_P_compatible {"microchip,xec-ps2"}
#define DT_N_S_soc_S_ps2_40009040_P_compatible_IDX_0 "microchip,xec-ps2"
#define DT_N_S_soc_S_ps2_40009040_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-ps2
#define DT_N_S_soc_S_ps2_40009040_P_compatible_IDX_0_STRING_TOKEN microchip_xec_ps2
#define DT_N_S_soc_S_ps2_40009040_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_PS2
#define DT_N_S_soc_S_ps2_40009040_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ps2_40009040, compatible, 0)
#define DT_N_S_soc_S_ps2_40009040_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ps2_40009040, compatible, 0)
#define DT_N_S_soc_S_ps2_40009040_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ps2_40009040, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ps2_40009040_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ps2_40009040, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ps2_40009040_P_compatible_LEN 1
#define DT_N_S_soc_S_ps2_40009040_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_P_reg {1073778752 /* 0x40009040 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_ps2_40009040_P_reg_IDX_0 1073778752
#define DT_N_S_soc_S_ps2_40009040_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_P_reg_IDX_1 64
#define DT_N_S_soc_S_ps2_40009040_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_P_reg_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_P_interrupts {101 /* 0x65 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_ps2_40009040_P_interrupts_IDX_0 101
#define DT_N_S_soc_S_ps2_40009040_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_ps2_40009040_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_ps2_40009040_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ps2_40009040, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_ps2_40009040, pinctrl_0, 1)
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ps2_40009040, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ps2_40009040, pinctrl_0, 1)
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ps2_40009040, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ps2_40009040, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ps2_40009040, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ps2_40009040, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_1_IDX_0 DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_1_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_1_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_1_IDX_1 DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_1_IDX_1_PH DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_1_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_1_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ps2_40009040, pinctrl_1, 0) \
	fn(DT_N_S_soc_S_ps2_40009040, pinctrl_1, 1)
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_1_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ps2_40009040, pinctrl_1, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ps2_40009040, pinctrl_1, 1)
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_1_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ps2_40009040, pinctrl_1, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ps2_40009040, pinctrl_1, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_1_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ps2_40009040, pinctrl_1, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ps2_40009040, pinctrl_1, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_1_LEN 2
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_1_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_names {"default", "sleep"}
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_names_IDX_1 "sleep"
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_names_IDX_1_STRING_UNQUOTED sleep
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_names_IDX_1_STRING_TOKEN sleep
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_names_IDX_1_STRING_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ps2_40009040, pinctrl_names, 0) \
	fn(DT_N_S_soc_S_ps2_40009040, pinctrl_names, 1)
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ps2_40009040, pinctrl_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ps2_40009040, pinctrl_names, 1)
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ps2_40009040, pinctrl_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ps2_40009040, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ps2_40009040, pinctrl_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ps2_40009040, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_names_LEN 2
#define DT_N_S_soc_S_ps2_40009040_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_P_girqs {18 /* 0x12 */, 11 /* 0xb */, 21 /* 0x15 */, 21 /* 0x15 */}
#define DT_N_S_soc_S_ps2_40009040_P_girqs_IDX_0 18
#define DT_N_S_soc_S_ps2_40009040_P_girqs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_P_girqs_IDX_1 11
#define DT_N_S_soc_S_ps2_40009040_P_girqs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_P_girqs_IDX_2 21
#define DT_N_S_soc_S_ps2_40009040_P_girqs_IDX_2_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_P_girqs_IDX_3 21
#define DT_N_S_soc_S_ps2_40009040_P_girqs_IDX_3_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_P_girqs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ps2_40009040, girqs, 0) \
	fn(DT_N_S_soc_S_ps2_40009040, girqs, 1) \
	fn(DT_N_S_soc_S_ps2_40009040, girqs, 2) \
	fn(DT_N_S_soc_S_ps2_40009040, girqs, 3)
#define DT_N_S_soc_S_ps2_40009040_P_girqs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ps2_40009040, girqs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ps2_40009040, girqs, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ps2_40009040, girqs, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ps2_40009040, girqs, 3)
#define DT_N_S_soc_S_ps2_40009040_P_girqs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ps2_40009040, girqs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ps2_40009040, girqs, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ps2_40009040, girqs, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ps2_40009040, girqs, 3, __VA_ARGS__)
#define DT_N_S_soc_S_ps2_40009040_P_girqs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ps2_40009040, girqs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ps2_40009040, girqs, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ps2_40009040, girqs, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ps2_40009040, girqs, 3, __VA_ARGS__)
#define DT_N_S_soc_S_ps2_40009040_P_girqs_LEN 4
#define DT_N_S_soc_S_ps2_40009040_P_girqs_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_P_pcrs {3 /* 0x3 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_ps2_40009040_P_pcrs_IDX_0 3
#define DT_N_S_soc_S_ps2_40009040_P_pcrs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_P_pcrs_IDX_1 6
#define DT_N_S_soc_S_ps2_40009040_P_pcrs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ps2_40009040_P_pcrs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ps2_40009040, pcrs, 0) \
	fn(DT_N_S_soc_S_ps2_40009040, pcrs, 1)
#define DT_N_S_soc_S_ps2_40009040_P_pcrs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ps2_40009040, pcrs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ps2_40009040, pcrs, 1)
#define DT_N_S_soc_S_ps2_40009040_P_pcrs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ps2_40009040, pcrs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ps2_40009040, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ps2_40009040_P_pcrs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ps2_40009040, pcrs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ps2_40009040, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ps2_40009040_P_pcrs_LEN 2
#define DT_N_S_soc_S_ps2_40009040_P_pcrs_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/pwm0_gpio053
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_PATH "/soc/pin-controller@40081000/pwm0_gpio053"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_FULL_NAME "pwm0_gpio053"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_CHILD_IDX 60

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_FOREACH_NODELABEL(fn) fn(pwm0_gpio053)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm0_gpio053, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_ORD 64
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_ORD_STR_SORTABLE 00064

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_SUPPORTS_ORDS \
	65, /* /soc/pwm@40005800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_EXISTS 1
#define DT_N_NODELABEL_pwm0_gpio053 DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_pinmux 689
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pwm@40005800
 *
 * Node identifier: DT_N_S_soc_S_pwm_40005800
 *
 * Binding (compatible = microchip,xec-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/microchip,xec-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_40005800_PATH "/soc/pwm@40005800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pwm_40005800_FULL_NAME "pwm@40005800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_40005800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pwm_40005800_CHILD_IDX 27

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pwm_40005800_NODELABEL_NUM 1
#define DT_N_S_soc_S_pwm_40005800_FOREACH_NODELABEL(fn) fn(pwm0)
#define DT_N_S_soc_S_pwm_40005800_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pwm_40005800_CHILD_NUM 0
#define DT_N_S_soc_S_pwm_40005800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pwm_40005800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pwm_40005800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40005800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40005800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pwm_40005800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pwm_40005800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40005800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40005800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_40005800_ORD 65
#define DT_N_S_soc_S_pwm_40005800_ORD_STR_SORTABLE 00065

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_40005800_REQUIRES_ORDS \
	10, /* /soc */ \
	64, /* /soc/pin-controller@40081000/pwm0_gpio053 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_40005800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_40005800_EXISTS 1
#define DT_N_ALIAS_pwm_0              DT_N_S_soc_S_pwm_40005800
#define DT_N_INST_0_microchip_xec_pwm DT_N_S_soc_S_pwm_40005800
#define DT_N_NODELABEL_pwm0           DT_N_S_soc_S_pwm_40005800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pwm_40005800_REG_NUM 1
#define DT_N_S_soc_S_pwm_40005800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005800_REG_IDX_0_VAL_ADDRESS 1073764352 /* 0x40005800 */
#define DT_N_S_soc_S_pwm_40005800_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_pwm_40005800_RANGES_NUM 0
#define DT_N_S_soc_S_pwm_40005800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pwm_40005800_IRQ_NUM 0
#define DT_N_S_soc_S_pwm_40005800_IRQ_LEVEL 0
#define DT_N_S_soc_S_pwm_40005800_COMPAT_MATCHES_microchip_xec_pwm 1
#define DT_N_S_soc_S_pwm_40005800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005800_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_pwm_40005800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005800_COMPAT_MODEL_IDX_0 "xec-pwm"
#define DT_N_S_soc_S_pwm_40005800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pwm_40005800_PINCTRL_NUM 1
#define DT_N_S_soc_S_pwm_40005800_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005800_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_pwm_40005800_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_pwm_40005800_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_pwm_40005800_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_pwm_40005800_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_40005800_P_wakeup_source 0
#define DT_N_S_soc_S_pwm_40005800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pwm_40005800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pwm_40005800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pwm_40005800_P_status "okay"
#define DT_N_S_soc_S_pwm_40005800_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_pwm_40005800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_pwm_40005800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pwm_40005800_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_pwm_40005800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_pwm_40005800_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_pwm_40005800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_pwm_40005800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pwm_40005800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005800, status, 0)
#define DT_N_S_soc_S_pwm_40005800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005800, status, 0)
#define DT_N_S_soc_S_pwm_40005800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005800_P_status_LEN 1
#define DT_N_S_soc_S_pwm_40005800_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_40005800_P_compatible {"microchip,xec-pwm"}
#define DT_N_S_soc_S_pwm_40005800_P_compatible_IDX_0 "microchip,xec-pwm"
#define DT_N_S_soc_S_pwm_40005800_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-pwm
#define DT_N_S_soc_S_pwm_40005800_P_compatible_IDX_0_STRING_TOKEN microchip_xec_pwm
#define DT_N_S_soc_S_pwm_40005800_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_PWM
#define DT_N_S_soc_S_pwm_40005800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005800, compatible, 0)
#define DT_N_S_soc_S_pwm_40005800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005800, compatible, 0)
#define DT_N_S_soc_S_pwm_40005800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005800_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_40005800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_40005800_P_reg {1073764352 /* 0x40005800 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_pwm_40005800_P_reg_IDX_0 1073764352
#define DT_N_S_soc_S_pwm_40005800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005800_P_reg_IDX_1 32
#define DT_N_S_soc_S_pwm_40005800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40005800_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_40005800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pwm_40005800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pwm_40005800_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053
#define DT_N_S_soc_S_pwm_40005800_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053
#define DT_N_S_soc_S_pwm_40005800_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005800_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005800, pinctrl_0, 0)
#define DT_N_S_soc_S_pwm_40005800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005800, pinctrl_0, 0)
#define DT_N_S_soc_S_pwm_40005800_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005800, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005800, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005800_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_pwm_40005800_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005800_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_pwm_40005800_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_pwm_40005800_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_pwm_40005800_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_pwm_40005800_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_pwm_40005800_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005800_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005800, pinctrl_names, 0)
#define DT_N_S_soc_S_pwm_40005800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005800, pinctrl_names, 0)
#define DT_N_S_soc_S_pwm_40005800_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005800_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_pwm_40005800_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_pwm_40005800_P_pcrs {1 /* 0x1 */, 4 /* 0x4 */}
#define DT_N_S_soc_S_pwm_40005800_P_pcrs_IDX_0 1
#define DT_N_S_soc_S_pwm_40005800_P_pcrs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005800_P_pcrs_IDX_1 4
#define DT_N_S_soc_S_pwm_40005800_P_pcrs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40005800_P_pcrs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005800, pcrs, 0) \
	fn(DT_N_S_soc_S_pwm_40005800, pcrs, 1)
#define DT_N_S_soc_S_pwm_40005800_P_pcrs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005800, pcrs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pwm_40005800, pcrs, 1)
#define DT_N_S_soc_S_pwm_40005800_P_pcrs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005800, pcrs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40005800, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005800_P_pcrs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005800, pcrs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pwm_40005800, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005800_P_pcrs_LEN 2
#define DT_N_S_soc_S_pwm_40005800_P_pcrs_EXISTS 1

/*
 * Devicetree node: /soc/pwm@40005810
 *
 * Node identifier: DT_N_S_soc_S_pwm_40005810
 *
 * Binding (compatible = microchip,xec-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/microchip,xec-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_40005810_PATH "/soc/pwm@40005810"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pwm_40005810_FULL_NAME "pwm@40005810"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_40005810_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pwm_40005810_CHILD_IDX 28

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pwm_40005810_NODELABEL_NUM 1
#define DT_N_S_soc_S_pwm_40005810_FOREACH_NODELABEL(fn) fn(pwm1)
#define DT_N_S_soc_S_pwm_40005810_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pwm_40005810_CHILD_NUM 0
#define DT_N_S_soc_S_pwm_40005810_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pwm_40005810_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pwm_40005810_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40005810_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40005810_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pwm_40005810_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pwm_40005810_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40005810_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40005810_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_40005810_ORD 66
#define DT_N_S_soc_S_pwm_40005810_ORD_STR_SORTABLE 00066

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_40005810_REQUIRES_ORDS \
	10, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_40005810_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_40005810_EXISTS 1
#define DT_N_INST_1_microchip_xec_pwm DT_N_S_soc_S_pwm_40005810
#define DT_N_NODELABEL_pwm1           DT_N_S_soc_S_pwm_40005810

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pwm_40005810_REG_NUM 1
#define DT_N_S_soc_S_pwm_40005810_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005810_REG_IDX_0_VAL_ADDRESS 1073764368 /* 0x40005810 */
#define DT_N_S_soc_S_pwm_40005810_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_pwm_40005810_RANGES_NUM 0
#define DT_N_S_soc_S_pwm_40005810_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pwm_40005810_IRQ_NUM 0
#define DT_N_S_soc_S_pwm_40005810_IRQ_LEVEL 0
#define DT_N_S_soc_S_pwm_40005810_COMPAT_MATCHES_microchip_xec_pwm 1
#define DT_N_S_soc_S_pwm_40005810_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005810_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_pwm_40005810_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005810_COMPAT_MODEL_IDX_0 "xec-pwm"
#define DT_N_S_soc_S_pwm_40005810_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pwm_40005810_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_40005810_P_wakeup_source 0
#define DT_N_S_soc_S_pwm_40005810_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pwm_40005810_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pwm_40005810_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pwm_40005810_P_status "disabled"
#define DT_N_S_soc_S_pwm_40005810_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pwm_40005810_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pwm_40005810_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40005810_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pwm_40005810_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005810_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pwm_40005810_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pwm_40005810_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pwm_40005810_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40005810_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005810, status, 0)
#define DT_N_S_soc_S_pwm_40005810_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005810, status, 0)
#define DT_N_S_soc_S_pwm_40005810_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005810, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005810_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005810, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005810_P_status_LEN 1
#define DT_N_S_soc_S_pwm_40005810_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_40005810_P_compatible {"microchip,xec-pwm"}
#define DT_N_S_soc_S_pwm_40005810_P_compatible_IDX_0 "microchip,xec-pwm"
#define DT_N_S_soc_S_pwm_40005810_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-pwm
#define DT_N_S_soc_S_pwm_40005810_P_compatible_IDX_0_STRING_TOKEN microchip_xec_pwm
#define DT_N_S_soc_S_pwm_40005810_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_PWM
#define DT_N_S_soc_S_pwm_40005810_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005810_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005810, compatible, 0)
#define DT_N_S_soc_S_pwm_40005810_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005810, compatible, 0)
#define DT_N_S_soc_S_pwm_40005810_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005810, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005810_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005810, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005810_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_40005810_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_40005810_P_reg {1073764368 /* 0x40005810 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_pwm_40005810_P_reg_IDX_0 1073764368
#define DT_N_S_soc_S_pwm_40005810_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005810_P_reg_IDX_1 32
#define DT_N_S_soc_S_pwm_40005810_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40005810_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_40005810_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pwm_40005810_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pwm_40005810_P_pcrs {1 /* 0x1 */, 20 /* 0x14 */}
#define DT_N_S_soc_S_pwm_40005810_P_pcrs_IDX_0 1
#define DT_N_S_soc_S_pwm_40005810_P_pcrs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005810_P_pcrs_IDX_1 20
#define DT_N_S_soc_S_pwm_40005810_P_pcrs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40005810_P_pcrs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005810, pcrs, 0) \
	fn(DT_N_S_soc_S_pwm_40005810, pcrs, 1)
#define DT_N_S_soc_S_pwm_40005810_P_pcrs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005810, pcrs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pwm_40005810, pcrs, 1)
#define DT_N_S_soc_S_pwm_40005810_P_pcrs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005810, pcrs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40005810, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005810_P_pcrs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005810, pcrs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pwm_40005810, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005810_P_pcrs_LEN 2
#define DT_N_S_soc_S_pwm_40005810_P_pcrs_EXISTS 1

/*
 * Devicetree node: /soc/pwm@40005820
 *
 * Node identifier: DT_N_S_soc_S_pwm_40005820
 *
 * Binding (compatible = microchip,xec-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/microchip,xec-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_40005820_PATH "/soc/pwm@40005820"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pwm_40005820_FULL_NAME "pwm@40005820"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_40005820_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pwm_40005820_CHILD_IDX 29

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pwm_40005820_NODELABEL_NUM 1
#define DT_N_S_soc_S_pwm_40005820_FOREACH_NODELABEL(fn) fn(pwm2)
#define DT_N_S_soc_S_pwm_40005820_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pwm_40005820_CHILD_NUM 0
#define DT_N_S_soc_S_pwm_40005820_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pwm_40005820_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pwm_40005820_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40005820_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40005820_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pwm_40005820_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pwm_40005820_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40005820_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40005820_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_40005820_ORD 67
#define DT_N_S_soc_S_pwm_40005820_ORD_STR_SORTABLE 00067

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_40005820_REQUIRES_ORDS \
	10, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_40005820_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_40005820_EXISTS 1
#define DT_N_INST_2_microchip_xec_pwm DT_N_S_soc_S_pwm_40005820
#define DT_N_NODELABEL_pwm2           DT_N_S_soc_S_pwm_40005820

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pwm_40005820_REG_NUM 1
#define DT_N_S_soc_S_pwm_40005820_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005820_REG_IDX_0_VAL_ADDRESS 1073764384 /* 0x40005820 */
#define DT_N_S_soc_S_pwm_40005820_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_pwm_40005820_RANGES_NUM 0
#define DT_N_S_soc_S_pwm_40005820_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pwm_40005820_IRQ_NUM 0
#define DT_N_S_soc_S_pwm_40005820_IRQ_LEVEL 0
#define DT_N_S_soc_S_pwm_40005820_COMPAT_MATCHES_microchip_xec_pwm 1
#define DT_N_S_soc_S_pwm_40005820_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005820_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_pwm_40005820_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005820_COMPAT_MODEL_IDX_0 "xec-pwm"
#define DT_N_S_soc_S_pwm_40005820_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pwm_40005820_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_40005820_P_wakeup_source 0
#define DT_N_S_soc_S_pwm_40005820_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pwm_40005820_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pwm_40005820_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pwm_40005820_P_status "disabled"
#define DT_N_S_soc_S_pwm_40005820_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pwm_40005820_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pwm_40005820_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40005820_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pwm_40005820_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005820_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pwm_40005820_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pwm_40005820_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pwm_40005820_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40005820_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005820, status, 0)
#define DT_N_S_soc_S_pwm_40005820_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005820, status, 0)
#define DT_N_S_soc_S_pwm_40005820_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005820, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005820_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005820, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005820_P_status_LEN 1
#define DT_N_S_soc_S_pwm_40005820_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_40005820_P_compatible {"microchip,xec-pwm"}
#define DT_N_S_soc_S_pwm_40005820_P_compatible_IDX_0 "microchip,xec-pwm"
#define DT_N_S_soc_S_pwm_40005820_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-pwm
#define DT_N_S_soc_S_pwm_40005820_P_compatible_IDX_0_STRING_TOKEN microchip_xec_pwm
#define DT_N_S_soc_S_pwm_40005820_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_PWM
#define DT_N_S_soc_S_pwm_40005820_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005820_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005820, compatible, 0)
#define DT_N_S_soc_S_pwm_40005820_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005820, compatible, 0)
#define DT_N_S_soc_S_pwm_40005820_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005820, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005820_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005820, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005820_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_40005820_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_40005820_P_reg {1073764384 /* 0x40005820 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_pwm_40005820_P_reg_IDX_0 1073764384
#define DT_N_S_soc_S_pwm_40005820_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005820_P_reg_IDX_1 32
#define DT_N_S_soc_S_pwm_40005820_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40005820_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_40005820_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pwm_40005820_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pwm_40005820_P_pcrs {1 /* 0x1 */, 21 /* 0x15 */}
#define DT_N_S_soc_S_pwm_40005820_P_pcrs_IDX_0 1
#define DT_N_S_soc_S_pwm_40005820_P_pcrs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005820_P_pcrs_IDX_1 21
#define DT_N_S_soc_S_pwm_40005820_P_pcrs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40005820_P_pcrs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005820, pcrs, 0) \
	fn(DT_N_S_soc_S_pwm_40005820, pcrs, 1)
#define DT_N_S_soc_S_pwm_40005820_P_pcrs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005820, pcrs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pwm_40005820, pcrs, 1)
#define DT_N_S_soc_S_pwm_40005820_P_pcrs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005820, pcrs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40005820, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005820_P_pcrs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005820, pcrs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pwm_40005820, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005820_P_pcrs_LEN 2
#define DT_N_S_soc_S_pwm_40005820_P_pcrs_EXISTS 1

/*
 * Devicetree node: /soc/pwm@40005830
 *
 * Node identifier: DT_N_S_soc_S_pwm_40005830
 *
 * Binding (compatible = microchip,xec-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/microchip,xec-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_40005830_PATH "/soc/pwm@40005830"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pwm_40005830_FULL_NAME "pwm@40005830"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_40005830_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pwm_40005830_CHILD_IDX 30

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pwm_40005830_NODELABEL_NUM 1
#define DT_N_S_soc_S_pwm_40005830_FOREACH_NODELABEL(fn) fn(pwm3)
#define DT_N_S_soc_S_pwm_40005830_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm3, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pwm_40005830_CHILD_NUM 0
#define DT_N_S_soc_S_pwm_40005830_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pwm_40005830_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pwm_40005830_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40005830_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40005830_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pwm_40005830_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pwm_40005830_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40005830_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40005830_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_40005830_ORD 68
#define DT_N_S_soc_S_pwm_40005830_ORD_STR_SORTABLE 00068

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_40005830_REQUIRES_ORDS \
	10, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_40005830_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_40005830_EXISTS 1
#define DT_N_INST_3_microchip_xec_pwm DT_N_S_soc_S_pwm_40005830
#define DT_N_NODELABEL_pwm3           DT_N_S_soc_S_pwm_40005830

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pwm_40005830_REG_NUM 1
#define DT_N_S_soc_S_pwm_40005830_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005830_REG_IDX_0_VAL_ADDRESS 1073764400 /* 0x40005830 */
#define DT_N_S_soc_S_pwm_40005830_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_pwm_40005830_RANGES_NUM 0
#define DT_N_S_soc_S_pwm_40005830_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pwm_40005830_IRQ_NUM 0
#define DT_N_S_soc_S_pwm_40005830_IRQ_LEVEL 0
#define DT_N_S_soc_S_pwm_40005830_COMPAT_MATCHES_microchip_xec_pwm 1
#define DT_N_S_soc_S_pwm_40005830_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005830_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_pwm_40005830_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005830_COMPAT_MODEL_IDX_0 "xec-pwm"
#define DT_N_S_soc_S_pwm_40005830_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pwm_40005830_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_40005830_P_wakeup_source 0
#define DT_N_S_soc_S_pwm_40005830_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pwm_40005830_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pwm_40005830_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pwm_40005830_P_status "disabled"
#define DT_N_S_soc_S_pwm_40005830_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pwm_40005830_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pwm_40005830_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40005830_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pwm_40005830_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005830_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pwm_40005830_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pwm_40005830_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pwm_40005830_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40005830_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005830, status, 0)
#define DT_N_S_soc_S_pwm_40005830_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005830, status, 0)
#define DT_N_S_soc_S_pwm_40005830_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005830, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005830_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005830, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005830_P_status_LEN 1
#define DT_N_S_soc_S_pwm_40005830_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_40005830_P_compatible {"microchip,xec-pwm"}
#define DT_N_S_soc_S_pwm_40005830_P_compatible_IDX_0 "microchip,xec-pwm"
#define DT_N_S_soc_S_pwm_40005830_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-pwm
#define DT_N_S_soc_S_pwm_40005830_P_compatible_IDX_0_STRING_TOKEN microchip_xec_pwm
#define DT_N_S_soc_S_pwm_40005830_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_PWM
#define DT_N_S_soc_S_pwm_40005830_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005830_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005830, compatible, 0)
#define DT_N_S_soc_S_pwm_40005830_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005830, compatible, 0)
#define DT_N_S_soc_S_pwm_40005830_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005830, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005830_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005830, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005830_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_40005830_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_40005830_P_reg {1073764400 /* 0x40005830 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_pwm_40005830_P_reg_IDX_0 1073764400
#define DT_N_S_soc_S_pwm_40005830_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005830_P_reg_IDX_1 32
#define DT_N_S_soc_S_pwm_40005830_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40005830_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_40005830_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pwm_40005830_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pwm_40005830_P_pcrs {1 /* 0x1 */, 22 /* 0x16 */}
#define DT_N_S_soc_S_pwm_40005830_P_pcrs_IDX_0 1
#define DT_N_S_soc_S_pwm_40005830_P_pcrs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005830_P_pcrs_IDX_1 22
#define DT_N_S_soc_S_pwm_40005830_P_pcrs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40005830_P_pcrs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005830, pcrs, 0) \
	fn(DT_N_S_soc_S_pwm_40005830, pcrs, 1)
#define DT_N_S_soc_S_pwm_40005830_P_pcrs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005830, pcrs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pwm_40005830, pcrs, 1)
#define DT_N_S_soc_S_pwm_40005830_P_pcrs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005830, pcrs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40005830, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005830_P_pcrs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005830, pcrs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pwm_40005830, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005830_P_pcrs_LEN 2
#define DT_N_S_soc_S_pwm_40005830_P_pcrs_EXISTS 1

/*
 * Devicetree node: /soc/pwm@40005840
 *
 * Node identifier: DT_N_S_soc_S_pwm_40005840
 *
 * Binding (compatible = microchip,xec-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/microchip,xec-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_40005840_PATH "/soc/pwm@40005840"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pwm_40005840_FULL_NAME "pwm@40005840"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_40005840_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pwm_40005840_CHILD_IDX 31

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pwm_40005840_NODELABEL_NUM 1
#define DT_N_S_soc_S_pwm_40005840_FOREACH_NODELABEL(fn) fn(pwm4)
#define DT_N_S_soc_S_pwm_40005840_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm4, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pwm_40005840_CHILD_NUM 0
#define DT_N_S_soc_S_pwm_40005840_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pwm_40005840_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pwm_40005840_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40005840_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40005840_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pwm_40005840_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pwm_40005840_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40005840_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40005840_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_40005840_ORD 69
#define DT_N_S_soc_S_pwm_40005840_ORD_STR_SORTABLE 00069

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_40005840_REQUIRES_ORDS \
	10, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_40005840_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_40005840_EXISTS 1
#define DT_N_INST_4_microchip_xec_pwm DT_N_S_soc_S_pwm_40005840
#define DT_N_NODELABEL_pwm4           DT_N_S_soc_S_pwm_40005840

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pwm_40005840_REG_NUM 1
#define DT_N_S_soc_S_pwm_40005840_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005840_REG_IDX_0_VAL_ADDRESS 1073764416 /* 0x40005840 */
#define DT_N_S_soc_S_pwm_40005840_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_pwm_40005840_RANGES_NUM 0
#define DT_N_S_soc_S_pwm_40005840_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pwm_40005840_IRQ_NUM 0
#define DT_N_S_soc_S_pwm_40005840_IRQ_LEVEL 0
#define DT_N_S_soc_S_pwm_40005840_COMPAT_MATCHES_microchip_xec_pwm 1
#define DT_N_S_soc_S_pwm_40005840_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005840_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_pwm_40005840_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005840_COMPAT_MODEL_IDX_0 "xec-pwm"
#define DT_N_S_soc_S_pwm_40005840_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pwm_40005840_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_40005840_P_wakeup_source 0
#define DT_N_S_soc_S_pwm_40005840_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pwm_40005840_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pwm_40005840_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pwm_40005840_P_status "disabled"
#define DT_N_S_soc_S_pwm_40005840_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pwm_40005840_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pwm_40005840_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40005840_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pwm_40005840_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005840_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pwm_40005840_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pwm_40005840_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pwm_40005840_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40005840_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005840, status, 0)
#define DT_N_S_soc_S_pwm_40005840_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005840, status, 0)
#define DT_N_S_soc_S_pwm_40005840_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005840, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005840_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005840, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005840_P_status_LEN 1
#define DT_N_S_soc_S_pwm_40005840_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_40005840_P_compatible {"microchip,xec-pwm"}
#define DT_N_S_soc_S_pwm_40005840_P_compatible_IDX_0 "microchip,xec-pwm"
#define DT_N_S_soc_S_pwm_40005840_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-pwm
#define DT_N_S_soc_S_pwm_40005840_P_compatible_IDX_0_STRING_TOKEN microchip_xec_pwm
#define DT_N_S_soc_S_pwm_40005840_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_PWM
#define DT_N_S_soc_S_pwm_40005840_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005840_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005840, compatible, 0)
#define DT_N_S_soc_S_pwm_40005840_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005840, compatible, 0)
#define DT_N_S_soc_S_pwm_40005840_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005840, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005840_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005840, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005840_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_40005840_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_40005840_P_reg {1073764416 /* 0x40005840 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_pwm_40005840_P_reg_IDX_0 1073764416
#define DT_N_S_soc_S_pwm_40005840_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005840_P_reg_IDX_1 32
#define DT_N_S_soc_S_pwm_40005840_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40005840_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_40005840_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pwm_40005840_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pwm_40005840_P_pcrs {1 /* 0x1 */, 23 /* 0x17 */}
#define DT_N_S_soc_S_pwm_40005840_P_pcrs_IDX_0 1
#define DT_N_S_soc_S_pwm_40005840_P_pcrs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005840_P_pcrs_IDX_1 23
#define DT_N_S_soc_S_pwm_40005840_P_pcrs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40005840_P_pcrs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005840, pcrs, 0) \
	fn(DT_N_S_soc_S_pwm_40005840, pcrs, 1)
#define DT_N_S_soc_S_pwm_40005840_P_pcrs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005840, pcrs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pwm_40005840, pcrs, 1)
#define DT_N_S_soc_S_pwm_40005840_P_pcrs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005840, pcrs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40005840, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005840_P_pcrs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005840, pcrs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pwm_40005840, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005840_P_pcrs_LEN 2
#define DT_N_S_soc_S_pwm_40005840_P_pcrs_EXISTS 1

/*
 * Devicetree node: /soc/pwm@40005850
 *
 * Node identifier: DT_N_S_soc_S_pwm_40005850
 *
 * Binding (compatible = microchip,xec-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/microchip,xec-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_40005850_PATH "/soc/pwm@40005850"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pwm_40005850_FULL_NAME "pwm@40005850"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_40005850_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pwm_40005850_CHILD_IDX 32

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pwm_40005850_NODELABEL_NUM 1
#define DT_N_S_soc_S_pwm_40005850_FOREACH_NODELABEL(fn) fn(pwm5)
#define DT_N_S_soc_S_pwm_40005850_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm5, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pwm_40005850_CHILD_NUM 0
#define DT_N_S_soc_S_pwm_40005850_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pwm_40005850_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pwm_40005850_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40005850_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40005850_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pwm_40005850_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pwm_40005850_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40005850_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40005850_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_40005850_ORD 70
#define DT_N_S_soc_S_pwm_40005850_ORD_STR_SORTABLE 00070

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_40005850_REQUIRES_ORDS \
	10, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_40005850_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_40005850_EXISTS 1
#define DT_N_INST_5_microchip_xec_pwm DT_N_S_soc_S_pwm_40005850
#define DT_N_NODELABEL_pwm5           DT_N_S_soc_S_pwm_40005850

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pwm_40005850_REG_NUM 1
#define DT_N_S_soc_S_pwm_40005850_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005850_REG_IDX_0_VAL_ADDRESS 1073764432 /* 0x40005850 */
#define DT_N_S_soc_S_pwm_40005850_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_pwm_40005850_RANGES_NUM 0
#define DT_N_S_soc_S_pwm_40005850_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pwm_40005850_IRQ_NUM 0
#define DT_N_S_soc_S_pwm_40005850_IRQ_LEVEL 0
#define DT_N_S_soc_S_pwm_40005850_COMPAT_MATCHES_microchip_xec_pwm 1
#define DT_N_S_soc_S_pwm_40005850_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005850_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_pwm_40005850_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005850_COMPAT_MODEL_IDX_0 "xec-pwm"
#define DT_N_S_soc_S_pwm_40005850_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pwm_40005850_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_40005850_P_wakeup_source 0
#define DT_N_S_soc_S_pwm_40005850_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pwm_40005850_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pwm_40005850_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pwm_40005850_P_status "disabled"
#define DT_N_S_soc_S_pwm_40005850_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pwm_40005850_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pwm_40005850_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40005850_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pwm_40005850_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005850_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pwm_40005850_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pwm_40005850_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pwm_40005850_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40005850_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005850, status, 0)
#define DT_N_S_soc_S_pwm_40005850_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005850, status, 0)
#define DT_N_S_soc_S_pwm_40005850_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005850, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005850_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005850, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005850_P_status_LEN 1
#define DT_N_S_soc_S_pwm_40005850_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_40005850_P_compatible {"microchip,xec-pwm"}
#define DT_N_S_soc_S_pwm_40005850_P_compatible_IDX_0 "microchip,xec-pwm"
#define DT_N_S_soc_S_pwm_40005850_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-pwm
#define DT_N_S_soc_S_pwm_40005850_P_compatible_IDX_0_STRING_TOKEN microchip_xec_pwm
#define DT_N_S_soc_S_pwm_40005850_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_PWM
#define DT_N_S_soc_S_pwm_40005850_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005850_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005850, compatible, 0)
#define DT_N_S_soc_S_pwm_40005850_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005850, compatible, 0)
#define DT_N_S_soc_S_pwm_40005850_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005850, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005850_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005850, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005850_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_40005850_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_40005850_P_reg {1073764432 /* 0x40005850 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_pwm_40005850_P_reg_IDX_0 1073764432
#define DT_N_S_soc_S_pwm_40005850_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005850_P_reg_IDX_1 32
#define DT_N_S_soc_S_pwm_40005850_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40005850_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_40005850_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pwm_40005850_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pwm_40005850_P_pcrs {1 /* 0x1 */, 24 /* 0x18 */}
#define DT_N_S_soc_S_pwm_40005850_P_pcrs_IDX_0 1
#define DT_N_S_soc_S_pwm_40005850_P_pcrs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005850_P_pcrs_IDX_1 24
#define DT_N_S_soc_S_pwm_40005850_P_pcrs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40005850_P_pcrs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005850, pcrs, 0) \
	fn(DT_N_S_soc_S_pwm_40005850, pcrs, 1)
#define DT_N_S_soc_S_pwm_40005850_P_pcrs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005850, pcrs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pwm_40005850, pcrs, 1)
#define DT_N_S_soc_S_pwm_40005850_P_pcrs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005850, pcrs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40005850, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005850_P_pcrs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005850, pcrs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pwm_40005850, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005850_P_pcrs_LEN 2
#define DT_N_S_soc_S_pwm_40005850_P_pcrs_EXISTS 1

/*
 * Devicetree node: /soc/pwm@40005860
 *
 * Node identifier: DT_N_S_soc_S_pwm_40005860
 *
 * Binding (compatible = microchip,xec-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/microchip,xec-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_40005860_PATH "/soc/pwm@40005860"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pwm_40005860_FULL_NAME "pwm@40005860"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_40005860_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pwm_40005860_CHILD_IDX 33

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pwm_40005860_NODELABEL_NUM 1
#define DT_N_S_soc_S_pwm_40005860_FOREACH_NODELABEL(fn) fn(pwm6)
#define DT_N_S_soc_S_pwm_40005860_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm6, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pwm_40005860_CHILD_NUM 0
#define DT_N_S_soc_S_pwm_40005860_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pwm_40005860_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pwm_40005860_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40005860_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40005860_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pwm_40005860_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pwm_40005860_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40005860_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40005860_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_40005860_ORD 71
#define DT_N_S_soc_S_pwm_40005860_ORD_STR_SORTABLE 00071

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_40005860_REQUIRES_ORDS \
	10, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_40005860_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_40005860_EXISTS 1
#define DT_N_INST_6_microchip_xec_pwm DT_N_S_soc_S_pwm_40005860
#define DT_N_NODELABEL_pwm6           DT_N_S_soc_S_pwm_40005860

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pwm_40005860_REG_NUM 1
#define DT_N_S_soc_S_pwm_40005860_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005860_REG_IDX_0_VAL_ADDRESS 1073764448 /* 0x40005860 */
#define DT_N_S_soc_S_pwm_40005860_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_pwm_40005860_RANGES_NUM 0
#define DT_N_S_soc_S_pwm_40005860_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pwm_40005860_IRQ_NUM 0
#define DT_N_S_soc_S_pwm_40005860_IRQ_LEVEL 0
#define DT_N_S_soc_S_pwm_40005860_COMPAT_MATCHES_microchip_xec_pwm 1
#define DT_N_S_soc_S_pwm_40005860_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005860_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_pwm_40005860_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005860_COMPAT_MODEL_IDX_0 "xec-pwm"
#define DT_N_S_soc_S_pwm_40005860_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pwm_40005860_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_40005860_P_wakeup_source 0
#define DT_N_S_soc_S_pwm_40005860_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pwm_40005860_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pwm_40005860_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pwm_40005860_P_status "disabled"
#define DT_N_S_soc_S_pwm_40005860_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pwm_40005860_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pwm_40005860_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40005860_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pwm_40005860_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005860_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pwm_40005860_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pwm_40005860_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pwm_40005860_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40005860_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005860, status, 0)
#define DT_N_S_soc_S_pwm_40005860_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005860, status, 0)
#define DT_N_S_soc_S_pwm_40005860_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005860, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005860_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005860, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005860_P_status_LEN 1
#define DT_N_S_soc_S_pwm_40005860_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_40005860_P_compatible {"microchip,xec-pwm"}
#define DT_N_S_soc_S_pwm_40005860_P_compatible_IDX_0 "microchip,xec-pwm"
#define DT_N_S_soc_S_pwm_40005860_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-pwm
#define DT_N_S_soc_S_pwm_40005860_P_compatible_IDX_0_STRING_TOKEN microchip_xec_pwm
#define DT_N_S_soc_S_pwm_40005860_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_PWM
#define DT_N_S_soc_S_pwm_40005860_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005860_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005860, compatible, 0)
#define DT_N_S_soc_S_pwm_40005860_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005860, compatible, 0)
#define DT_N_S_soc_S_pwm_40005860_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005860, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005860_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005860, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005860_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_40005860_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_40005860_P_reg {1073764448 /* 0x40005860 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_pwm_40005860_P_reg_IDX_0 1073764448
#define DT_N_S_soc_S_pwm_40005860_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005860_P_reg_IDX_1 32
#define DT_N_S_soc_S_pwm_40005860_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40005860_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_40005860_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pwm_40005860_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pwm_40005860_P_pcrs {1 /* 0x1 */, 25 /* 0x19 */}
#define DT_N_S_soc_S_pwm_40005860_P_pcrs_IDX_0 1
#define DT_N_S_soc_S_pwm_40005860_P_pcrs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005860_P_pcrs_IDX_1 25
#define DT_N_S_soc_S_pwm_40005860_P_pcrs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40005860_P_pcrs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005860, pcrs, 0) \
	fn(DT_N_S_soc_S_pwm_40005860, pcrs, 1)
#define DT_N_S_soc_S_pwm_40005860_P_pcrs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005860, pcrs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pwm_40005860, pcrs, 1)
#define DT_N_S_soc_S_pwm_40005860_P_pcrs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005860, pcrs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40005860, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005860_P_pcrs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005860, pcrs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pwm_40005860, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005860_P_pcrs_LEN 2
#define DT_N_S_soc_S_pwm_40005860_P_pcrs_EXISTS 1

/*
 * Devicetree node: /soc/pwm@40005870
 *
 * Node identifier: DT_N_S_soc_S_pwm_40005870
 *
 * Binding (compatible = microchip,xec-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/microchip,xec-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_40005870_PATH "/soc/pwm@40005870"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pwm_40005870_FULL_NAME "pwm@40005870"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_40005870_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pwm_40005870_CHILD_IDX 34

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pwm_40005870_NODELABEL_NUM 1
#define DT_N_S_soc_S_pwm_40005870_FOREACH_NODELABEL(fn) fn(pwm7)
#define DT_N_S_soc_S_pwm_40005870_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm7, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pwm_40005870_CHILD_NUM 0
#define DT_N_S_soc_S_pwm_40005870_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pwm_40005870_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pwm_40005870_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40005870_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40005870_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pwm_40005870_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pwm_40005870_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40005870_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40005870_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_40005870_ORD 72
#define DT_N_S_soc_S_pwm_40005870_ORD_STR_SORTABLE 00072

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_40005870_REQUIRES_ORDS \
	10, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_40005870_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_40005870_EXISTS 1
#define DT_N_INST_7_microchip_xec_pwm DT_N_S_soc_S_pwm_40005870
#define DT_N_NODELABEL_pwm7           DT_N_S_soc_S_pwm_40005870

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pwm_40005870_REG_NUM 1
#define DT_N_S_soc_S_pwm_40005870_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005870_REG_IDX_0_VAL_ADDRESS 1073764464 /* 0x40005870 */
#define DT_N_S_soc_S_pwm_40005870_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_pwm_40005870_RANGES_NUM 0
#define DT_N_S_soc_S_pwm_40005870_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pwm_40005870_IRQ_NUM 0
#define DT_N_S_soc_S_pwm_40005870_IRQ_LEVEL 0
#define DT_N_S_soc_S_pwm_40005870_COMPAT_MATCHES_microchip_xec_pwm 1
#define DT_N_S_soc_S_pwm_40005870_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005870_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_pwm_40005870_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005870_COMPAT_MODEL_IDX_0 "xec-pwm"
#define DT_N_S_soc_S_pwm_40005870_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pwm_40005870_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_40005870_P_wakeup_source 0
#define DT_N_S_soc_S_pwm_40005870_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pwm_40005870_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pwm_40005870_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pwm_40005870_P_status "disabled"
#define DT_N_S_soc_S_pwm_40005870_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pwm_40005870_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pwm_40005870_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40005870_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pwm_40005870_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005870_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pwm_40005870_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pwm_40005870_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pwm_40005870_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40005870_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005870, status, 0)
#define DT_N_S_soc_S_pwm_40005870_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005870, status, 0)
#define DT_N_S_soc_S_pwm_40005870_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005870, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005870_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005870, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005870_P_status_LEN 1
#define DT_N_S_soc_S_pwm_40005870_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_40005870_P_compatible {"microchip,xec-pwm"}
#define DT_N_S_soc_S_pwm_40005870_P_compatible_IDX_0 "microchip,xec-pwm"
#define DT_N_S_soc_S_pwm_40005870_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-pwm
#define DT_N_S_soc_S_pwm_40005870_P_compatible_IDX_0_STRING_TOKEN microchip_xec_pwm
#define DT_N_S_soc_S_pwm_40005870_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_PWM
#define DT_N_S_soc_S_pwm_40005870_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005870_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005870, compatible, 0)
#define DT_N_S_soc_S_pwm_40005870_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005870, compatible, 0)
#define DT_N_S_soc_S_pwm_40005870_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005870, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005870_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005870, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005870_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_40005870_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_40005870_P_reg {1073764464 /* 0x40005870 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_pwm_40005870_P_reg_IDX_0 1073764464
#define DT_N_S_soc_S_pwm_40005870_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005870_P_reg_IDX_1 32
#define DT_N_S_soc_S_pwm_40005870_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40005870_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_40005870_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pwm_40005870_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pwm_40005870_P_pcrs {1 /* 0x1 */, 26 /* 0x1a */}
#define DT_N_S_soc_S_pwm_40005870_P_pcrs_IDX_0 1
#define DT_N_S_soc_S_pwm_40005870_P_pcrs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005870_P_pcrs_IDX_1 26
#define DT_N_S_soc_S_pwm_40005870_P_pcrs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40005870_P_pcrs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005870, pcrs, 0) \
	fn(DT_N_S_soc_S_pwm_40005870, pcrs, 1)
#define DT_N_S_soc_S_pwm_40005870_P_pcrs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005870, pcrs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pwm_40005870, pcrs, 1)
#define DT_N_S_soc_S_pwm_40005870_P_pcrs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005870, pcrs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40005870, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005870_P_pcrs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005870, pcrs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pwm_40005870, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005870_P_pcrs_LEN 2
#define DT_N_S_soc_S_pwm_40005870_P_pcrs_EXISTS 1

/*
 * Devicetree node: /soc/pwm@40005880
 *
 * Node identifier: DT_N_S_soc_S_pwm_40005880
 *
 * Binding (compatible = microchip,xec-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/microchip,xec-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_40005880_PATH "/soc/pwm@40005880"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pwm_40005880_FULL_NAME "pwm@40005880"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_40005880_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pwm_40005880_CHILD_IDX 35

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pwm_40005880_NODELABEL_NUM 1
#define DT_N_S_soc_S_pwm_40005880_FOREACH_NODELABEL(fn) fn(pwm8)
#define DT_N_S_soc_S_pwm_40005880_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm8, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pwm_40005880_CHILD_NUM 0
#define DT_N_S_soc_S_pwm_40005880_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pwm_40005880_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pwm_40005880_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40005880_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40005880_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pwm_40005880_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pwm_40005880_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40005880_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40005880_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_40005880_ORD 73
#define DT_N_S_soc_S_pwm_40005880_ORD_STR_SORTABLE 00073

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_40005880_REQUIRES_ORDS \
	10, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_40005880_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_40005880_EXISTS 1
#define DT_N_INST_8_microchip_xec_pwm DT_N_S_soc_S_pwm_40005880
#define DT_N_NODELABEL_pwm8           DT_N_S_soc_S_pwm_40005880

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pwm_40005880_REG_NUM 1
#define DT_N_S_soc_S_pwm_40005880_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005880_REG_IDX_0_VAL_ADDRESS 1073764480 /* 0x40005880 */
#define DT_N_S_soc_S_pwm_40005880_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_pwm_40005880_RANGES_NUM 0
#define DT_N_S_soc_S_pwm_40005880_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pwm_40005880_IRQ_NUM 0
#define DT_N_S_soc_S_pwm_40005880_IRQ_LEVEL 0
#define DT_N_S_soc_S_pwm_40005880_COMPAT_MATCHES_microchip_xec_pwm 1
#define DT_N_S_soc_S_pwm_40005880_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005880_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_pwm_40005880_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005880_COMPAT_MODEL_IDX_0 "xec-pwm"
#define DT_N_S_soc_S_pwm_40005880_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pwm_40005880_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_40005880_P_wakeup_source 0
#define DT_N_S_soc_S_pwm_40005880_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pwm_40005880_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pwm_40005880_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pwm_40005880_P_status "disabled"
#define DT_N_S_soc_S_pwm_40005880_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pwm_40005880_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pwm_40005880_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40005880_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pwm_40005880_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005880_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pwm_40005880_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pwm_40005880_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pwm_40005880_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40005880_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005880, status, 0)
#define DT_N_S_soc_S_pwm_40005880_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005880, status, 0)
#define DT_N_S_soc_S_pwm_40005880_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005880, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005880_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005880, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005880_P_status_LEN 1
#define DT_N_S_soc_S_pwm_40005880_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_40005880_P_compatible {"microchip,xec-pwm"}
#define DT_N_S_soc_S_pwm_40005880_P_compatible_IDX_0 "microchip,xec-pwm"
#define DT_N_S_soc_S_pwm_40005880_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-pwm
#define DT_N_S_soc_S_pwm_40005880_P_compatible_IDX_0_STRING_TOKEN microchip_xec_pwm
#define DT_N_S_soc_S_pwm_40005880_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_PWM
#define DT_N_S_soc_S_pwm_40005880_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005880_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005880, compatible, 0)
#define DT_N_S_soc_S_pwm_40005880_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005880, compatible, 0)
#define DT_N_S_soc_S_pwm_40005880_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005880, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005880_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005880, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005880_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_40005880_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_40005880_P_reg {1073764480 /* 0x40005880 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_pwm_40005880_P_reg_IDX_0 1073764480
#define DT_N_S_soc_S_pwm_40005880_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005880_P_reg_IDX_1 32
#define DT_N_S_soc_S_pwm_40005880_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40005880_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_40005880_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pwm_40005880_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pwm_40005880_P_pcrs {1 /* 0x1 */, 27 /* 0x1b */}
#define DT_N_S_soc_S_pwm_40005880_P_pcrs_IDX_0 1
#define DT_N_S_soc_S_pwm_40005880_P_pcrs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005880_P_pcrs_IDX_1 27
#define DT_N_S_soc_S_pwm_40005880_P_pcrs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40005880_P_pcrs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005880, pcrs, 0) \
	fn(DT_N_S_soc_S_pwm_40005880, pcrs, 1)
#define DT_N_S_soc_S_pwm_40005880_P_pcrs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005880, pcrs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pwm_40005880, pcrs, 1)
#define DT_N_S_soc_S_pwm_40005880_P_pcrs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005880, pcrs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40005880, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005880_P_pcrs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005880, pcrs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pwm_40005880, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005880_P_pcrs_LEN 2
#define DT_N_S_soc_S_pwm_40005880_P_pcrs_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/shd_clk_gpio056
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_PATH "/soc/pin-controller@40081000/shd_clk_gpio056"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_FULL_NAME "shd_clk_gpio056"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_CHILD_IDX 51

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_FOREACH_NODELABEL(fn) fn(shd_clk_gpio056)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_FOREACH_NODELABEL_VARGS(fn, ...) fn(shd_clk_gpio056, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_ORD 74
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_ORD_STR_SORTABLE 00074

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_SUPPORTS_ORDS \
	78, /* /soc/spi@40070000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_EXISTS 1
#define DT_N_NODELABEL_shd_clk_gpio056 DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_pinmux 1249
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/shd_cs0_n_gpio055
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_PATH "/soc/pin-controller@40081000/shd_cs0_n_gpio055"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_FULL_NAME "shd_cs0_n_gpio055"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_CHILD_IDX 50

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_FOREACH_NODELABEL(fn) fn(shd_cs0_n_gpio055)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_FOREACH_NODELABEL_VARGS(fn, ...) fn(shd_cs0_n_gpio055, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_ORD 75
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_ORD_STR_SORTABLE 00075

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_SUPPORTS_ORDS \
	78, /* /soc/spi@40070000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_EXISTS 1
#define DT_N_NODELABEL_shd_cs0_n_gpio055 DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_pinmux 1233
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/shd_io0_gpio223
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_PATH "/soc/pin-controller@40081000/shd_io0_gpio223"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_FULL_NAME "shd_io0_gpio223"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_CHILD_IDX 52

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_FOREACH_NODELABEL(fn) fn(shd_io0_gpio223)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_FOREACH_NODELABEL_VARGS(fn, ...) fn(shd_io0_gpio223, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_ORD 76
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_ORD_STR_SORTABLE 00076

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_SUPPORTS_ORDS \
	78, /* /soc/spi@40070000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_EXISTS 1
#define DT_N_NODELABEL_shd_io0_gpio223 DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_pinmux 820
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/shd_io1_gpio224
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_PATH "/soc/pin-controller@40081000/shd_io1_gpio224"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_FULL_NAME "shd_io1_gpio224"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_CHILD_IDX 53

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_FOREACH_NODELABEL(fn) fn(shd_io1_gpio224)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_FOREACH_NODELABEL_VARGS(fn, ...) fn(shd_io1_gpio224, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_ORD 77
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_ORD_STR_SORTABLE 00077

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_SUPPORTS_ORDS \
	78, /* /soc/spi@40070000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_EXISTS 1
#define DT_N_NODELABEL_shd_io1_gpio224 DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_pinmux 1348
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/spi@40070000
 *
 * Node identifier: DT_N_S_soc_S_spi_40070000
 *
 * Binding (compatible = microchip,xec-qmspi):
 *   $ZEPHYR_BASE/dts/bindings/spi/microchip,xec-qmspi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40070000_PATH "/soc/spi@40070000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40070000_FULL_NAME "spi@40070000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40070000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40070000_CHILD_IDX 39

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_40070000_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_40070000_FOREACH_NODELABEL(fn) fn(spi0)
#define DT_N_S_soc_S_spi_40070000_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40070000_CHILD_NUM 0
#define DT_N_S_soc_S_spi_40070000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_40070000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40070000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40070000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40070000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40070000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40070000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40070000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40070000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40070000_ORD 78
#define DT_N_S_soc_S_spi_40070000_ORD_STR_SORTABLE 00078

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40070000_REQUIRES_ORDS \
	10, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */ \
	74, /* /soc/pin-controller@40081000/shd_clk_gpio056 */ \
	75, /* /soc/pin-controller@40081000/shd_cs0_n_gpio055 */ \
	76, /* /soc/pin-controller@40081000/shd_io0_gpio223 */ \
	77, /* /soc/pin-controller@40081000/shd_io1_gpio224 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40070000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40070000_EXISTS 1
#define DT_N_INST_0_microchip_xec_qmspi DT_N_S_soc_S_spi_40070000
#define DT_N_NODELABEL_spi0             DT_N_S_soc_S_spi_40070000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40070000_REG_NUM 1
#define DT_N_S_soc_S_spi_40070000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_REG_IDX_0_VAL_ADDRESS 1074200576 /* 0x40070000 */
#define DT_N_S_soc_S_spi_40070000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40070000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40070000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40070000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40070000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_IRQ_IDX_0_VAL_irq 91
#define DT_N_S_soc_S_spi_40070000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_IRQ_IDX_0_VAL_priority 2
#define DT_N_S_soc_S_spi_40070000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_spi_40070000_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_40070000_COMPAT_MATCHES_microchip_xec_qmspi 1
#define DT_N_S_soc_S_spi_40070000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_spi_40070000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_COMPAT_MODEL_IDX_0 "xec-qmspi"
#define DT_N_S_soc_S_spi_40070000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40070000_PINCTRL_NUM 1
#define DT_N_S_soc_S_spi_40070000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_spi_40070000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40070000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_spi_40070000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055
#define DT_N_S_soc_S_spi_40070000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056
#define DT_N_S_soc_S_spi_40070000_PINCTRL_NAME_default_IDX_2_PH DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223
#define DT_N_S_soc_S_spi_40070000_PINCTRL_NAME_default_IDX_3_PH DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40070000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40070000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40070000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_P_status "okay"
#define DT_N_S_soc_S_spi_40070000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_40070000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_40070000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40070000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_40070000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40070000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_40070000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40070000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40070000, status, 0)
#define DT_N_S_soc_S_spi_40070000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40070000, status, 0)
#define DT_N_S_soc_S_spi_40070000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40070000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40070000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40070000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40070000_P_status_LEN 1
#define DT_N_S_soc_S_spi_40070000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_P_compatible {"microchip,xec-qmspi"}
#define DT_N_S_soc_S_spi_40070000_P_compatible_IDX_0 "microchip,xec-qmspi"
#define DT_N_S_soc_S_spi_40070000_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-qmspi
#define DT_N_S_soc_S_spi_40070000_P_compatible_IDX_0_STRING_TOKEN microchip_xec_qmspi
#define DT_N_S_soc_S_spi_40070000_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_QMSPI
#define DT_N_S_soc_S_spi_40070000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40070000, compatible, 0)
#define DT_N_S_soc_S_spi_40070000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40070000, compatible, 0)
#define DT_N_S_soc_S_spi_40070000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40070000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40070000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40070000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40070000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40070000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_P_reg {1074200576 /* 0x40070000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40070000_P_reg_IDX_0 1074200576
#define DT_N_S_soc_S_spi_40070000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40070000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_P_interrupts {91 /* 0x5b */, 2 /* 0x2 */}
#define DT_N_S_soc_S_spi_40070000_P_interrupts_IDX_0 91
#define DT_N_S_soc_S_spi_40070000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_P_interrupts_IDX_1 2
#define DT_N_S_soc_S_spi_40070000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_40070000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_P_clock_frequency 12000000
#define DT_N_S_soc_S_spi_40070000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055
#define DT_N_S_soc_S_spi_40070000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055
#define DT_N_S_soc_S_spi_40070000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056
#define DT_N_S_soc_S_spi_40070000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056
#define DT_N_S_soc_S_spi_40070000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_P_pinctrl_0_IDX_2 DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223
#define DT_N_S_soc_S_spi_40070000_P_pinctrl_0_IDX_2_PH DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223
#define DT_N_S_soc_S_spi_40070000_P_pinctrl_0_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_P_pinctrl_0_IDX_3 DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224
#define DT_N_S_soc_S_spi_40070000_P_pinctrl_0_IDX_3_PH DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224
#define DT_N_S_soc_S_spi_40070000_P_pinctrl_0_IDX_3_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40070000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_spi_40070000, pinctrl_0, 1) \
	fn(DT_N_S_soc_S_spi_40070000, pinctrl_0, 2) \
	fn(DT_N_S_soc_S_spi_40070000, pinctrl_0, 3)
#define DT_N_S_soc_S_spi_40070000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40070000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40070000, pinctrl_0, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40070000, pinctrl_0, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40070000, pinctrl_0, 3)
#define DT_N_S_soc_S_spi_40070000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40070000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40070000, pinctrl_0, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40070000, pinctrl_0, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40070000, pinctrl_0, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40070000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40070000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40070000, pinctrl_0, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40070000, pinctrl_0, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40070000, pinctrl_0, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40070000_P_pinctrl_0_LEN 4
#define DT_N_S_soc_S_spi_40070000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_spi_40070000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_spi_40070000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_spi_40070000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_spi_40070000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40070000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40070000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_40070000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40070000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_40070000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40070000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40070000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40070000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40070000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_spi_40070000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_P_port_sel 0
#define DT_N_S_soc_S_spi_40070000_P_port_sel_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_P_rxdma 11
#define DT_N_S_soc_S_spi_40070000_P_rxdma_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_P_txdma 10
#define DT_N_S_soc_S_spi_40070000_P_txdma_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_P_lines 1
#define DT_N_S_soc_S_spi_40070000_P_lines_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_P_chip_select 0
#define DT_N_S_soc_S_spi_40070000_P_chip_select_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_P_dcsckon 6
#define DT_N_S_soc_S_spi_40070000_P_dcsckon_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_P_dckcsoff 4
#define DT_N_S_soc_S_spi_40070000_P_dckcsoff_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_P_dldh 6
#define DT_N_S_soc_S_spi_40070000_P_dldh_EXISTS 1
#define DT_N_S_soc_S_spi_40070000_P_dcsda 6
#define DT_N_S_soc_S_spi_40070000_P_dcsda_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/ict0_tach0_gpio050
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_PATH "/soc/pin-controller@40081000/ict0_tach0_gpio050"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_FULL_NAME "ict0_tach0_gpio050"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_CHILD_IDX 25

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_FOREACH_NODELABEL(fn) fn(ict0_tach0_gpio050)
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_FOREACH_NODELABEL_VARGS(fn, ...) fn(ict0_tach0_gpio050, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_ORD 79
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_ORD_STR_SORTABLE 00079

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_SUPPORTS_ORDS \
	80, /* /soc/tach@40006000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_EXISTS 1
#define DT_N_NODELABEL_ict0_tach0_gpio050 DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_pinmux 641
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/tach@40006000
 *
 * Node identifier: DT_N_S_soc_S_tach_40006000
 *
 * Binding (compatible = microchip,xec-tach):
 *   $ZEPHYR_BASE/dts/bindings/tach/microchip,xec-tach.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_tach_40006000_PATH "/soc/tach@40006000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_tach_40006000_FULL_NAME "tach@40006000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_tach_40006000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_tach_40006000_CHILD_IDX 40

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_tach_40006000_NODELABEL_NUM 1
#define DT_N_S_soc_S_tach_40006000_FOREACH_NODELABEL(fn) fn(tach0)
#define DT_N_S_soc_S_tach_40006000_FOREACH_NODELABEL_VARGS(fn, ...) fn(tach0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_tach_40006000_CHILD_NUM 0
#define DT_N_S_soc_S_tach_40006000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_tach_40006000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_tach_40006000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_tach_40006000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_tach_40006000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_tach_40006000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_tach_40006000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_tach_40006000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_tach_40006000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_tach_40006000_ORD 80
#define DT_N_S_soc_S_tach_40006000_ORD_STR_SORTABLE 00080

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_tach_40006000_REQUIRES_ORDS \
	10, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */ \
	79, /* /soc/pin-controller@40081000/ict0_tach0_gpio050 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_tach_40006000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_tach_40006000_EXISTS 1
#define DT_N_INST_0_microchip_xec_tach DT_N_S_soc_S_tach_40006000
#define DT_N_NODELABEL_tach0           DT_N_S_soc_S_tach_40006000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_tach_40006000_REG_NUM 1
#define DT_N_S_soc_S_tach_40006000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_REG_IDX_0_VAL_ADDRESS 1073766400 /* 0x40006000 */
#define DT_N_S_soc_S_tach_40006000_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_tach_40006000_RANGES_NUM 0
#define DT_N_S_soc_S_tach_40006000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_tach_40006000_IRQ_NUM 1
#define DT_N_S_soc_S_tach_40006000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_IRQ_IDX_0_VAL_irq 71
#define DT_N_S_soc_S_tach_40006000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_IRQ_IDX_0_VAL_priority 4
#define DT_N_S_soc_S_tach_40006000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_tach_40006000_IRQ_LEVEL 1
#define DT_N_S_soc_S_tach_40006000_COMPAT_MATCHES_microchip_xec_tach 1
#define DT_N_S_soc_S_tach_40006000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_tach_40006000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_COMPAT_MODEL_IDX_0 "xec-tach"
#define DT_N_S_soc_S_tach_40006000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_tach_40006000_PINCTRL_NUM 1
#define DT_N_S_soc_S_tach_40006000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_tach_40006000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_tach_40006000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_tach_40006000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050

/* Generic property macros: */
#define DT_N_S_soc_S_tach_40006000_P_wakeup_source 0
#define DT_N_S_soc_S_tach_40006000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_tach_40006000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_P_status "okay"
#define DT_N_S_soc_S_tach_40006000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_tach_40006000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_tach_40006000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_tach_40006000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_tach_40006000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_tach_40006000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_tach_40006000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_tach_40006000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tach_40006000, status, 0)
#define DT_N_S_soc_S_tach_40006000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tach_40006000, status, 0)
#define DT_N_S_soc_S_tach_40006000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tach_40006000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tach_40006000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006000_P_status_LEN 1
#define DT_N_S_soc_S_tach_40006000_P_status_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_P_compatible {"microchip,xec-tach"}
#define DT_N_S_soc_S_tach_40006000_P_compatible_IDX_0 "microchip,xec-tach"
#define DT_N_S_soc_S_tach_40006000_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-tach
#define DT_N_S_soc_S_tach_40006000_P_compatible_IDX_0_STRING_TOKEN microchip_xec_tach
#define DT_N_S_soc_S_tach_40006000_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_TACH
#define DT_N_S_soc_S_tach_40006000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tach_40006000, compatible, 0)
#define DT_N_S_soc_S_tach_40006000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tach_40006000, compatible, 0)
#define DT_N_S_soc_S_tach_40006000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tach_40006000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tach_40006000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006000_P_compatible_LEN 1
#define DT_N_S_soc_S_tach_40006000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_P_reg {1073766400 /* 0x40006000 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_tach_40006000_P_reg_IDX_0 1073766400
#define DT_N_S_soc_S_tach_40006000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_P_reg_IDX_1 16
#define DT_N_S_soc_S_tach_40006000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_P_reg_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_P_interrupts {71 /* 0x47 */, 4 /* 0x4 */}
#define DT_N_S_soc_S_tach_40006000_P_interrupts_IDX_0 71
#define DT_N_S_soc_S_tach_40006000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_P_interrupts_IDX_1 4
#define DT_N_S_soc_S_tach_40006000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_tach_40006000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050
#define DT_N_S_soc_S_tach_40006000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050
#define DT_N_S_soc_S_tach_40006000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tach_40006000, pinctrl_0, 0)
#define DT_N_S_soc_S_tach_40006000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tach_40006000, pinctrl_0, 0)
#define DT_N_S_soc_S_tach_40006000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tach_40006000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tach_40006000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_tach_40006000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_tach_40006000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_tach_40006000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_tach_40006000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_tach_40006000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_tach_40006000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tach_40006000, pinctrl_names, 0)
#define DT_N_S_soc_S_tach_40006000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tach_40006000, pinctrl_names, 0)
#define DT_N_S_soc_S_tach_40006000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tach_40006000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tach_40006000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_tach_40006000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_P_girqs {17 /* 0x11 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_tach_40006000_P_girqs_IDX_0 17
#define DT_N_S_soc_S_tach_40006000_P_girqs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_P_girqs_IDX_1 1
#define DT_N_S_soc_S_tach_40006000_P_girqs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_P_girqs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tach_40006000, girqs, 0) \
	fn(DT_N_S_soc_S_tach_40006000, girqs, 1)
#define DT_N_S_soc_S_tach_40006000_P_girqs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tach_40006000, girqs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tach_40006000, girqs, 1)
#define DT_N_S_soc_S_tach_40006000_P_girqs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tach_40006000, girqs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tach_40006000, girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006000_P_girqs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tach_40006000, girqs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tach_40006000, girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006000_P_girqs_LEN 2
#define DT_N_S_soc_S_tach_40006000_P_girqs_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_P_pcrs {1 /* 0x1 */, 2 /* 0x2 */}
#define DT_N_S_soc_S_tach_40006000_P_pcrs_IDX_0 1
#define DT_N_S_soc_S_tach_40006000_P_pcrs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_P_pcrs_IDX_1 2
#define DT_N_S_soc_S_tach_40006000_P_pcrs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tach_40006000_P_pcrs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tach_40006000, pcrs, 0) \
	fn(DT_N_S_soc_S_tach_40006000, pcrs, 1)
#define DT_N_S_soc_S_tach_40006000_P_pcrs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tach_40006000, pcrs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tach_40006000, pcrs, 1)
#define DT_N_S_soc_S_tach_40006000_P_pcrs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tach_40006000, pcrs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tach_40006000, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006000_P_pcrs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tach_40006000, pcrs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tach_40006000, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006000_P_pcrs_LEN 2
#define DT_N_S_soc_S_tach_40006000_P_pcrs_EXISTS 1

/*
 * Devicetree node: /soc/tach@40006010
 *
 * Node identifier: DT_N_S_soc_S_tach_40006010
 *
 * Binding (compatible = microchip,xec-tach):
 *   $ZEPHYR_BASE/dts/bindings/tach/microchip,xec-tach.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_tach_40006010_PATH "/soc/tach@40006010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_tach_40006010_FULL_NAME "tach@40006010"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_tach_40006010_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_tach_40006010_CHILD_IDX 41

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_tach_40006010_NODELABEL_NUM 1
#define DT_N_S_soc_S_tach_40006010_FOREACH_NODELABEL(fn) fn(tach1)
#define DT_N_S_soc_S_tach_40006010_FOREACH_NODELABEL_VARGS(fn, ...) fn(tach1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_tach_40006010_CHILD_NUM 0
#define DT_N_S_soc_S_tach_40006010_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_tach_40006010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_tach_40006010_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_tach_40006010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_tach_40006010_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_tach_40006010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_tach_40006010_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_tach_40006010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_tach_40006010_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_tach_40006010_ORD 81
#define DT_N_S_soc_S_tach_40006010_ORD_STR_SORTABLE 00081

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_tach_40006010_REQUIRES_ORDS \
	10, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_tach_40006010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_tach_40006010_EXISTS 1
#define DT_N_INST_1_microchip_xec_tach DT_N_S_soc_S_tach_40006010
#define DT_N_NODELABEL_tach1           DT_N_S_soc_S_tach_40006010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_tach_40006010_REG_NUM 1
#define DT_N_S_soc_S_tach_40006010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006010_REG_IDX_0_VAL_ADDRESS 1073766416 /* 0x40006010 */
#define DT_N_S_soc_S_tach_40006010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_tach_40006010_RANGES_NUM 0
#define DT_N_S_soc_S_tach_40006010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_tach_40006010_IRQ_NUM 1
#define DT_N_S_soc_S_tach_40006010_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006010_IRQ_IDX_0_VAL_irq 72
#define DT_N_S_soc_S_tach_40006010_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tach_40006010_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006010_IRQ_IDX_0_VAL_priority 4
#define DT_N_S_soc_S_tach_40006010_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tach_40006010_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_tach_40006010_IRQ_LEVEL 1
#define DT_N_S_soc_S_tach_40006010_COMPAT_MATCHES_microchip_xec_tach 1
#define DT_N_S_soc_S_tach_40006010_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006010_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_tach_40006010_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006010_COMPAT_MODEL_IDX_0 "xec-tach"
#define DT_N_S_soc_S_tach_40006010_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_tach_40006010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_tach_40006010_P_wakeup_source 0
#define DT_N_S_soc_S_tach_40006010_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_tach_40006010_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_tach_40006010_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_tach_40006010_P_status "disabled"
#define DT_N_S_soc_S_tach_40006010_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_tach_40006010_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_tach_40006010_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_tach_40006010_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_tach_40006010_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006010_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_tach_40006010_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_tach_40006010_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_tach_40006010_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_tach_40006010_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tach_40006010, status, 0)
#define DT_N_S_soc_S_tach_40006010_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tach_40006010, status, 0)
#define DT_N_S_soc_S_tach_40006010_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tach_40006010, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006010_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tach_40006010, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006010_P_status_LEN 1
#define DT_N_S_soc_S_tach_40006010_P_status_EXISTS 1
#define DT_N_S_soc_S_tach_40006010_P_compatible {"microchip,xec-tach"}
#define DT_N_S_soc_S_tach_40006010_P_compatible_IDX_0 "microchip,xec-tach"
#define DT_N_S_soc_S_tach_40006010_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-tach
#define DT_N_S_soc_S_tach_40006010_P_compatible_IDX_0_STRING_TOKEN microchip_xec_tach
#define DT_N_S_soc_S_tach_40006010_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_TACH
#define DT_N_S_soc_S_tach_40006010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tach_40006010, compatible, 0)
#define DT_N_S_soc_S_tach_40006010_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tach_40006010, compatible, 0)
#define DT_N_S_soc_S_tach_40006010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tach_40006010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006010_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tach_40006010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006010_P_compatible_LEN 1
#define DT_N_S_soc_S_tach_40006010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_tach_40006010_P_reg {1073766416 /* 0x40006010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_tach_40006010_P_reg_IDX_0 1073766416
#define DT_N_S_soc_S_tach_40006010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006010_P_reg_IDX_1 16
#define DT_N_S_soc_S_tach_40006010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tach_40006010_P_reg_EXISTS 1
#define DT_N_S_soc_S_tach_40006010_P_interrupts {72 /* 0x48 */, 4 /* 0x4 */}
#define DT_N_S_soc_S_tach_40006010_P_interrupts_IDX_0 72
#define DT_N_S_soc_S_tach_40006010_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006010_P_interrupts_IDX_1 4
#define DT_N_S_soc_S_tach_40006010_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tach_40006010_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_tach_40006010_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_tach_40006010_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_tach_40006010_P_girqs {17 /* 0x11 */, 2 /* 0x2 */}
#define DT_N_S_soc_S_tach_40006010_P_girqs_IDX_0 17
#define DT_N_S_soc_S_tach_40006010_P_girqs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006010_P_girqs_IDX_1 2
#define DT_N_S_soc_S_tach_40006010_P_girqs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tach_40006010_P_girqs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tach_40006010, girqs, 0) \
	fn(DT_N_S_soc_S_tach_40006010, girqs, 1)
#define DT_N_S_soc_S_tach_40006010_P_girqs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tach_40006010, girqs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tach_40006010, girqs, 1)
#define DT_N_S_soc_S_tach_40006010_P_girqs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tach_40006010, girqs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tach_40006010, girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006010_P_girqs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tach_40006010, girqs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tach_40006010, girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006010_P_girqs_LEN 2
#define DT_N_S_soc_S_tach_40006010_P_girqs_EXISTS 1
#define DT_N_S_soc_S_tach_40006010_P_pcrs {1 /* 0x1 */, 11 /* 0xb */}
#define DT_N_S_soc_S_tach_40006010_P_pcrs_IDX_0 1
#define DT_N_S_soc_S_tach_40006010_P_pcrs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006010_P_pcrs_IDX_1 11
#define DT_N_S_soc_S_tach_40006010_P_pcrs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tach_40006010_P_pcrs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tach_40006010, pcrs, 0) \
	fn(DT_N_S_soc_S_tach_40006010, pcrs, 1)
#define DT_N_S_soc_S_tach_40006010_P_pcrs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tach_40006010, pcrs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tach_40006010, pcrs, 1)
#define DT_N_S_soc_S_tach_40006010_P_pcrs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tach_40006010, pcrs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tach_40006010, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006010_P_pcrs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tach_40006010, pcrs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tach_40006010, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006010_P_pcrs_LEN 2
#define DT_N_S_soc_S_tach_40006010_P_pcrs_EXISTS 1

/*
 * Devicetree node: /soc/tach@40006020
 *
 * Node identifier: DT_N_S_soc_S_tach_40006020
 *
 * Binding (compatible = microchip,xec-tach):
 *   $ZEPHYR_BASE/dts/bindings/tach/microchip,xec-tach.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_tach_40006020_PATH "/soc/tach@40006020"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_tach_40006020_FULL_NAME "tach@40006020"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_tach_40006020_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_tach_40006020_CHILD_IDX 42

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_tach_40006020_NODELABEL_NUM 1
#define DT_N_S_soc_S_tach_40006020_FOREACH_NODELABEL(fn) fn(tach2)
#define DT_N_S_soc_S_tach_40006020_FOREACH_NODELABEL_VARGS(fn, ...) fn(tach2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_tach_40006020_CHILD_NUM 0
#define DT_N_S_soc_S_tach_40006020_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_tach_40006020_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_tach_40006020_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_tach_40006020_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_tach_40006020_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_tach_40006020_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_tach_40006020_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_tach_40006020_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_tach_40006020_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_tach_40006020_ORD 82
#define DT_N_S_soc_S_tach_40006020_ORD_STR_SORTABLE 00082

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_tach_40006020_REQUIRES_ORDS \
	10, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_tach_40006020_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_tach_40006020_EXISTS 1
#define DT_N_INST_2_microchip_xec_tach DT_N_S_soc_S_tach_40006020
#define DT_N_NODELABEL_tach2           DT_N_S_soc_S_tach_40006020

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_tach_40006020_REG_NUM 1
#define DT_N_S_soc_S_tach_40006020_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006020_REG_IDX_0_VAL_ADDRESS 1073766432 /* 0x40006020 */
#define DT_N_S_soc_S_tach_40006020_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_tach_40006020_RANGES_NUM 0
#define DT_N_S_soc_S_tach_40006020_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_tach_40006020_IRQ_NUM 1
#define DT_N_S_soc_S_tach_40006020_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006020_IRQ_IDX_0_VAL_irq 73
#define DT_N_S_soc_S_tach_40006020_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tach_40006020_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006020_IRQ_IDX_0_VAL_priority 4
#define DT_N_S_soc_S_tach_40006020_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tach_40006020_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_tach_40006020_IRQ_LEVEL 1
#define DT_N_S_soc_S_tach_40006020_COMPAT_MATCHES_microchip_xec_tach 1
#define DT_N_S_soc_S_tach_40006020_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006020_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_tach_40006020_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006020_COMPAT_MODEL_IDX_0 "xec-tach"
#define DT_N_S_soc_S_tach_40006020_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_tach_40006020_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_tach_40006020_P_wakeup_source 0
#define DT_N_S_soc_S_tach_40006020_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_tach_40006020_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_tach_40006020_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_tach_40006020_P_status "disabled"
#define DT_N_S_soc_S_tach_40006020_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_tach_40006020_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_tach_40006020_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_tach_40006020_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_tach_40006020_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006020_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_tach_40006020_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_tach_40006020_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_tach_40006020_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_tach_40006020_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tach_40006020, status, 0)
#define DT_N_S_soc_S_tach_40006020_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tach_40006020, status, 0)
#define DT_N_S_soc_S_tach_40006020_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tach_40006020, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006020_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tach_40006020, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006020_P_status_LEN 1
#define DT_N_S_soc_S_tach_40006020_P_status_EXISTS 1
#define DT_N_S_soc_S_tach_40006020_P_compatible {"microchip,xec-tach"}
#define DT_N_S_soc_S_tach_40006020_P_compatible_IDX_0 "microchip,xec-tach"
#define DT_N_S_soc_S_tach_40006020_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-tach
#define DT_N_S_soc_S_tach_40006020_P_compatible_IDX_0_STRING_TOKEN microchip_xec_tach
#define DT_N_S_soc_S_tach_40006020_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_TACH
#define DT_N_S_soc_S_tach_40006020_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006020_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tach_40006020, compatible, 0)
#define DT_N_S_soc_S_tach_40006020_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tach_40006020, compatible, 0)
#define DT_N_S_soc_S_tach_40006020_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tach_40006020, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006020_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tach_40006020, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006020_P_compatible_LEN 1
#define DT_N_S_soc_S_tach_40006020_P_compatible_EXISTS 1
#define DT_N_S_soc_S_tach_40006020_P_reg {1073766432 /* 0x40006020 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_tach_40006020_P_reg_IDX_0 1073766432
#define DT_N_S_soc_S_tach_40006020_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006020_P_reg_IDX_1 16
#define DT_N_S_soc_S_tach_40006020_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tach_40006020_P_reg_EXISTS 1
#define DT_N_S_soc_S_tach_40006020_P_interrupts {73 /* 0x49 */, 4 /* 0x4 */}
#define DT_N_S_soc_S_tach_40006020_P_interrupts_IDX_0 73
#define DT_N_S_soc_S_tach_40006020_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006020_P_interrupts_IDX_1 4
#define DT_N_S_soc_S_tach_40006020_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tach_40006020_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_tach_40006020_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_tach_40006020_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_tach_40006020_P_girqs {17 /* 0x11 */, 3 /* 0x3 */}
#define DT_N_S_soc_S_tach_40006020_P_girqs_IDX_0 17
#define DT_N_S_soc_S_tach_40006020_P_girqs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006020_P_girqs_IDX_1 3
#define DT_N_S_soc_S_tach_40006020_P_girqs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tach_40006020_P_girqs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tach_40006020, girqs, 0) \
	fn(DT_N_S_soc_S_tach_40006020, girqs, 1)
#define DT_N_S_soc_S_tach_40006020_P_girqs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tach_40006020, girqs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tach_40006020, girqs, 1)
#define DT_N_S_soc_S_tach_40006020_P_girqs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tach_40006020, girqs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tach_40006020, girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006020_P_girqs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tach_40006020, girqs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tach_40006020, girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006020_P_girqs_LEN 2
#define DT_N_S_soc_S_tach_40006020_P_girqs_EXISTS 1
#define DT_N_S_soc_S_tach_40006020_P_pcrs {1 /* 0x1 */, 12 /* 0xc */}
#define DT_N_S_soc_S_tach_40006020_P_pcrs_IDX_0 1
#define DT_N_S_soc_S_tach_40006020_P_pcrs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006020_P_pcrs_IDX_1 12
#define DT_N_S_soc_S_tach_40006020_P_pcrs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tach_40006020_P_pcrs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tach_40006020, pcrs, 0) \
	fn(DT_N_S_soc_S_tach_40006020, pcrs, 1)
#define DT_N_S_soc_S_tach_40006020_P_pcrs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tach_40006020, pcrs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tach_40006020, pcrs, 1)
#define DT_N_S_soc_S_tach_40006020_P_pcrs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tach_40006020, pcrs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tach_40006020, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006020_P_pcrs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tach_40006020, pcrs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tach_40006020, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006020_P_pcrs_LEN 2
#define DT_N_S_soc_S_tach_40006020_P_pcrs_EXISTS 1

/*
 * Devicetree node: /soc/tach@40006030
 *
 * Node identifier: DT_N_S_soc_S_tach_40006030
 *
 * Binding (compatible = microchip,xec-tach):
 *   $ZEPHYR_BASE/dts/bindings/tach/microchip,xec-tach.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_tach_40006030_PATH "/soc/tach@40006030"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_tach_40006030_FULL_NAME "tach@40006030"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_tach_40006030_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_tach_40006030_CHILD_IDX 43

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_tach_40006030_NODELABEL_NUM 1
#define DT_N_S_soc_S_tach_40006030_FOREACH_NODELABEL(fn) fn(tach3)
#define DT_N_S_soc_S_tach_40006030_FOREACH_NODELABEL_VARGS(fn, ...) fn(tach3, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_tach_40006030_CHILD_NUM 0
#define DT_N_S_soc_S_tach_40006030_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_tach_40006030_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_tach_40006030_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_tach_40006030_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_tach_40006030_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_tach_40006030_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_tach_40006030_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_tach_40006030_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_tach_40006030_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_tach_40006030_ORD 83
#define DT_N_S_soc_S_tach_40006030_ORD_STR_SORTABLE 00083

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_tach_40006030_REQUIRES_ORDS \
	10, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_tach_40006030_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_tach_40006030_EXISTS 1
#define DT_N_INST_3_microchip_xec_tach DT_N_S_soc_S_tach_40006030
#define DT_N_NODELABEL_tach3           DT_N_S_soc_S_tach_40006030

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_tach_40006030_REG_NUM 1
#define DT_N_S_soc_S_tach_40006030_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006030_REG_IDX_0_VAL_ADDRESS 1073766448 /* 0x40006030 */
#define DT_N_S_soc_S_tach_40006030_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_tach_40006030_RANGES_NUM 0
#define DT_N_S_soc_S_tach_40006030_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_tach_40006030_IRQ_NUM 1
#define DT_N_S_soc_S_tach_40006030_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006030_IRQ_IDX_0_VAL_irq 159
#define DT_N_S_soc_S_tach_40006030_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_tach_40006030_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006030_IRQ_IDX_0_VAL_priority 4
#define DT_N_S_soc_S_tach_40006030_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_tach_40006030_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_tach_40006030_IRQ_LEVEL 1
#define DT_N_S_soc_S_tach_40006030_COMPAT_MATCHES_microchip_xec_tach 1
#define DT_N_S_soc_S_tach_40006030_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006030_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_tach_40006030_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006030_COMPAT_MODEL_IDX_0 "xec-tach"
#define DT_N_S_soc_S_tach_40006030_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_tach_40006030_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_tach_40006030_P_wakeup_source 0
#define DT_N_S_soc_S_tach_40006030_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_tach_40006030_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_tach_40006030_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_tach_40006030_P_status "disabled"
#define DT_N_S_soc_S_tach_40006030_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_tach_40006030_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_tach_40006030_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_tach_40006030_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_tach_40006030_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006030_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_tach_40006030_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_tach_40006030_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_tach_40006030_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_tach_40006030_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tach_40006030, status, 0)
#define DT_N_S_soc_S_tach_40006030_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tach_40006030, status, 0)
#define DT_N_S_soc_S_tach_40006030_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tach_40006030, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006030_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tach_40006030, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006030_P_status_LEN 1
#define DT_N_S_soc_S_tach_40006030_P_status_EXISTS 1
#define DT_N_S_soc_S_tach_40006030_P_compatible {"microchip,xec-tach"}
#define DT_N_S_soc_S_tach_40006030_P_compatible_IDX_0 "microchip,xec-tach"
#define DT_N_S_soc_S_tach_40006030_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-tach
#define DT_N_S_soc_S_tach_40006030_P_compatible_IDX_0_STRING_TOKEN microchip_xec_tach
#define DT_N_S_soc_S_tach_40006030_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_TACH
#define DT_N_S_soc_S_tach_40006030_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006030_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tach_40006030, compatible, 0)
#define DT_N_S_soc_S_tach_40006030_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tach_40006030, compatible, 0)
#define DT_N_S_soc_S_tach_40006030_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tach_40006030, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006030_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tach_40006030, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006030_P_compatible_LEN 1
#define DT_N_S_soc_S_tach_40006030_P_compatible_EXISTS 1
#define DT_N_S_soc_S_tach_40006030_P_reg {1073766448 /* 0x40006030 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_tach_40006030_P_reg_IDX_0 1073766448
#define DT_N_S_soc_S_tach_40006030_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006030_P_reg_IDX_1 16
#define DT_N_S_soc_S_tach_40006030_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tach_40006030_P_reg_EXISTS 1
#define DT_N_S_soc_S_tach_40006030_P_interrupts {159 /* 0x9f */, 4 /* 0x4 */}
#define DT_N_S_soc_S_tach_40006030_P_interrupts_IDX_0 159
#define DT_N_S_soc_S_tach_40006030_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006030_P_interrupts_IDX_1 4
#define DT_N_S_soc_S_tach_40006030_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tach_40006030_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_tach_40006030_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_tach_40006030_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_tach_40006030_P_girqs {17 /* 0x11 */, 4 /* 0x4 */}
#define DT_N_S_soc_S_tach_40006030_P_girqs_IDX_0 17
#define DT_N_S_soc_S_tach_40006030_P_girqs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006030_P_girqs_IDX_1 4
#define DT_N_S_soc_S_tach_40006030_P_girqs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tach_40006030_P_girqs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tach_40006030, girqs, 0) \
	fn(DT_N_S_soc_S_tach_40006030, girqs, 1)
#define DT_N_S_soc_S_tach_40006030_P_girqs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tach_40006030, girqs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tach_40006030, girqs, 1)
#define DT_N_S_soc_S_tach_40006030_P_girqs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tach_40006030, girqs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tach_40006030, girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006030_P_girqs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tach_40006030, girqs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tach_40006030, girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006030_P_girqs_LEN 2
#define DT_N_S_soc_S_tach_40006030_P_girqs_EXISTS 1
#define DT_N_S_soc_S_tach_40006030_P_pcrs {1 /* 0x1 */, 13 /* 0xd */}
#define DT_N_S_soc_S_tach_40006030_P_pcrs_IDX_0 1
#define DT_N_S_soc_S_tach_40006030_P_pcrs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_tach_40006030_P_pcrs_IDX_1 13
#define DT_N_S_soc_S_tach_40006030_P_pcrs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_tach_40006030_P_pcrs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_tach_40006030, pcrs, 0) \
	fn(DT_N_S_soc_S_tach_40006030, pcrs, 1)
#define DT_N_S_soc_S_tach_40006030_P_pcrs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_tach_40006030, pcrs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tach_40006030, pcrs, 1)
#define DT_N_S_soc_S_tach_40006030_P_pcrs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_tach_40006030, pcrs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_tach_40006030, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006030_P_pcrs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_tach_40006030, pcrs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_tach_40006030, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_tach_40006030_P_pcrs_LEN 2
#define DT_N_S_soc_S_tach_40006030_P_pcrs_EXISTS 1

/*
 * Devicetree node: /soc/timer@40000c00
 *
 * Node identifier: DT_N_S_soc_S_timer_40000c00
 *
 * Binding (compatible = microchip,xec-timer):
 *   $ZEPHYR_BASE/dts/bindings/rtc/microchip,xec-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40000c00_PATH "/soc/timer@40000c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40000c00_FULL_NAME "timer@40000c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40000c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40000c00_CHILD_IDX 19

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_40000c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_40000c00_FOREACH_NODELABEL(fn) fn(timer0)
#define DT_N_S_soc_S_timer_40000c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(timer0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40000c00_CHILD_NUM 0
#define DT_N_S_soc_S_timer_40000c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_40000c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40000c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40000c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40000c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40000c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40000c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40000c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40000c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40000c00_ORD 84
#define DT_N_S_soc_S_timer_40000c00_ORD_STR_SORTABLE 00084

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40000c00_REQUIRES_ORDS \
	10, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40000c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40000c00_EXISTS 1
#define DT_N_INST_1_microchip_xec_timer DT_N_S_soc_S_timer_40000c00
#define DT_N_NODELABEL_timer0           DT_N_S_soc_S_timer_40000c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40000c00_REG_NUM 1
#define DT_N_S_soc_S_timer_40000c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_REG_IDX_0_VAL_ADDRESS 1073744896 /* 0x40000c00 */
#define DT_N_S_soc_S_timer_40000c00_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_timer_40000c00_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40000c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40000c00_IRQ_NUM 1
#define DT_N_S_soc_S_timer_40000c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_IRQ_IDX_0_VAL_irq 136
#define DT_N_S_soc_S_timer_40000c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timer_40000c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timer_40000c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_timer_40000c00_COMPAT_MATCHES_microchip_xec_timer 1
#define DT_N_S_soc_S_timer_40000c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_timer_40000c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_COMPAT_MODEL_IDX_0 "xec-timer"
#define DT_N_S_soc_S_timer_40000c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40000c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40000c00_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40000c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40000c00_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_status "disabled"
#define DT_N_S_soc_S_timer_40000c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40000c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40000c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40000c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40000c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40000c00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_40000c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40000c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000c00, status, 0)
#define DT_N_S_soc_S_timer_40000c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000c00, status, 0)
#define DT_N_S_soc_S_timer_40000c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c00_P_status_LEN 1
#define DT_N_S_soc_S_timer_40000c00_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_compatible {"microchip,xec-timer"}
#define DT_N_S_soc_S_timer_40000c00_P_compatible_IDX_0 "microchip,xec-timer"
#define DT_N_S_soc_S_timer_40000c00_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-timer
#define DT_N_S_soc_S_timer_40000c00_P_compatible_IDX_0_STRING_TOKEN microchip_xec_timer
#define DT_N_S_soc_S_timer_40000c00_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_TIMER
#define DT_N_S_soc_S_timer_40000c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000c00, compatible, 0)
#define DT_N_S_soc_S_timer_40000c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000c00, compatible, 0)
#define DT_N_S_soc_S_timer_40000c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c00_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40000c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_reg {1073744896 /* 0x40000c00 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_timer_40000c00_P_reg_IDX_0 1073744896
#define DT_N_S_soc_S_timer_40000c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_reg_IDX_1 32
#define DT_N_S_soc_S_timer_40000c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_interrupts {136 /* 0x88 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timer_40000c00_P_interrupts_IDX_0 136
#define DT_N_S_soc_S_timer_40000c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timer_40000c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_40000c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_clock_frequency 48000000
#define DT_N_S_soc_S_timer_40000c00_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_prescaler 0
#define DT_N_S_soc_S_timer_40000c00_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_max_value 65535
#define DT_N_S_soc_S_timer_40000c00_P_max_value_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_girqs {23 /* 0x17 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timer_40000c00_P_girqs_IDX_0 23
#define DT_N_S_soc_S_timer_40000c00_P_girqs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_girqs_IDX_1 0
#define DT_N_S_soc_S_timer_40000c00_P_girqs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_girqs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000c00, girqs, 0) \
	fn(DT_N_S_soc_S_timer_40000c00, girqs, 1)
#define DT_N_S_soc_S_timer_40000c00_P_girqs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000c00, girqs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40000c00, girqs, 1)
#define DT_N_S_soc_S_timer_40000c00_P_girqs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000c00, girqs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40000c00, girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c00_P_girqs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000c00, girqs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40000c00, girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c00_P_girqs_LEN 2
#define DT_N_S_soc_S_timer_40000c00_P_girqs_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_pcrs {1 /* 0x1 */, 30 /* 0x1e */}
#define DT_N_S_soc_S_timer_40000c00_P_pcrs_IDX_0 1
#define DT_N_S_soc_S_timer_40000c00_P_pcrs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_pcrs_IDX_1 30
#define DT_N_S_soc_S_timer_40000c00_P_pcrs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_pcrs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000c00, pcrs, 0) \
	fn(DT_N_S_soc_S_timer_40000c00, pcrs, 1)
#define DT_N_S_soc_S_timer_40000c00_P_pcrs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000c00, pcrs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40000c00, pcrs, 1)
#define DT_N_S_soc_S_timer_40000c00_P_pcrs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000c00, pcrs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40000c00, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c00_P_pcrs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000c00, pcrs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40000c00, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c00_P_pcrs_LEN 2
#define DT_N_S_soc_S_timer_40000c00_P_pcrs_EXISTS 1

/*
 * Devicetree node: /soc/timer@40000c20
 *
 * Node identifier: DT_N_S_soc_S_timer_40000c20
 *
 * Binding (compatible = microchip,xec-timer):
 *   $ZEPHYR_BASE/dts/bindings/rtc/microchip,xec-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40000c20_PATH "/soc/timer@40000c20"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40000c20_FULL_NAME "timer@40000c20"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40000c20_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40000c20_CHILD_IDX 20

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_40000c20_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_40000c20_FOREACH_NODELABEL(fn) fn(timer1)
#define DT_N_S_soc_S_timer_40000c20_FOREACH_NODELABEL_VARGS(fn, ...) fn(timer1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40000c20_CHILD_NUM 0
#define DT_N_S_soc_S_timer_40000c20_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_40000c20_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40000c20_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40000c20_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40000c20_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40000c20_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40000c20_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40000c20_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40000c20_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40000c20_ORD 85
#define DT_N_S_soc_S_timer_40000c20_ORD_STR_SORTABLE 00085

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40000c20_REQUIRES_ORDS \
	10, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40000c20_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40000c20_EXISTS 1
#define DT_N_INST_2_microchip_xec_timer DT_N_S_soc_S_timer_40000c20
#define DT_N_NODELABEL_timer1           DT_N_S_soc_S_timer_40000c20

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40000c20_REG_NUM 1
#define DT_N_S_soc_S_timer_40000c20_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c20_REG_IDX_0_VAL_ADDRESS 1073744928 /* 0x40000c20 */
#define DT_N_S_soc_S_timer_40000c20_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_timer_40000c20_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40000c20_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40000c20_IRQ_NUM 1
#define DT_N_S_soc_S_timer_40000c20_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c20_IRQ_IDX_0_VAL_irq 137
#define DT_N_S_soc_S_timer_40000c20_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40000c20_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c20_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timer_40000c20_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40000c20_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timer_40000c20_IRQ_LEVEL 1
#define DT_N_S_soc_S_timer_40000c20_COMPAT_MATCHES_microchip_xec_timer 1
#define DT_N_S_soc_S_timer_40000c20_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c20_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_timer_40000c20_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c20_COMPAT_MODEL_IDX_0 "xec-timer"
#define DT_N_S_soc_S_timer_40000c20_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40000c20_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40000c20_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40000c20_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40000c20_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40000c20_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timer_40000c20_P_status "disabled"
#define DT_N_S_soc_S_timer_40000c20_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40000c20_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40000c20_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40000c20_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40000c20_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c20_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40000c20_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40000c20_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_40000c20_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40000c20_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000c20, status, 0)
#define DT_N_S_soc_S_timer_40000c20_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000c20, status, 0)
#define DT_N_S_soc_S_timer_40000c20_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000c20, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c20_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000c20, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c20_P_status_LEN 1
#define DT_N_S_soc_S_timer_40000c20_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40000c20_P_compatible {"microchip,xec-timer"}
#define DT_N_S_soc_S_timer_40000c20_P_compatible_IDX_0 "microchip,xec-timer"
#define DT_N_S_soc_S_timer_40000c20_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-timer
#define DT_N_S_soc_S_timer_40000c20_P_compatible_IDX_0_STRING_TOKEN microchip_xec_timer
#define DT_N_S_soc_S_timer_40000c20_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_TIMER
#define DT_N_S_soc_S_timer_40000c20_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c20_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000c20, compatible, 0)
#define DT_N_S_soc_S_timer_40000c20_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000c20, compatible, 0)
#define DT_N_S_soc_S_timer_40000c20_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000c20, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c20_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000c20, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c20_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40000c20_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40000c20_P_reg {1073744928 /* 0x40000c20 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_timer_40000c20_P_reg_IDX_0 1073744928
#define DT_N_S_soc_S_timer_40000c20_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c20_P_reg_IDX_1 32
#define DT_N_S_soc_S_timer_40000c20_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40000c20_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40000c20_P_interrupts {137 /* 0x89 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timer_40000c20_P_interrupts_IDX_0 137
#define DT_N_S_soc_S_timer_40000c20_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c20_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timer_40000c20_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40000c20_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40000c20_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_40000c20_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timer_40000c20_P_clock_frequency 48000000
#define DT_N_S_soc_S_timer_40000c20_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_timer_40000c20_P_prescaler 0
#define DT_N_S_soc_S_timer_40000c20_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_40000c20_P_max_value 65535
#define DT_N_S_soc_S_timer_40000c20_P_max_value_EXISTS 1
#define DT_N_S_soc_S_timer_40000c20_P_girqs {23 /* 0x17 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timer_40000c20_P_girqs_IDX_0 23
#define DT_N_S_soc_S_timer_40000c20_P_girqs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c20_P_girqs_IDX_1 1
#define DT_N_S_soc_S_timer_40000c20_P_girqs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40000c20_P_girqs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000c20, girqs, 0) \
	fn(DT_N_S_soc_S_timer_40000c20, girqs, 1)
#define DT_N_S_soc_S_timer_40000c20_P_girqs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000c20, girqs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40000c20, girqs, 1)
#define DT_N_S_soc_S_timer_40000c20_P_girqs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000c20, girqs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40000c20, girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c20_P_girqs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000c20, girqs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40000c20, girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c20_P_girqs_LEN 2
#define DT_N_S_soc_S_timer_40000c20_P_girqs_EXISTS 1
#define DT_N_S_soc_S_timer_40000c20_P_pcrs {1 /* 0x1 */, 31 /* 0x1f */}
#define DT_N_S_soc_S_timer_40000c20_P_pcrs_IDX_0 1
#define DT_N_S_soc_S_timer_40000c20_P_pcrs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c20_P_pcrs_IDX_1 31
#define DT_N_S_soc_S_timer_40000c20_P_pcrs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40000c20_P_pcrs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000c20, pcrs, 0) \
	fn(DT_N_S_soc_S_timer_40000c20, pcrs, 1)
#define DT_N_S_soc_S_timer_40000c20_P_pcrs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000c20, pcrs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40000c20, pcrs, 1)
#define DT_N_S_soc_S_timer_40000c20_P_pcrs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000c20, pcrs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40000c20, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c20_P_pcrs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000c20, pcrs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40000c20, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c20_P_pcrs_LEN 2
#define DT_N_S_soc_S_timer_40000c20_P_pcrs_EXISTS 1

/*
 * Devicetree node: /soc/timer@40000c80
 *
 * Node identifier: DT_N_S_soc_S_timer_40000c80
 *
 * Binding (compatible = microchip,xec-timer):
 *   $ZEPHYR_BASE/dts/bindings/rtc/microchip,xec-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40000c80_PATH "/soc/timer@40000c80"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40000c80_FULL_NAME "timer@40000c80"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40000c80_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40000c80_CHILD_IDX 21

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_40000c80_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_40000c80_FOREACH_NODELABEL(fn) fn(timer4)
#define DT_N_S_soc_S_timer_40000c80_FOREACH_NODELABEL_VARGS(fn, ...) fn(timer4, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40000c80_CHILD_NUM 0
#define DT_N_S_soc_S_timer_40000c80_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_40000c80_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40000c80_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40000c80_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40000c80_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40000c80_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40000c80_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40000c80_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40000c80_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40000c80_ORD 86
#define DT_N_S_soc_S_timer_40000c80_ORD_STR_SORTABLE 00086

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40000c80_REQUIRES_ORDS \
	10, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40000c80_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40000c80_EXISTS 1
#define DT_N_INST_3_microchip_xec_timer DT_N_S_soc_S_timer_40000c80
#define DT_N_NODELABEL_timer4           DT_N_S_soc_S_timer_40000c80

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40000c80_REG_NUM 1
#define DT_N_S_soc_S_timer_40000c80_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c80_REG_IDX_0_VAL_ADDRESS 1073745024 /* 0x40000c80 */
#define DT_N_S_soc_S_timer_40000c80_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_timer_40000c80_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40000c80_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40000c80_IRQ_NUM 1
#define DT_N_S_soc_S_timer_40000c80_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c80_IRQ_IDX_0_VAL_irq 140
#define DT_N_S_soc_S_timer_40000c80_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40000c80_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c80_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timer_40000c80_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40000c80_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timer_40000c80_IRQ_LEVEL 1
#define DT_N_S_soc_S_timer_40000c80_COMPAT_MATCHES_microchip_xec_timer 1
#define DT_N_S_soc_S_timer_40000c80_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c80_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_timer_40000c80_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c80_COMPAT_MODEL_IDX_0 "xec-timer"
#define DT_N_S_soc_S_timer_40000c80_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40000c80_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40000c80_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40000c80_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40000c80_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40000c80_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timer_40000c80_P_status "disabled"
#define DT_N_S_soc_S_timer_40000c80_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40000c80_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40000c80_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40000c80_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40000c80_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c80_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40000c80_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40000c80_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_40000c80_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40000c80_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000c80, status, 0)
#define DT_N_S_soc_S_timer_40000c80_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000c80, status, 0)
#define DT_N_S_soc_S_timer_40000c80_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000c80, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c80_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000c80, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c80_P_status_LEN 1
#define DT_N_S_soc_S_timer_40000c80_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40000c80_P_compatible {"microchip,xec-timer"}
#define DT_N_S_soc_S_timer_40000c80_P_compatible_IDX_0 "microchip,xec-timer"
#define DT_N_S_soc_S_timer_40000c80_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-timer
#define DT_N_S_soc_S_timer_40000c80_P_compatible_IDX_0_STRING_TOKEN microchip_xec_timer
#define DT_N_S_soc_S_timer_40000c80_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_TIMER
#define DT_N_S_soc_S_timer_40000c80_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c80_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000c80, compatible, 0)
#define DT_N_S_soc_S_timer_40000c80_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000c80, compatible, 0)
#define DT_N_S_soc_S_timer_40000c80_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000c80, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c80_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000c80, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c80_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40000c80_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40000c80_P_reg {1073745024 /* 0x40000c80 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_timer_40000c80_P_reg_IDX_0 1073745024
#define DT_N_S_soc_S_timer_40000c80_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c80_P_reg_IDX_1 32
#define DT_N_S_soc_S_timer_40000c80_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40000c80_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40000c80_P_interrupts {140 /* 0x8c */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timer_40000c80_P_interrupts_IDX_0 140
#define DT_N_S_soc_S_timer_40000c80_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c80_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timer_40000c80_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40000c80_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40000c80_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_40000c80_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timer_40000c80_P_clock_frequency 48000000
#define DT_N_S_soc_S_timer_40000c80_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_timer_40000c80_P_prescaler 0
#define DT_N_S_soc_S_timer_40000c80_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_40000c80_P_max_value 4294967295
#define DT_N_S_soc_S_timer_40000c80_P_max_value_EXISTS 1
#define DT_N_S_soc_S_timer_40000c80_P_girqs {23 /* 0x17 */, 4 /* 0x4 */}
#define DT_N_S_soc_S_timer_40000c80_P_girqs_IDX_0 23
#define DT_N_S_soc_S_timer_40000c80_P_girqs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c80_P_girqs_IDX_1 4
#define DT_N_S_soc_S_timer_40000c80_P_girqs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40000c80_P_girqs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000c80, girqs, 0) \
	fn(DT_N_S_soc_S_timer_40000c80, girqs, 1)
#define DT_N_S_soc_S_timer_40000c80_P_girqs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000c80, girqs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40000c80, girqs, 1)
#define DT_N_S_soc_S_timer_40000c80_P_girqs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000c80, girqs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40000c80, girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c80_P_girqs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000c80, girqs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40000c80, girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c80_P_girqs_LEN 2
#define DT_N_S_soc_S_timer_40000c80_P_girqs_EXISTS 1
#define DT_N_S_soc_S_timer_40000c80_P_pcrs {3 /* 0x3 */, 23 /* 0x17 */}
#define DT_N_S_soc_S_timer_40000c80_P_pcrs_IDX_0 3
#define DT_N_S_soc_S_timer_40000c80_P_pcrs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c80_P_pcrs_IDX_1 23
#define DT_N_S_soc_S_timer_40000c80_P_pcrs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40000c80_P_pcrs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000c80, pcrs, 0) \
	fn(DT_N_S_soc_S_timer_40000c80, pcrs, 1)
#define DT_N_S_soc_S_timer_40000c80_P_pcrs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000c80, pcrs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40000c80, pcrs, 1)
#define DT_N_S_soc_S_timer_40000c80_P_pcrs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000c80, pcrs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40000c80, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c80_P_pcrs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000c80, pcrs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40000c80, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c80_P_pcrs_LEN 2
#define DT_N_S_soc_S_timer_40000c80_P_pcrs_EXISTS 1

/*
 * Devicetree node: /soc/timer@40000ca0
 *
 * Node identifier: DT_N_S_soc_S_timer_40000ca0
 *
 * Binding (compatible = microchip,xec-timer):
 *   $ZEPHYR_BASE/dts/bindings/rtc/microchip,xec-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40000ca0_PATH "/soc/timer@40000ca0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40000ca0_FULL_NAME "timer@40000ca0"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40000ca0_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40000ca0_CHILD_IDX 22

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_40000ca0_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_40000ca0_FOREACH_NODELABEL(fn) fn(timer5)
#define DT_N_S_soc_S_timer_40000ca0_FOREACH_NODELABEL_VARGS(fn, ...) fn(timer5, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40000ca0_CHILD_NUM 0
#define DT_N_S_soc_S_timer_40000ca0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_40000ca0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40000ca0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40000ca0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40000ca0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40000ca0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40000ca0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40000ca0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40000ca0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40000ca0_ORD 87
#define DT_N_S_soc_S_timer_40000ca0_ORD_STR_SORTABLE 00087

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40000ca0_REQUIRES_ORDS \
	10, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40000ca0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40000ca0_EXISTS 1
#define DT_N_INST_0_microchip_xec_timer DT_N_S_soc_S_timer_40000ca0
#define DT_N_NODELABEL_timer5           DT_N_S_soc_S_timer_40000ca0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40000ca0_REG_NUM 1
#define DT_N_S_soc_S_timer_40000ca0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000ca0_REG_IDX_0_VAL_ADDRESS 1073745056 /* 0x40000ca0 */
#define DT_N_S_soc_S_timer_40000ca0_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_timer_40000ca0_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40000ca0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40000ca0_IRQ_NUM 1
#define DT_N_S_soc_S_timer_40000ca0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000ca0_IRQ_IDX_0_VAL_irq 141
#define DT_N_S_soc_S_timer_40000ca0_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40000ca0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000ca0_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timer_40000ca0_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40000ca0_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timer_40000ca0_IRQ_LEVEL 1
#define DT_N_S_soc_S_timer_40000ca0_COMPAT_MATCHES_microchip_xec_timer 1
#define DT_N_S_soc_S_timer_40000ca0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000ca0_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_timer_40000ca0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000ca0_COMPAT_MODEL_IDX_0 "xec-timer"
#define DT_N_S_soc_S_timer_40000ca0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40000ca0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40000ca0_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40000ca0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40000ca0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40000ca0_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timer_40000ca0_P_status "okay"
#define DT_N_S_soc_S_timer_40000ca0_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_timer_40000ca0_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timer_40000ca0_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_40000ca0_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_timer_40000ca0_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000ca0_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timer_40000ca0_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_timer_40000ca0_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timer_40000ca0_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_40000ca0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000ca0, status, 0)
#define DT_N_S_soc_S_timer_40000ca0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000ca0, status, 0)
#define DT_N_S_soc_S_timer_40000ca0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000ca0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000ca0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000ca0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000ca0_P_status_LEN 1
#define DT_N_S_soc_S_timer_40000ca0_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40000ca0_P_compatible {"microchip,xec-timer"}
#define DT_N_S_soc_S_timer_40000ca0_P_compatible_IDX_0 "microchip,xec-timer"
#define DT_N_S_soc_S_timer_40000ca0_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-timer
#define DT_N_S_soc_S_timer_40000ca0_P_compatible_IDX_0_STRING_TOKEN microchip_xec_timer
#define DT_N_S_soc_S_timer_40000ca0_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_TIMER
#define DT_N_S_soc_S_timer_40000ca0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000ca0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000ca0, compatible, 0)
#define DT_N_S_soc_S_timer_40000ca0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000ca0, compatible, 0)
#define DT_N_S_soc_S_timer_40000ca0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000ca0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000ca0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000ca0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000ca0_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40000ca0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40000ca0_P_reg {1073745056 /* 0x40000ca0 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_timer_40000ca0_P_reg_IDX_0 1073745056
#define DT_N_S_soc_S_timer_40000ca0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000ca0_P_reg_IDX_1 32
#define DT_N_S_soc_S_timer_40000ca0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40000ca0_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40000ca0_P_interrupts {141 /* 0x8d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timer_40000ca0_P_interrupts_IDX_0 141
#define DT_N_S_soc_S_timer_40000ca0_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000ca0_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timer_40000ca0_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40000ca0_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40000ca0_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_40000ca0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timer_40000ca0_P_clock_frequency 48000000
#define DT_N_S_soc_S_timer_40000ca0_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_timer_40000ca0_P_prescaler 0
#define DT_N_S_soc_S_timer_40000ca0_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_40000ca0_P_max_value 4294967295
#define DT_N_S_soc_S_timer_40000ca0_P_max_value_EXISTS 1
#define DT_N_S_soc_S_timer_40000ca0_P_girqs {23 /* 0x17 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_timer_40000ca0_P_girqs_IDX_0 23
#define DT_N_S_soc_S_timer_40000ca0_P_girqs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000ca0_P_girqs_IDX_1 5
#define DT_N_S_soc_S_timer_40000ca0_P_girqs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40000ca0_P_girqs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000ca0, girqs, 0) \
	fn(DT_N_S_soc_S_timer_40000ca0, girqs, 1)
#define DT_N_S_soc_S_timer_40000ca0_P_girqs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000ca0, girqs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40000ca0, girqs, 1)
#define DT_N_S_soc_S_timer_40000ca0_P_girqs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000ca0, girqs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40000ca0, girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000ca0_P_girqs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000ca0, girqs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40000ca0, girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000ca0_P_girqs_LEN 2
#define DT_N_S_soc_S_timer_40000ca0_P_girqs_EXISTS 1
#define DT_N_S_soc_S_timer_40000ca0_P_pcrs {3 /* 0x3 */, 24 /* 0x18 */}
#define DT_N_S_soc_S_timer_40000ca0_P_pcrs_IDX_0 3
#define DT_N_S_soc_S_timer_40000ca0_P_pcrs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000ca0_P_pcrs_IDX_1 24
#define DT_N_S_soc_S_timer_40000ca0_P_pcrs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40000ca0_P_pcrs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000ca0, pcrs, 0) \
	fn(DT_N_S_soc_S_timer_40000ca0, pcrs, 1)
#define DT_N_S_soc_S_timer_40000ca0_P_pcrs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000ca0, pcrs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40000ca0, pcrs, 1)
#define DT_N_S_soc_S_timer_40000ca0_P_pcrs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000ca0, pcrs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40000ca0, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000ca0_P_pcrs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000ca0, pcrs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40000ca0, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000ca0_P_pcrs_LEN 2
#define DT_N_S_soc_S_timer_40000ca0_P_pcrs_EXISTS 1

/*
 * Devicetree node: /soc/timer@40007400
 *
 * Node identifier: DT_N_S_soc_S_timer_40007400
 *
 * Binding (compatible = microchip,xec-rtos-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/microchip,xec-rtos-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40007400_PATH "/soc/timer@40007400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40007400_FULL_NAME "timer@40007400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40007400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40007400_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_40007400_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_40007400_FOREACH_NODELABEL(fn) fn(rtimer)
#define DT_N_S_soc_S_timer_40007400_FOREACH_NODELABEL_VARGS(fn, ...) fn(rtimer, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40007400_CHILD_NUM 0
#define DT_N_S_soc_S_timer_40007400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_40007400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40007400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40007400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40007400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40007400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40007400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40007400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40007400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40007400_ORD 88
#define DT_N_S_soc_S_timer_40007400_ORD_STR_SORTABLE 00088

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40007400_REQUIRES_ORDS \
	10, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40007400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40007400_EXISTS 1
#define DT_N_INST_0_microchip_xec_rtos_timer DT_N_S_soc_S_timer_40007400
#define DT_N_NODELABEL_rtimer                DT_N_S_soc_S_timer_40007400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40007400_REG_NUM 1
#define DT_N_S_soc_S_timer_40007400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40007400_REG_IDX_0_VAL_ADDRESS 1073771520 /* 0x40007400 */
#define DT_N_S_soc_S_timer_40007400_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_40007400_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40007400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40007400_IRQ_NUM 1
#define DT_N_S_soc_S_timer_40007400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40007400_IRQ_IDX_0_VAL_irq 111
#define DT_N_S_soc_S_timer_40007400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40007400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40007400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timer_40007400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40007400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timer_40007400_IRQ_LEVEL 1
#define DT_N_S_soc_S_timer_40007400_COMPAT_MATCHES_microchip_xec_rtos_timer 1
#define DT_N_S_soc_S_timer_40007400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40007400_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_timer_40007400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40007400_COMPAT_MODEL_IDX_0 "xec-rtos-timer"
#define DT_N_S_soc_S_timer_40007400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40007400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40007400_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40007400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40007400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40007400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timer_40007400_P_compatible {"microchip,xec-rtos-timer"}
#define DT_N_S_soc_S_timer_40007400_P_compatible_IDX_0 "microchip,xec-rtos-timer"
#define DT_N_S_soc_S_timer_40007400_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-rtos-timer
#define DT_N_S_soc_S_timer_40007400_P_compatible_IDX_0_STRING_TOKEN microchip_xec_rtos_timer
#define DT_N_S_soc_S_timer_40007400_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_RTOS_TIMER
#define DT_N_S_soc_S_timer_40007400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40007400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40007400, compatible, 0)
#define DT_N_S_soc_S_timer_40007400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40007400, compatible, 0)
#define DT_N_S_soc_S_timer_40007400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40007400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40007400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40007400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40007400_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40007400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40007400_P_reg {1073771520 /* 0x40007400 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_40007400_P_reg_IDX_0 1073771520
#define DT_N_S_soc_S_timer_40007400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40007400_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_40007400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40007400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40007400_P_interrupts {111 /* 0x6f */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timer_40007400_P_interrupts_IDX_0 111
#define DT_N_S_soc_S_timer_40007400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40007400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timer_40007400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40007400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40007400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_40007400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timer_40007400_P_girqs {23 /* 0x17 */, 10 /* 0xa */}
#define DT_N_S_soc_S_timer_40007400_P_girqs_IDX_0 23
#define DT_N_S_soc_S_timer_40007400_P_girqs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40007400_P_girqs_IDX_1 10
#define DT_N_S_soc_S_timer_40007400_P_girqs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40007400_P_girqs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40007400, girqs, 0) \
	fn(DT_N_S_soc_S_timer_40007400, girqs, 1)
#define DT_N_S_soc_S_timer_40007400_P_girqs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40007400, girqs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40007400, girqs, 1)
#define DT_N_S_soc_S_timer_40007400_P_girqs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40007400, girqs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40007400, girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40007400_P_girqs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40007400, girqs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40007400, girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40007400_P_girqs_LEN 2
#define DT_N_S_soc_S_timer_40007400_P_girqs_EXISTS 1

/*
 * Devicetree node: /soc/timer@40009800
 *
 * Node identifier: DT_N_S_soc_S_timer_40009800
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40009800_PATH "/soc/timer@40009800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40009800_FULL_NAME "timer@40009800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40009800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40009800_CHILD_IDX 23

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_40009800_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_40009800_FOREACH_NODELABEL(fn) fn(hibtimer0)
#define DT_N_S_soc_S_timer_40009800_FOREACH_NODELABEL_VARGS(fn, ...) fn(hibtimer0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40009800_CHILD_NUM 0
#define DT_N_S_soc_S_timer_40009800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_40009800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40009800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40009800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40009800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40009800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40009800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40009800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40009800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40009800_ORD 89
#define DT_N_S_soc_S_timer_40009800_ORD_STR_SORTABLE 00089

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40009800_REQUIRES_ORDS \
	10, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40009800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40009800_EXISTS 1
#define DT_N_NODELABEL_hibtimer0 DT_N_S_soc_S_timer_40009800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40009800_REG_NUM 1
#define DT_N_S_soc_S_timer_40009800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009800_REG_IDX_0_VAL_ADDRESS 1073780736 /* 0x40009800 */
#define DT_N_S_soc_S_timer_40009800_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_timer_40009800_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40009800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40009800_IRQ_NUM 1
#define DT_N_S_soc_S_timer_40009800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009800_IRQ_IDX_0_VAL_irq 112
#define DT_N_S_soc_S_timer_40009800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40009800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timer_40009800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40009800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timer_40009800_IRQ_LEVEL 1
#define DT_N_S_soc_S_timer_40009800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40009800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40009800_P_reg {1073780736 /* 0x40009800 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_timer_40009800_P_reg_IDX_0 1073780736
#define DT_N_S_soc_S_timer_40009800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009800_P_reg_IDX_1 32
#define DT_N_S_soc_S_timer_40009800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40009800_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40009800_P_interrupts {112 /* 0x70 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timer_40009800_P_interrupts_IDX_0 112
#define DT_N_S_soc_S_timer_40009800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timer_40009800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40009800_P_interrupts_EXISTS 1

/*
 * Devicetree node: /soc/timer@40009820
 *
 * Node identifier: DT_N_S_soc_S_timer_40009820
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40009820_PATH "/soc/timer@40009820"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40009820_FULL_NAME "timer@40009820"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40009820_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40009820_CHILD_IDX 24

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_40009820_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_40009820_FOREACH_NODELABEL(fn) fn(hibtimer1)
#define DT_N_S_soc_S_timer_40009820_FOREACH_NODELABEL_VARGS(fn, ...) fn(hibtimer1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40009820_CHILD_NUM 0
#define DT_N_S_soc_S_timer_40009820_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_40009820_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40009820_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40009820_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40009820_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40009820_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40009820_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40009820_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40009820_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40009820_ORD 90
#define DT_N_S_soc_S_timer_40009820_ORD_STR_SORTABLE 00090

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40009820_REQUIRES_ORDS \
	10, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40009820_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40009820_EXISTS 1
#define DT_N_NODELABEL_hibtimer1 DT_N_S_soc_S_timer_40009820

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40009820_REG_NUM 1
#define DT_N_S_soc_S_timer_40009820_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009820_REG_IDX_0_VAL_ADDRESS 1073780768 /* 0x40009820 */
#define DT_N_S_soc_S_timer_40009820_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_timer_40009820_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40009820_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40009820_IRQ_NUM 1
#define DT_N_S_soc_S_timer_40009820_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009820_IRQ_IDX_0_VAL_irq 113
#define DT_N_S_soc_S_timer_40009820_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40009820_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009820_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timer_40009820_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40009820_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timer_40009820_IRQ_LEVEL 1
#define DT_N_S_soc_S_timer_40009820_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40009820_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40009820_P_reg {1073780768 /* 0x40009820 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_timer_40009820_P_reg_IDX_0 1073780768
#define DT_N_S_soc_S_timer_40009820_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009820_P_reg_IDX_1 32
#define DT_N_S_soc_S_timer_40009820_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40009820_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40009820_P_interrupts {113 /* 0x71 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timer_40009820_P_interrupts_IDX_0 113
#define DT_N_S_soc_S_timer_40009820_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009820_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timer_40009820_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40009820_P_interrupts_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 *
 * Binding (compatible = arm,armv7m-systick):
 *   $ZEPHYR_BASE/dts/bindings/timer/arm,armv7m-systick.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_e000e010_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_e000e010_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_e000e010_FOREACH_NODELABEL(fn) fn(systick)
#define DT_N_S_soc_S_timer_e000e010_FOREACH_NODELABEL_VARGS(fn, ...) fn(systick, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_e000e010_CHILD_NUM 0
#define DT_N_S_soc_S_timer_e000e010_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 91
#define DT_N_S_soc_S_timer_e000e010_ORD_STR_SORTABLE 00091

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	10, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv7m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_RANGES_NUM 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_IRQ_LEVEL 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv7m_systick 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0 "armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_e000e010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source 0
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_status "disabled"
#define DT_N_S_soc_S_timer_e000e010_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_e000e010_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_e000e010_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_e000e010_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_e000e010_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_e000e010_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_e000e010_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, status, 0)
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, status, 0)
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_status_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv7m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UNQUOTED arm,armv7m-systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_TOKEN arm_armv7m_systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV7M_SYSTICK
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/uart@400f2400
 *
 * Node identifier: DT_N_S_soc_S_uart_400f2400
 *
 * Binding (compatible = microchip,xec-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/microchip,xec-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_400f2400_PATH "/soc/uart@400f2400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_400f2400_FULL_NAME "uart@400f2400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_400f2400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_400f2400_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_uart_400f2400_NODELABEL_NUM 1
#define DT_N_S_soc_S_uart_400f2400_FOREACH_NODELABEL(fn) fn(uart0)
#define DT_N_S_soc_S_uart_400f2400_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_400f2400_CHILD_NUM 0
#define DT_N_S_soc_S_uart_400f2400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_uart_400f2400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_400f2400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_400f2400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_400f2400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_400f2400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_400f2400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_400f2400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_400f2400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_400f2400_ORD 92
#define DT_N_S_soc_S_uart_400f2400_ORD_STR_SORTABLE 00092

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_400f2400_REQUIRES_ORDS \
	10, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_400f2400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_400f2400_EXISTS 1
#define DT_N_INST_1_microchip_xec_uart DT_N_S_soc_S_uart_400f2400
#define DT_N_NODELABEL_uart0           DT_N_S_soc_S_uart_400f2400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_400f2400_REG_NUM 1
#define DT_N_S_soc_S_uart_400f2400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2400_REG_IDX_0_VAL_ADDRESS 1074734080 /* 0x400f2400 */
#define DT_N_S_soc_S_uart_400f2400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_uart_400f2400_RANGES_NUM 0
#define DT_N_S_soc_S_uart_400f2400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_400f2400_IRQ_NUM 1
#define DT_N_S_soc_S_uart_400f2400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2400_IRQ_IDX_0_VAL_irq 40
#define DT_N_S_soc_S_uart_400f2400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_400f2400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_uart_400f2400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_400f2400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_uart_400f2400_IRQ_LEVEL 1
#define DT_N_S_soc_S_uart_400f2400_COMPAT_MATCHES_microchip_xec_uart 1
#define DT_N_S_soc_S_uart_400f2400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2400_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_uart_400f2400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2400_COMPAT_MODEL_IDX_0 "xec-uart"
#define DT_N_S_soc_S_uart_400f2400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_400f2400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_uart_400f2400_P_wakeup_source 0
#define DT_N_S_soc_S_uart_400f2400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_400f2400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_400f2400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_uart_400f2400_P_status "disabled"
#define DT_N_S_soc_S_uart_400f2400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_uart_400f2400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_uart_400f2400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_400f2400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_uart_400f2400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_uart_400f2400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_uart_400f2400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_uart_400f2400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_400f2400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_400f2400, status, 0)
#define DT_N_S_soc_S_uart_400f2400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_400f2400, status, 0)
#define DT_N_S_soc_S_uart_400f2400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_400f2400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_400f2400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_400f2400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_400f2400_P_status_LEN 1
#define DT_N_S_soc_S_uart_400f2400_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_400f2400_P_compatible {"microchip,xec-uart"}
#define DT_N_S_soc_S_uart_400f2400_P_compatible_IDX_0 "microchip,xec-uart"
#define DT_N_S_soc_S_uart_400f2400_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-uart
#define DT_N_S_soc_S_uart_400f2400_P_compatible_IDX_0_STRING_TOKEN microchip_xec_uart
#define DT_N_S_soc_S_uart_400f2400_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_UART
#define DT_N_S_soc_S_uart_400f2400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_400f2400, compatible, 0)
#define DT_N_S_soc_S_uart_400f2400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_400f2400, compatible, 0)
#define DT_N_S_soc_S_uart_400f2400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_400f2400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_400f2400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_400f2400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_400f2400_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_400f2400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_400f2400_P_reg {1074734080 /* 0x400f2400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_uart_400f2400_P_reg_IDX_0 1074734080
#define DT_N_S_soc_S_uart_400f2400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_uart_400f2400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_400f2400_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_400f2400_P_interrupts {40 /* 0x28 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_uart_400f2400_P_interrupts_IDX_0 40
#define DT_N_S_soc_S_uart_400f2400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_uart_400f2400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_400f2400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_400f2400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_uart_400f2400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_uart_400f2400_P_clock_frequency 1843200
#define DT_N_S_soc_S_uart_400f2400_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_uart_400f2400_P_current_speed 38400
#define DT_N_S_soc_S_uart_400f2400_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_uart_400f2400_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_400f2400_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_400f2400_P_ldn 9
#define DT_N_S_soc_S_uart_400f2400_P_ldn_EXISTS 1
#define DT_N_S_soc_S_uart_400f2400_P_girqs {15 /* 0xf */, 0 /* 0x0 */}
#define DT_N_S_soc_S_uart_400f2400_P_girqs_IDX_0 15
#define DT_N_S_soc_S_uart_400f2400_P_girqs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2400_P_girqs_IDX_1 0
#define DT_N_S_soc_S_uart_400f2400_P_girqs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_400f2400_P_girqs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_400f2400, girqs, 0) \
	fn(DT_N_S_soc_S_uart_400f2400, girqs, 1)
#define DT_N_S_soc_S_uart_400f2400_P_girqs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_400f2400, girqs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_400f2400, girqs, 1)
#define DT_N_S_soc_S_uart_400f2400_P_girqs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_400f2400, girqs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_400f2400, girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_400f2400_P_girqs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_400f2400, girqs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_400f2400, girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_400f2400_P_girqs_LEN 2
#define DT_N_S_soc_S_uart_400f2400_P_girqs_EXISTS 1
#define DT_N_S_soc_S_uart_400f2400_P_pcrs {2 /* 0x2 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_uart_400f2400_P_pcrs_IDX_0 2
#define DT_N_S_soc_S_uart_400f2400_P_pcrs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2400_P_pcrs_IDX_1 1
#define DT_N_S_soc_S_uart_400f2400_P_pcrs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_400f2400_P_pcrs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_400f2400, pcrs, 0) \
	fn(DT_N_S_soc_S_uart_400f2400, pcrs, 1)
#define DT_N_S_soc_S_uart_400f2400_P_pcrs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_400f2400, pcrs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_400f2400, pcrs, 1)
#define DT_N_S_soc_S_uart_400f2400_P_pcrs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_400f2400, pcrs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_400f2400, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_400f2400_P_pcrs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_400f2400, pcrs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_400f2400, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_400f2400_P_pcrs_LEN 2
#define DT_N_S_soc_S_uart_400f2400_P_pcrs_EXISTS 1

/*
 * Devicetree node: /soc/uart@400f2800
 *
 * Node identifier: DT_N_S_soc_S_uart_400f2800
 *
 * Binding (compatible = microchip,xec-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/microchip,xec-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_400f2800_PATH "/soc/uart@400f2800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_400f2800_FULL_NAME "uart@400f2800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_400f2800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_400f2800_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_uart_400f2800_NODELABEL_NUM 1
#define DT_N_S_soc_S_uart_400f2800_FOREACH_NODELABEL(fn) fn(uart1)
#define DT_N_S_soc_S_uart_400f2800_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_400f2800_CHILD_NUM 0
#define DT_N_S_soc_S_uart_400f2800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_uart_400f2800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_400f2800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_400f2800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_400f2800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_400f2800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_400f2800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_400f2800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_400f2800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_400f2800_ORD 93
#define DT_N_S_soc_S_uart_400f2800_ORD_STR_SORTABLE 00093

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_400f2800_REQUIRES_ORDS \
	10, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_400f2800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_400f2800_EXISTS 1
#define DT_N_INST_2_microchip_xec_uart DT_N_S_soc_S_uart_400f2800
#define DT_N_NODELABEL_uart1           DT_N_S_soc_S_uart_400f2800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_400f2800_REG_NUM 1
#define DT_N_S_soc_S_uart_400f2800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2800_REG_IDX_0_VAL_ADDRESS 1074735104 /* 0x400f2800 */
#define DT_N_S_soc_S_uart_400f2800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_uart_400f2800_RANGES_NUM 0
#define DT_N_S_soc_S_uart_400f2800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_400f2800_IRQ_NUM 1
#define DT_N_S_soc_S_uart_400f2800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2800_IRQ_IDX_0_VAL_irq 41
#define DT_N_S_soc_S_uart_400f2800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_400f2800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_uart_400f2800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_400f2800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_uart_400f2800_IRQ_LEVEL 1
#define DT_N_S_soc_S_uart_400f2800_COMPAT_MATCHES_microchip_xec_uart 1
#define DT_N_S_soc_S_uart_400f2800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2800_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_uart_400f2800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2800_COMPAT_MODEL_IDX_0 "xec-uart"
#define DT_N_S_soc_S_uart_400f2800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_400f2800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_uart_400f2800_P_wakeup_source 0
#define DT_N_S_soc_S_uart_400f2800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_400f2800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_400f2800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_uart_400f2800_P_status "disabled"
#define DT_N_S_soc_S_uart_400f2800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_uart_400f2800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_uart_400f2800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_400f2800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_uart_400f2800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_uart_400f2800_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_uart_400f2800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_uart_400f2800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_400f2800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_400f2800, status, 0)
#define DT_N_S_soc_S_uart_400f2800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_400f2800, status, 0)
#define DT_N_S_soc_S_uart_400f2800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_400f2800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_400f2800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_400f2800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_400f2800_P_status_LEN 1
#define DT_N_S_soc_S_uart_400f2800_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_400f2800_P_compatible {"microchip,xec-uart"}
#define DT_N_S_soc_S_uart_400f2800_P_compatible_IDX_0 "microchip,xec-uart"
#define DT_N_S_soc_S_uart_400f2800_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-uart
#define DT_N_S_soc_S_uart_400f2800_P_compatible_IDX_0_STRING_TOKEN microchip_xec_uart
#define DT_N_S_soc_S_uart_400f2800_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_UART
#define DT_N_S_soc_S_uart_400f2800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_400f2800, compatible, 0)
#define DT_N_S_soc_S_uart_400f2800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_400f2800, compatible, 0)
#define DT_N_S_soc_S_uart_400f2800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_400f2800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_400f2800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_400f2800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_400f2800_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_400f2800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_400f2800_P_reg {1074735104 /* 0x400f2800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_uart_400f2800_P_reg_IDX_0 1074735104
#define DT_N_S_soc_S_uart_400f2800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_uart_400f2800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_400f2800_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_400f2800_P_interrupts {41 /* 0x29 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_uart_400f2800_P_interrupts_IDX_0 41
#define DT_N_S_soc_S_uart_400f2800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_uart_400f2800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_400f2800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_400f2800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_uart_400f2800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_uart_400f2800_P_clock_frequency 1843200
#define DT_N_S_soc_S_uart_400f2800_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_uart_400f2800_P_current_speed 38400
#define DT_N_S_soc_S_uart_400f2800_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_uart_400f2800_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_400f2800_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_400f2800_P_ldn 10
#define DT_N_S_soc_S_uart_400f2800_P_ldn_EXISTS 1
#define DT_N_S_soc_S_uart_400f2800_P_girqs {15 /* 0xf */, 1 /* 0x1 */}
#define DT_N_S_soc_S_uart_400f2800_P_girqs_IDX_0 15
#define DT_N_S_soc_S_uart_400f2800_P_girqs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2800_P_girqs_IDX_1 1
#define DT_N_S_soc_S_uart_400f2800_P_girqs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_400f2800_P_girqs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_400f2800, girqs, 0) \
	fn(DT_N_S_soc_S_uart_400f2800, girqs, 1)
#define DT_N_S_soc_S_uart_400f2800_P_girqs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_400f2800, girqs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_400f2800, girqs, 1)
#define DT_N_S_soc_S_uart_400f2800_P_girqs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_400f2800, girqs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_400f2800, girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_400f2800_P_girqs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_400f2800, girqs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_400f2800, girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_400f2800_P_girqs_LEN 2
#define DT_N_S_soc_S_uart_400f2800_P_girqs_EXISTS 1
#define DT_N_S_soc_S_uart_400f2800_P_pcrs {2 /* 0x2 */, 2 /* 0x2 */}
#define DT_N_S_soc_S_uart_400f2800_P_pcrs_IDX_0 2
#define DT_N_S_soc_S_uart_400f2800_P_pcrs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2800_P_pcrs_IDX_1 2
#define DT_N_S_soc_S_uart_400f2800_P_pcrs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_400f2800_P_pcrs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_400f2800, pcrs, 0) \
	fn(DT_N_S_soc_S_uart_400f2800, pcrs, 1)
#define DT_N_S_soc_S_uart_400f2800_P_pcrs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_400f2800, pcrs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_400f2800, pcrs, 1)
#define DT_N_S_soc_S_uart_400f2800_P_pcrs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_400f2800, pcrs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_400f2800, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_400f2800_P_pcrs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_400f2800, pcrs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_400f2800, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_400f2800_P_pcrs_LEN 2
#define DT_N_S_soc_S_uart_400f2800_P_pcrs_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/uart2_rx_gpio145
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_PATH "/soc/pin-controller@40081000/uart2_rx_gpio145"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_FULL_NAME "uart2_rx_gpio145"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_CHILD_IDX 62

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_FOREACH_NODELABEL(fn) fn(uart2_rx_gpio145)
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart2_rx_gpio145, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_ORD 94
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_ORD_STR_SORTABLE 00094

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_SUPPORTS_ORDS \
	96, /* /soc/uart@400f2c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_EXISTS 1
#define DT_N_NODELABEL_uart2_rx_gpio145 DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_pinmux 1107
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/uart2_tx_gpio146
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_PATH "/soc/pin-controller@40081000/uart2_tx_gpio146"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_FULL_NAME "uart2_tx_gpio146"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_CHILD_IDX 61

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_FOREACH_NODELABEL(fn) fn(uart2_tx_gpio146)
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart2_tx_gpio146, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_ORD 95
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_ORD_STR_SORTABLE 00095

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_SUPPORTS_ORDS \
	96, /* /soc/uart@400f2c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_EXISTS 1
#define DT_N_NODELABEL_uart2_tx_gpio146 DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_pinmux 1123
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/uart@400f2c00
 *
 * Node identifier: DT_N_S_soc_S_uart_400f2c00
 *
 * Binding (compatible = microchip,xec-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/microchip,xec-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_400f2c00_PATH "/soc/uart@400f2c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_400f2c00_FULL_NAME "uart@400f2c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_400f2c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_400f2c00_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_uart_400f2c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_uart_400f2c00_FOREACH_NODELABEL(fn) fn(uart2)
#define DT_N_S_soc_S_uart_400f2c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_400f2c00_CHILD_NUM 0
#define DT_N_S_soc_S_uart_400f2c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_uart_400f2c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_400f2c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_400f2c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_400f2c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_400f2c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_400f2c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_400f2c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_400f2c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_400f2c00_ORD 96
#define DT_N_S_soc_S_uart_400f2c00_ORD_STR_SORTABLE 00096

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_400f2c00_REQUIRES_ORDS \
	10, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */ \
	94, /* /soc/pin-controller@40081000/uart2_rx_gpio145 */ \
	95, /* /soc/pin-controller@40081000/uart2_tx_gpio146 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_400f2c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_400f2c00_EXISTS 1
#define DT_N_INST_0_microchip_xec_uart DT_N_S_soc_S_uart_400f2c00
#define DT_N_NODELABEL_uart2           DT_N_S_soc_S_uart_400f2c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_400f2c00_REG_NUM 1
#define DT_N_S_soc_S_uart_400f2c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_REG_IDX_0_VAL_ADDRESS 1074736128 /* 0x400f2c00 */
#define DT_N_S_soc_S_uart_400f2c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_uart_400f2c00_RANGES_NUM 0
#define DT_N_S_soc_S_uart_400f2c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_400f2c00_IRQ_NUM 1
#define DT_N_S_soc_S_uart_400f2c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_IRQ_IDX_0_VAL_irq 44
#define DT_N_S_soc_S_uart_400f2c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_uart_400f2c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_uart_400f2c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_uart_400f2c00_COMPAT_MATCHES_microchip_xec_uart 1
#define DT_N_S_soc_S_uart_400f2c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_uart_400f2c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_COMPAT_MODEL_IDX_0 "xec-uart"
#define DT_N_S_soc_S_uart_400f2c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_400f2c00_PINCTRL_NUM 1
#define DT_N_S_soc_S_uart_400f2c00_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_uart_400f2c00_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_400f2c00_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_uart_400f2c00_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146
#define DT_N_S_soc_S_uart_400f2c00_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145

/* Generic property macros: */
#define DT_N_S_soc_S_uart_400f2c00_P_wakeup_source 0
#define DT_N_S_soc_S_uart_400f2c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_400f2c00_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_P_status "okay"
#define DT_N_S_soc_S_uart_400f2c00_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_uart_400f2c00_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_uart_400f2c00_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uart_400f2c00_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_uart_400f2c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_uart_400f2c00_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_uart_400f2c00_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uart_400f2c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_400f2c00, status, 0)
#define DT_N_S_soc_S_uart_400f2c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_400f2c00, status, 0)
#define DT_N_S_soc_S_uart_400f2c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_400f2c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_400f2c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_400f2c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_400f2c00_P_status_LEN 1
#define DT_N_S_soc_S_uart_400f2c00_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_P_compatible {"microchip,xec-uart"}
#define DT_N_S_soc_S_uart_400f2c00_P_compatible_IDX_0 "microchip,xec-uart"
#define DT_N_S_soc_S_uart_400f2c00_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-uart
#define DT_N_S_soc_S_uart_400f2c00_P_compatible_IDX_0_STRING_TOKEN microchip_xec_uart
#define DT_N_S_soc_S_uart_400f2c00_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_UART
#define DT_N_S_soc_S_uart_400f2c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_400f2c00, compatible, 0)
#define DT_N_S_soc_S_uart_400f2c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_400f2c00, compatible, 0)
#define DT_N_S_soc_S_uart_400f2c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_400f2c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_400f2c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_400f2c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_400f2c00_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_400f2c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_P_reg {1074736128 /* 0x400f2c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_uart_400f2c00_P_reg_IDX_0 1074736128
#define DT_N_S_soc_S_uart_400f2c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_uart_400f2c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_P_interrupts {44 /* 0x2c */, 0 /* 0x0 */}
#define DT_N_S_soc_S_uart_400f2c00_P_interrupts_IDX_0 44
#define DT_N_S_soc_S_uart_400f2c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_uart_400f2c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_uart_400f2c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_P_clock_frequency 1843200
#define DT_N_S_soc_S_uart_400f2c00_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_P_current_speed 115200
#define DT_N_S_soc_S_uart_400f2c00_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_400f2c00_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146
#define DT_N_S_soc_S_uart_400f2c00_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146
#define DT_N_S_soc_S_uart_400f2c00_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145
#define DT_N_S_soc_S_uart_400f2c00_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145
#define DT_N_S_soc_S_uart_400f2c00_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_400f2c00, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_uart_400f2c00, pinctrl_0, 1)
#define DT_N_S_soc_S_uart_400f2c00_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_400f2c00, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_400f2c00, pinctrl_0, 1)
#define DT_N_S_soc_S_uart_400f2c00_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_400f2c00, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_400f2c00, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_400f2c00_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_400f2c00, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_400f2c00, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_400f2c00_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_uart_400f2c00_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_uart_400f2c00_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_uart_400f2c00_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_uart_400f2c00_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_uart_400f2c00_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_400f2c00_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_400f2c00, pinctrl_names, 0)
#define DT_N_S_soc_S_uart_400f2c00_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_400f2c00, pinctrl_names, 0)
#define DT_N_S_soc_S_uart_400f2c00_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_400f2c00, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_400f2c00_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_400f2c00, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_400f2c00_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_uart_400f2c00_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_P_ldn 11
#define DT_N_S_soc_S_uart_400f2c00_P_ldn_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_P_girqs {15 /* 0xf */, 4 /* 0x4 */}
#define DT_N_S_soc_S_uart_400f2c00_P_girqs_IDX_0 15
#define DT_N_S_soc_S_uart_400f2c00_P_girqs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_P_girqs_IDX_1 4
#define DT_N_S_soc_S_uart_400f2c00_P_girqs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_P_girqs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_400f2c00, girqs, 0) \
	fn(DT_N_S_soc_S_uart_400f2c00, girqs, 1)
#define DT_N_S_soc_S_uart_400f2c00_P_girqs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_400f2c00, girqs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_400f2c00, girqs, 1)
#define DT_N_S_soc_S_uart_400f2c00_P_girqs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_400f2c00, girqs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_400f2c00, girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_400f2c00_P_girqs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_400f2c00, girqs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_400f2c00, girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_400f2c00_P_girqs_LEN 2
#define DT_N_S_soc_S_uart_400f2c00_P_girqs_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_P_pcrs {2 /* 0x2 */, 28 /* 0x1c */}
#define DT_N_S_soc_S_uart_400f2c00_P_pcrs_IDX_0 2
#define DT_N_S_soc_S_uart_400f2c00_P_pcrs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_P_pcrs_IDX_1 28
#define DT_N_S_soc_S_uart_400f2c00_P_pcrs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_400f2c00_P_pcrs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_400f2c00, pcrs, 0) \
	fn(DT_N_S_soc_S_uart_400f2c00, pcrs, 1)
#define DT_N_S_soc_S_uart_400f2c00_P_pcrs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_400f2c00, pcrs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_400f2c00, pcrs, 1)
#define DT_N_S_soc_S_uart_400f2c00_P_pcrs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_400f2c00, pcrs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_400f2c00, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_400f2c00_P_pcrs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_400f2c00, pcrs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_400f2c00, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_400f2c00_P_pcrs_LEN 2
#define DT_N_S_soc_S_uart_400f2c00_P_pcrs_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40000400
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40000400
 *
 * Binding (compatible = microchip,xec-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/microchip,xec-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40000400_PATH "/soc/watchdog@40000400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40000400_FULL_NAME "watchdog@40000400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40000400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_40000400_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_watchdog_40000400_NODELABEL_NUM 1
#define DT_N_S_soc_S_watchdog_40000400_FOREACH_NODELABEL(fn) fn(wdog)
#define DT_N_S_soc_S_watchdog_40000400_FOREACH_NODELABEL_VARGS(fn, ...) fn(wdog, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_40000400_CHILD_NUM 0
#define DT_N_S_soc_S_watchdog_40000400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_watchdog_40000400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40000400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40000400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40000400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_40000400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40000400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40000400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40000400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40000400_ORD 97
#define DT_N_S_soc_S_watchdog_40000400_ORD_STR_SORTABLE 00097

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40000400_REQUIRES_ORDS \
	10, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40000400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40000400_EXISTS 1
#define DT_N_ALIAS_watchdog0               DT_N_S_soc_S_watchdog_40000400
#define DT_N_INST_0_microchip_xec_watchdog DT_N_S_soc_S_watchdog_40000400
#define DT_N_NODELABEL_wdog                DT_N_S_soc_S_watchdog_40000400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40000400_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40000400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40000400_REG_IDX_0_VAL_ADDRESS 1073742848 /* 0x40000400 */
#define DT_N_S_soc_S_watchdog_40000400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_watchdog_40000400_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_40000400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_40000400_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_40000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40000400_IRQ_IDX_0_VAL_irq 171
#define DT_N_S_soc_S_watchdog_40000400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_40000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40000400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_watchdog_40000400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_40000400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_watchdog_40000400_IRQ_LEVEL 1
#define DT_N_S_soc_S_watchdog_40000400_COMPAT_MATCHES_microchip_xec_watchdog 1
#define DT_N_S_soc_S_watchdog_40000400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40000400_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_watchdog_40000400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40000400_COMPAT_MODEL_IDX_0 "xec-watchdog"
#define DT_N_S_soc_S_watchdog_40000400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40000400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40000400_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40000400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_watchdog_40000400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_watchdog_40000400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_watchdog_40000400_P_compatible {"microchip,xec-watchdog"}
#define DT_N_S_soc_S_watchdog_40000400_P_compatible_IDX_0 "microchip,xec-watchdog"
#define DT_N_S_soc_S_watchdog_40000400_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-watchdog
#define DT_N_S_soc_S_watchdog_40000400_P_compatible_IDX_0_STRING_TOKEN microchip_xec_watchdog
#define DT_N_S_soc_S_watchdog_40000400_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_WATCHDOG
#define DT_N_S_soc_S_watchdog_40000400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40000400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40000400, compatible, 0)
#define DT_N_S_soc_S_watchdog_40000400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40000400, compatible, 0)
#define DT_N_S_soc_S_watchdog_40000400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40000400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40000400_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40000400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40000400_P_reg {1073742848 /* 0x40000400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_watchdog_40000400_P_reg_IDX_0 1073742848
#define DT_N_S_soc_S_watchdog_40000400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40000400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_watchdog_40000400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40000400_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40000400_P_interrupts {171 /* 0xab */, 0 /* 0x0 */}
#define DT_N_S_soc_S_watchdog_40000400_P_interrupts_IDX_0 171
#define DT_N_S_soc_S_watchdog_40000400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40000400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_watchdog_40000400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40000400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_watchdog_40000400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_watchdog_40000400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_watchdog_40000400_P_girqs {21 /* 0x15 */, 2 /* 0x2 */}
#define DT_N_S_soc_S_watchdog_40000400_P_girqs_IDX_0 21
#define DT_N_S_soc_S_watchdog_40000400_P_girqs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40000400_P_girqs_IDX_1 2
#define DT_N_S_soc_S_watchdog_40000400_P_girqs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40000400_P_girqs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40000400, girqs, 0) \
	fn(DT_N_S_soc_S_watchdog_40000400, girqs, 1)
#define DT_N_S_soc_S_watchdog_40000400_P_girqs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40000400, girqs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40000400, girqs, 1)
#define DT_N_S_soc_S_watchdog_40000400_P_girqs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40000400, girqs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40000400, girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40000400_P_girqs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40000400, girqs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40000400, girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40000400_P_girqs_LEN 2
#define DT_N_S_soc_S_watchdog_40000400_P_girqs_EXISTS 1
#define DT_N_S_soc_S_watchdog_40000400_P_pcrs {1 /* 0x1 */, 9 /* 0x9 */}
#define DT_N_S_soc_S_watchdog_40000400_P_pcrs_IDX_0 1
#define DT_N_S_soc_S_watchdog_40000400_P_pcrs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40000400_P_pcrs_IDX_1 9
#define DT_N_S_soc_S_watchdog_40000400_P_pcrs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40000400_P_pcrs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40000400, pcrs, 0) \
	fn(DT_N_S_soc_S_watchdog_40000400, pcrs, 1)
#define DT_N_S_soc_S_watchdog_40000400_P_pcrs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40000400, pcrs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40000400, pcrs, 1)
#define DT_N_S_soc_S_watchdog_40000400_P_pcrs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40000400, pcrs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40000400, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40000400_P_pcrs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40000400, pcrs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_watchdog_40000400, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40000400_P_pcrs_LEN 2
#define DT_N_S_soc_S_watchdog_40000400_P_pcrs_EXISTS 1

/*
 * Devicetree node: /soc/ecia@4000e000
 *
 * Node identifier: DT_N_S_soc_S_ecia_4000e000
 */

/* Node's full path: */
#define DT_N_S_soc_S_ecia_4000e000_PATH "/soc/ecia@4000e000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ecia_4000e000_FULL_NAME "ecia@4000e000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ecia_4000e000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ecia_4000e000_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_ecia_4000e000_NODELABEL_NUM 1
#define DT_N_S_soc_S_ecia_4000e000_FOREACH_NODELABEL(fn) fn(ecia)
#define DT_N_S_soc_S_ecia_4000e000_FOREACH_NODELABEL_VARGS(fn, ...) fn(ecia, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ecia_4000e000_CHILD_NUM 1
#define DT_N_S_soc_S_ecia_4000e000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_ecia_4000e000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_ecia_4000e000_S_girq23_12c)
#define DT_N_S_soc_S_ecia_4000e000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_ecia_4000e000_S_girq23_12c)
#define DT_N_S_soc_S_ecia_4000e000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_ecia_4000e000_S_girq23_12c, __VA_ARGS__)
#define DT_N_S_soc_S_ecia_4000e000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ecia_4000e000_S_girq23_12c, __VA_ARGS__)
#define DT_N_S_soc_S_ecia_4000e000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ecia_4000e000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ecia_4000e000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ecia_4000e000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ecia_4000e000_ORD 98
#define DT_N_S_soc_S_ecia_4000e000_ORD_STR_SORTABLE 00098

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ecia_4000e000_REQUIRES_ORDS \
	10, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ecia_4000e000_SUPPORTS_ORDS \
	99, /* /soc/ecia@4000e000/girq23@12c */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ecia_4000e000_EXISTS 1
#define DT_N_NODELABEL_ecia DT_N_S_soc_S_ecia_4000e000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ecia_4000e000_REG_NUM 1
#define DT_N_S_soc_S_ecia_4000e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecia_4000e000_REG_IDX_0_VAL_ADDRESS 1073799168 /* 0x4000e000 */
#define DT_N_S_soc_S_ecia_4000e000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_ecia_4000e000_RANGES_NUM 0
#define DT_N_S_soc_S_ecia_4000e000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ecia_4000e000_IRQ_NUM 0
#define DT_N_S_soc_S_ecia_4000e000_IRQ_LEVEL 0
#define DT_N_S_soc_S_ecia_4000e000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ecia_4000e000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ecia_4000e000_P_reg {1073799168 /* 0x4000e000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_ecia_4000e000_P_reg_IDX_0 1073799168
#define DT_N_S_soc_S_ecia_4000e000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecia_4000e000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_ecia_4000e000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ecia_4000e000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/ecia@4000e000/girq23@12c
 *
 * Node identifier: DT_N_S_soc_S_ecia_4000e000_S_girq23_12c
 */

/* Node's full path: */
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_PATH "/soc/ecia@4000e000/girq23@12c"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_FULL_NAME "girq23@12c"

/* Node parent (/soc/ecia@4000e000) identifier: */
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_PARENT DT_N_S_soc_S_ecia_4000e000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_NODELABEL_NUM 1
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_FOREACH_NODELABEL(fn) fn(girq23)
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_FOREACH_NODELABEL_VARGS(fn, ...) fn(girq23, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_CHILD_NUM 0
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_ORD 99
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_ORD_STR_SORTABLE 00099

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	98, /* /soc/ecia@4000e000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_EXISTS 1
#define DT_N_NODELABEL_girq23 DT_N_S_soc_S_ecia_4000e000_S_girq23_12c

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_REG_NUM 1
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_REG_IDX_0_VAL_ADDRESS 300 /* 0x12c */
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_REG_IDX_0_VAL_SIZE 20 /* 0x14 */
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_RANGES_NUM 0
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_IRQ_NUM 1
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_IRQ_IDX_0_VAL_irq 14
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_IRQ_LEVEL 1
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_P_reg {300 /* 0x12c */, 20 /* 0x14 */}
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_P_reg_IDX_0 300
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_P_reg_IDX_1 20
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_P_reg_EXISTS 1
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_P_interrupts {14 /* 0xe */, 0 /* 0x0 */}
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_P_interrupts_IDX_0 14
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_P_status "disabled"
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ecia_4000e000_S_girq23_12c, status, 0)
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ecia_4000e000_S_girq23_12c, status, 0)
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ecia_4000e000_S_girq23_12c, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ecia_4000e000_S_girq23_12c, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_P_status_LEN 1
#define DT_N_S_soc_S_ecia_4000e000_S_girq23_12c_P_status_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/gpio@40081100
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100
 *
 * Binding (compatible = microchip,xec-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/microchip,xec-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_PATH "/soc/pin-controller@40081000/gpio@40081100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_FULL_NAME "gpio@40081100"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_FOREACH_NODELABEL(fn) fn(gpio_100_136)
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpio_100_136, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_ORD 100
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_ORD_STR_SORTABLE 00100

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_SUPPORTS_ORDS \
	103, /* /soc/i2c@40004400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_EXISTS 1
#define DT_N_INST_2_microchip_xec_gpio DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100
#define DT_N_NODELABEL_gpio_100_136    DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_REG_NUM 4
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_REG_IDX_0_VAL_ADDRESS 1074270464 /* 0x40081100 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_REG_IDX_0_VAL_SIZE 128 /* 0x80 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_REG_IDX_1_VAL_ADDRESS 1074270984 /* 0x40081308 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_REG_IDX_1_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_REG_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_REG_IDX_2_VAL_ADDRESS 1074271112 /* 0x40081388 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_REG_IDX_2_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_REG_IDX_3_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_REG_IDX_3_VAL_ADDRESS 1074271220 /* 0x400813f4 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_REG_IDX_3_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_IRQ_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_IRQ_IDX_0_VAL_irq 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_IRQ_IDX_0_VAL_priority 2
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_IRQ_LEVEL 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_COMPAT_MATCHES_microchip_xec_gpio 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_COMPAT_MODEL_IDX_0 "xec-gpio"
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_compatible {"microchip,xec-gpio"}
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_compatible_IDX_0 "microchip,xec-gpio"
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-gpio
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_compatible_IDX_0_STRING_TOKEN microchip_xec_gpio
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_GPIO
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_reg {1074270464 /* 0x40081100 */, 128 /* 0x80 */, 1074270984 /* 0x40081308 */, 4 /* 0x4 */, 1074271112 /* 0x40081388 */, 4 /* 0x4 */, 1074271220 /* 0x400813f4 */, 4 /* 0x4 */}
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_reg_IDX_0 1074270464
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_reg_IDX_1 128
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_reg_IDX_2 1074270984
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_reg_IDX_3 4
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_reg_IDX_4 1074271112
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_reg_IDX_4_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_reg_IDX_5 4
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_reg_IDX_5_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_reg_IDX_6 1074271220
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_reg_IDX_6_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_reg_IDX_7 4
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_reg_IDX_7_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_interrupts {1 /* 0x1 */, 2 /* 0x2 */}
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_interrupts_IDX_0 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_interrupts_IDX_1 2
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_port_id 2
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_port_id_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_girq_id 9
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100_P_girq_id_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/i2c01_scl_gpio131
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_PATH "/soc/pin-controller@40081000/i2c01_scl_gpio131"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_FULL_NAME "i2c01_scl_gpio131"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_CHILD_IDX 21

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_FOREACH_NODELABEL(fn) fn(i2c01_scl_gpio131)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c01_scl_gpio131, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_ORD 101
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_ORD_STR_SORTABLE 00101

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_SUPPORTS_ORDS \
	103, /* /soc/i2c@40004400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_EXISTS 1
#define DT_N_NODELABEL_i2c01_scl_gpio131 DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_pinmux 914
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/i2c01_sda_gpio130
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_PATH "/soc/pin-controller@40081000/i2c01_sda_gpio130"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_FULL_NAME "i2c01_sda_gpio130"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_CHILD_IDX 22

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_FOREACH_NODELABEL(fn) fn(i2c01_sda_gpio130)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c01_sda_gpio130, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_ORD 102
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_ORD_STR_SORTABLE 00102

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_SUPPORTS_ORDS \
	103, /* /soc/i2c@40004400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_EXISTS 1
#define DT_N_NODELABEL_i2c01_sda_gpio130 DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_pinmux 898
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40004400
 *
 * Node identifier: DT_N_S_soc_S_i2c_40004400
 *
 * Binding (compatible = microchip,xec-i2c):
 *   $ZEPHYR_BASE/dts/bindings/i2c/microchip,xec-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40004400_PATH "/soc/i2c@40004400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40004400_FULL_NAME "i2c@40004400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40004400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40004400_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_40004400_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_40004400_FOREACH_NODELABEL(fn) fn(i2c_smb_1)
#define DT_N_S_soc_S_i2c_40004400_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c_smb_1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40004400_CHILD_NUM 1
#define DT_N_S_soc_S_i2c_40004400_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_i2c_40004400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_i2c_40004400_S_pca9555_26)
#define DT_N_S_soc_S_i2c_40004400_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004400_S_pca9555_26)
#define DT_N_S_soc_S_i2c_40004400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004400_S_pca9555_26, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004400_S_pca9555_26, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004400_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_i2c_40004400_S_pca9555_26)
#define DT_N_S_soc_S_i2c_40004400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004400_S_pca9555_26)
#define DT_N_S_soc_S_i2c_40004400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004400_S_pca9555_26, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004400_S_pca9555_26, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40004400_ORD 103
#define DT_N_S_soc_S_i2c_40004400_ORD_STR_SORTABLE 00103

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40004400_REQUIRES_ORDS \
	10, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */ \
	100, /* /soc/pin-controller@40081000/gpio@40081100 */ \
	101, /* /soc/pin-controller@40081000/i2c01_scl_gpio131 */ \
	102, /* /soc/pin-controller@40081000/i2c01_sda_gpio130 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40004400_SUPPORTS_ORDS \
	104, /* /soc/i2c@40004400/pca9555@26 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40004400_EXISTS 1
#define DT_N_ALIAS_i2c_smb_1          DT_N_S_soc_S_i2c_40004400
#define DT_N_ALIAS_i2c1               DT_N_S_soc_S_i2c_40004400
#define DT_N_INST_1_microchip_xec_i2c DT_N_S_soc_S_i2c_40004400
#define DT_N_NODELABEL_i2c_smb_1      DT_N_S_soc_S_i2c_40004400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40004400_REG_NUM 1
#define DT_N_S_soc_S_i2c_40004400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_REG_IDX_0_VAL_ADDRESS 1073759232 /* 0x40004400 */
#define DT_N_S_soc_S_i2c_40004400_REG_IDX_0_VAL_SIZE 128 /* 0x80 */
#define DT_N_S_soc_S_i2c_40004400_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40004400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40004400_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_40004400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_IRQ_IDX_0_VAL_irq 21
#define DT_N_S_soc_S_i2c_40004400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_i2c_40004400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_40004400_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c_40004400_COMPAT_MATCHES_microchip_xec_i2c 1
#define DT_N_S_soc_S_i2c_40004400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_i2c_40004400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_COMPAT_MODEL_IDX_0 "xec-i2c"
#define DT_N_S_soc_S_i2c_40004400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40004400_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_40004400_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_40004400_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40004400_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_40004400_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131
#define DT_N_S_soc_S_i2c_40004400_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40004400_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40004400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40004400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_status "okay"
#define DT_N_S_soc_S_i2c_40004400_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_40004400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40004400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40004400_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_i2c_40004400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40004400_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_40004400_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40004400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004400, status, 0)
#define DT_N_S_soc_S_i2c_40004400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004400, status, 0)
#define DT_N_S_soc_S_i2c_40004400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004400_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40004400_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_compatible {"microchip,xec-i2c"}
#define DT_N_S_soc_S_i2c_40004400_P_compatible_IDX_0 "microchip,xec-i2c"
#define DT_N_S_soc_S_i2c_40004400_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-i2c
#define DT_N_S_soc_S_i2c_40004400_P_compatible_IDX_0_STRING_TOKEN microchip_xec_i2c
#define DT_N_S_soc_S_i2c_40004400_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_I2C
#define DT_N_S_soc_S_i2c_40004400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004400, compatible, 0)
#define DT_N_S_soc_S_i2c_40004400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004400, compatible, 0)
#define DT_N_S_soc_S_i2c_40004400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004400_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40004400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_reg {1073759232 /* 0x40004400 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_i2c_40004400_P_reg_IDX_0 1073759232
#define DT_N_S_soc_S_i2c_40004400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_reg_IDX_1 128
#define DT_N_S_soc_S_i2c_40004400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_interrupts {21 /* 0x15 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_i2c_40004400_P_interrupts_IDX_0 21
#define DT_N_S_soc_S_i2c_40004400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_i2c_40004400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_40004400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40004400_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_sq_size 4
#define DT_N_S_soc_S_i2c_40004400_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_cq_size 4
#define DT_N_S_soc_S_i2c_40004400_P_cq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131
#define DT_N_S_soc_S_i2c_40004400_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131
#define DT_N_S_soc_S_i2c_40004400_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130
#define DT_N_S_soc_S_i2c_40004400_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130
#define DT_N_S_soc_S_i2c_40004400_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004400, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_i2c_40004400, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40004400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004400, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40004400, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40004400_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004400, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40004400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004400, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40004400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004400_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_i2c_40004400_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c_40004400_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_40004400_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2c_40004400_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2c_40004400_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40004400_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004400, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40004400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004400, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40004400_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004400_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c_40004400_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_port_sel 1
#define DT_N_S_soc_S_i2c_40004400_P_port_sel_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_girq 13
#define DT_N_S_soc_S_i2c_40004400_P_girq_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_girq_bit 1
#define DT_N_S_soc_S_i2c_40004400_P_girq_bit_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_pcrs {3 /* 0x3 */, 13 /* 0xd */}
#define DT_N_S_soc_S_i2c_40004400_P_pcrs_IDX_0 3
#define DT_N_S_soc_S_i2c_40004400_P_pcrs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_pcrs_IDX_1 13
#define DT_N_S_soc_S_i2c_40004400_P_pcrs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_pcrs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004400, pcrs, 0) \
	fn(DT_N_S_soc_S_i2c_40004400, pcrs, 1)
#define DT_N_S_soc_S_i2c_40004400_P_pcrs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004400, pcrs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40004400, pcrs, 1)
#define DT_N_S_soc_S_i2c_40004400_P_pcrs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004400, pcrs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40004400, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004400_P_pcrs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004400, pcrs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40004400, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004400_P_pcrs_LEN 2
#define DT_N_S_soc_S_i2c_40004400_P_pcrs_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_sda_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_sda_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100
#define DT_N_S_soc_S_i2c_40004400_P_sda_gpios_IDX_0_VAL_pin 24
#define DT_N_S_soc_S_i2c_40004400_P_sda_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_sda_gpios_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_i2c_40004400_P_sda_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_sda_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004400, sda_gpios, 0)
#define DT_N_S_soc_S_i2c_40004400_P_sda_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004400, sda_gpios, 0)
#define DT_N_S_soc_S_i2c_40004400_P_sda_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004400, sda_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004400_P_sda_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004400, sda_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004400_P_sda_gpios_LEN 1
#define DT_N_S_soc_S_i2c_40004400_P_sda_gpios_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_scl_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_scl_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100
#define DT_N_S_soc_S_i2c_40004400_P_scl_gpios_IDX_0_VAL_pin 25
#define DT_N_S_soc_S_i2c_40004400_P_scl_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_scl_gpios_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_i2c_40004400_P_scl_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_P_scl_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004400, scl_gpios, 0)
#define DT_N_S_soc_S_i2c_40004400_P_scl_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004400, scl_gpios, 0)
#define DT_N_S_soc_S_i2c_40004400_P_scl_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004400, scl_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004400_P_scl_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004400, scl_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004400_P_scl_gpios_LEN 1
#define DT_N_S_soc_S_i2c_40004400_P_scl_gpios_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40004400/pca9555@26
 *
 * Node identifier: DT_N_S_soc_S_i2c_40004400_S_pca9555_26
 *
 * Binding (compatible = nxp,pca95xx):
 *   $ZEPHYR_BASE/dts/bindings/gpio/nxp,pca95xx.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_PATH "/soc/i2c@40004400/pca9555@26"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_FULL_NAME "pca9555@26"

/* Node parent (/soc/i2c@40004400) identifier: */
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_PARENT DT_N_S_soc_S_i2c_40004400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_NODELABEL_NUM 0
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_ORD 104
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_ORD_STR_SORTABLE 00104

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_REQUIRES_ORDS \
	103, /* /soc/i2c@40004400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_EXISTS 1
#define DT_N_INST_0_nxp_pca95xx DT_N_S_soc_S_i2c_40004400_S_pca9555_26

/* Bus info (controller: '/soc/i2c@40004400', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_BUS DT_N_S_soc_S_i2c_40004400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_REG_NUM 1
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_REG_IDX_0_VAL_ADDRESS 38 /* 0x26 */
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_IRQ_LEVEL 0
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_COMPAT_MATCHES_nxp_pca95xx 1
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_COMPAT_MODEL_IDX_0 "pca95xx"
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_P_gpio_controller 1
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_P_ngpios 32
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_P_compatible {"nxp,pca95xx"}
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_P_compatible_IDX_0 "nxp,pca95xx"
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_P_compatible_IDX_0_STRING_UNQUOTED nxp,pca95xx
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_P_compatible_IDX_0_STRING_TOKEN nxp_pca95xx
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_PCA95XX
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004400_S_pca9555_26, compatible, 0)
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004400_S_pca9555_26, compatible, 0)
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004400_S_pca9555_26, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004400_S_pca9555_26, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_P_reg {38 /* 0x26 */}
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_P_reg_IDX_0 38
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_P_has_pud 0
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_P_has_pud_EXISTS 1
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_P_has_interrupt_mask_reg 0
#define DT_N_S_soc_S_i2c_40004400_S_pca9555_26_P_has_interrupt_mask_reg_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/ksi0_gpio017
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_PATH "/soc/pin-controller@40081000/ksi0_gpio017"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_FULL_NAME "ksi0_gpio017"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_CHILD_IDX 26

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_FOREACH_NODELABEL(fn) fn(ksi0_gpio017)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_FOREACH_NODELABEL_VARGS(fn, ...) fn(ksi0_gpio017, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_ORD 105
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_ORD_STR_SORTABLE 00105

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_EXISTS 1
#define DT_N_NODELABEL_ksi0_gpio017 DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_pinmux 752
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/ksi0_gpio017_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_PATH "/soc/pin-controller@40081000/ksi0_gpio017_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_FULL_NAME "ksi0_gpio017_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_CHILD_IDX 85

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_FOREACH_NODELABEL(fn) fn(ksi0_gpio017_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(ksi0_gpio017_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_ORD 106
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_ORD_STR_SORTABLE 00106

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_EXISTS 1
#define DT_N_NODELABEL_ksi0_gpio017_sleep DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_pinmux 752
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/ksi1_gpio020
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_PATH "/soc/pin-controller@40081000/ksi1_gpio020"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_FULL_NAME "ksi1_gpio020"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_CHILD_IDX 27

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_FOREACH_NODELABEL(fn) fn(ksi1_gpio020)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_FOREACH_NODELABEL_VARGS(fn, ...) fn(ksi1_gpio020, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_ORD 107
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_ORD_STR_SORTABLE 00107

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_EXISTS 1
#define DT_N_NODELABEL_ksi1_gpio020 DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_pinmux 768
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/ksi1_gpio020_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_PATH "/soc/pin-controller@40081000/ksi1_gpio020_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_FULL_NAME "ksi1_gpio020_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_CHILD_IDX 86

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_FOREACH_NODELABEL(fn) fn(ksi1_gpio020_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(ksi1_gpio020_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_ORD 108
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_ORD_STR_SORTABLE 00108

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_EXISTS 1
#define DT_N_NODELABEL_ksi1_gpio020_sleep DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_pinmux 768
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/ksi2_gpio021
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_PATH "/soc/pin-controller@40081000/ksi2_gpio021"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_FULL_NAME "ksi2_gpio021"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_CHILD_IDX 28

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_FOREACH_NODELABEL(fn) fn(ksi2_gpio021)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_FOREACH_NODELABEL_VARGS(fn, ...) fn(ksi2_gpio021, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_ORD 109
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_ORD_STR_SORTABLE 00109

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_EXISTS 1
#define DT_N_NODELABEL_ksi2_gpio021 DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_pinmux 784
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/ksi2_gpio021_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_PATH "/soc/pin-controller@40081000/ksi2_gpio021_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_FULL_NAME "ksi2_gpio021_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_CHILD_IDX 87

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_FOREACH_NODELABEL(fn) fn(ksi2_gpio021_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(ksi2_gpio021_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_ORD 110
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_ORD_STR_SORTABLE 00110

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_EXISTS 1
#define DT_N_NODELABEL_ksi2_gpio021_sleep DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_pinmux 784
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/ksi3_gpio026
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_PATH "/soc/pin-controller@40081000/ksi3_gpio026"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_FULL_NAME "ksi3_gpio026"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_CHILD_IDX 29

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_FOREACH_NODELABEL(fn) fn(ksi3_gpio026)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_FOREACH_NODELABEL_VARGS(fn, ...) fn(ksi3_gpio026, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_ORD 111
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_ORD_STR_SORTABLE 00111

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_EXISTS 1
#define DT_N_NODELABEL_ksi3_gpio026 DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_pinmux 864
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/ksi3_gpio026_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_PATH "/soc/pin-controller@40081000/ksi3_gpio026_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_FULL_NAME "ksi3_gpio026_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_CHILD_IDX 88

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_FOREACH_NODELABEL(fn) fn(ksi3_gpio026_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(ksi3_gpio026_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_ORD 112
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_ORD_STR_SORTABLE 00112

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_EXISTS 1
#define DT_N_NODELABEL_ksi3_gpio026_sleep DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_pinmux 864
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/ksi4_gpio027
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_PATH "/soc/pin-controller@40081000/ksi4_gpio027"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_FULL_NAME "ksi4_gpio027"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_CHILD_IDX 30

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_FOREACH_NODELABEL(fn) fn(ksi4_gpio027)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_FOREACH_NODELABEL_VARGS(fn, ...) fn(ksi4_gpio027, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_ORD 113
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_ORD_STR_SORTABLE 00113

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_EXISTS 1
#define DT_N_NODELABEL_ksi4_gpio027 DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_pinmux 880
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/ksi4_gpio027_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_PATH "/soc/pin-controller@40081000/ksi4_gpio027_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_FULL_NAME "ksi4_gpio027_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_CHILD_IDX 89

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_FOREACH_NODELABEL(fn) fn(ksi4_gpio027_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(ksi4_gpio027_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_ORD 114
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_ORD_STR_SORTABLE 00114

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_EXISTS 1
#define DT_N_NODELABEL_ksi4_gpio027_sleep DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_pinmux 880
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/ksi5_gpio030
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_PATH "/soc/pin-controller@40081000/ksi5_gpio030"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_FULL_NAME "ksi5_gpio030"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_CHILD_IDX 31

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_FOREACH_NODELABEL(fn) fn(ksi5_gpio030)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_FOREACH_NODELABEL_VARGS(fn, ...) fn(ksi5_gpio030, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_ORD 115
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_ORD_STR_SORTABLE 00115

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_EXISTS 1
#define DT_N_NODELABEL_ksi5_gpio030 DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_pinmux 896
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/ksi5_gpio030_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_PATH "/soc/pin-controller@40081000/ksi5_gpio030_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_FULL_NAME "ksi5_gpio030_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_CHILD_IDX 90

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_FOREACH_NODELABEL(fn) fn(ksi5_gpio030_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(ksi5_gpio030_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_ORD 116
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_ORD_STR_SORTABLE 00116

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_EXISTS 1
#define DT_N_NODELABEL_ksi5_gpio030_sleep DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_pinmux 896
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/ksi6_gpio031
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_PATH "/soc/pin-controller@40081000/ksi6_gpio031"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_FULL_NAME "ksi6_gpio031"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_CHILD_IDX 32

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_FOREACH_NODELABEL(fn) fn(ksi6_gpio031)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_FOREACH_NODELABEL_VARGS(fn, ...) fn(ksi6_gpio031, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_ORD 117
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_ORD_STR_SORTABLE 00117

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_EXISTS 1
#define DT_N_NODELABEL_ksi6_gpio031 DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_pinmux 912
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/ksi6_gpio031_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_PATH "/soc/pin-controller@40081000/ksi6_gpio031_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_FULL_NAME "ksi6_gpio031_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_CHILD_IDX 91

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_FOREACH_NODELABEL(fn) fn(ksi6_gpio031_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(ksi6_gpio031_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_ORD 118
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_ORD_STR_SORTABLE 00118

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_EXISTS 1
#define DT_N_NODELABEL_ksi6_gpio031_sleep DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_pinmux 912
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/ksi7_gpio032
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_PATH "/soc/pin-controller@40081000/ksi7_gpio032"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_FULL_NAME "ksi7_gpio032"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_CHILD_IDX 33

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_FOREACH_NODELABEL(fn) fn(ksi7_gpio032)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_FOREACH_NODELABEL_VARGS(fn, ...) fn(ksi7_gpio032, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_ORD 119
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_ORD_STR_SORTABLE 00119

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_EXISTS 1
#define DT_N_NODELABEL_ksi7_gpio032 DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_pinmux 928
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/ksi7_gpio032_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_PATH "/soc/pin-controller@40081000/ksi7_gpio032_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_FULL_NAME "ksi7_gpio032_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_CHILD_IDX 92

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_FOREACH_NODELABEL(fn) fn(ksi7_gpio032_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(ksi7_gpio032_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_ORD 120
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_ORD_STR_SORTABLE 00120

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_EXISTS 1
#define DT_N_NODELABEL_ksi7_gpio032_sleep DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_pinmux 928
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso00_gpio040
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_PATH "/soc/pin-controller@40081000/kso00_gpio040"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_FULL_NAME "kso00_gpio040"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_CHILD_IDX 34

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_FOREACH_NODELABEL(fn) fn(kso00_gpio040)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso00_gpio040, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_ORD 121
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_ORD_STR_SORTABLE 00121

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_EXISTS 1
#define DT_N_NODELABEL_kso00_gpio040 DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_pinmux 1025
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso00_gpio040_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_PATH "/soc/pin-controller@40081000/kso00_gpio040_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_FULL_NAME "kso00_gpio040_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_CHILD_IDX 93

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_FOREACH_NODELABEL(fn) fn(kso00_gpio040_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso00_gpio040_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_ORD 122
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_ORD_STR_SORTABLE 00122

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_EXISTS 1
#define DT_N_NODELABEL_kso00_gpio040_sleep DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_pinmux 1025
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso01_gpio045
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_PATH "/soc/pin-controller@40081000/kso01_gpio045"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_FULL_NAME "kso01_gpio045"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_CHILD_IDX 35

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_FOREACH_NODELABEL(fn) fn(kso01_gpio045)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso01_gpio045, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_ORD 123
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_ORD_STR_SORTABLE 00123

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_EXISTS 1
#define DT_N_NODELABEL_kso01_gpio045 DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_pinmux 593
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso01_gpio045_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_PATH "/soc/pin-controller@40081000/kso01_gpio045_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_FULL_NAME "kso01_gpio045_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_CHILD_IDX 94

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_FOREACH_NODELABEL(fn) fn(kso01_gpio045_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso01_gpio045_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_ORD 124
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_ORD_STR_SORTABLE 00124

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_EXISTS 1
#define DT_N_NODELABEL_kso01_gpio045_sleep DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_pinmux 593
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso02_gpio046
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_PATH "/soc/pin-controller@40081000/kso02_gpio046"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_FULL_NAME "kso02_gpio046"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_CHILD_IDX 36

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_FOREACH_NODELABEL(fn) fn(kso02_gpio046)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso02_gpio046, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_ORD 125
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_ORD_STR_SORTABLE 00125

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_EXISTS 1
#define DT_N_NODELABEL_kso02_gpio046 DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_pinmux 609
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso02_gpio046_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_PATH "/soc/pin-controller@40081000/kso02_gpio046_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_FULL_NAME "kso02_gpio046_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_CHILD_IDX 95

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_FOREACH_NODELABEL(fn) fn(kso02_gpio046_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso02_gpio046_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_ORD 126
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_ORD_STR_SORTABLE 00126

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_EXISTS 1
#define DT_N_NODELABEL_kso02_gpio046_sleep DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_pinmux 609
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso03_gpio047
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_PATH "/soc/pin-controller@40081000/kso03_gpio047"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_FULL_NAME "kso03_gpio047"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_CHILD_IDX 37

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_FOREACH_NODELABEL(fn) fn(kso03_gpio047)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso03_gpio047, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_ORD 127
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_ORD_STR_SORTABLE 00127

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_EXISTS 1
#define DT_N_NODELABEL_kso03_gpio047 DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_pinmux 625
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso03_gpio047_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_PATH "/soc/pin-controller@40081000/kso03_gpio047_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_FULL_NAME "kso03_gpio047_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_CHILD_IDX 96

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_FOREACH_NODELABEL(fn) fn(kso03_gpio047_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso03_gpio047_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_ORD 128
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_ORD_STR_SORTABLE 00128

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_EXISTS 1
#define DT_N_NODELABEL_kso03_gpio047_sleep DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_pinmux 625
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso04_gpio107
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_PATH "/soc/pin-controller@40081000/kso04_gpio107"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_FULL_NAME "kso04_gpio107"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_CHILD_IDX 38

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_FOREACH_NODELABEL(fn) fn(kso04_gpio107)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso04_gpio107, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_ORD 129
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_ORD_STR_SORTABLE 00129

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_EXISTS 1
#define DT_N_NODELABEL_kso04_gpio107 DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_pinmux 1138
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso04_gpio107_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_PATH "/soc/pin-controller@40081000/kso04_gpio107_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_FULL_NAME "kso04_gpio107_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_CHILD_IDX 97

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_FOREACH_NODELABEL(fn) fn(kso04_gpio107_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso04_gpio107_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_ORD 130
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_ORD_STR_SORTABLE 00130

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_EXISTS 1
#define DT_N_NODELABEL_kso04_gpio107_sleep DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_pinmux 1138
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso05_gpio112
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_PATH "/soc/pin-controller@40081000/kso05_gpio112"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_FULL_NAME "kso05_gpio112"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_CHILD_IDX 39

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_FOREACH_NODELABEL(fn) fn(kso05_gpio112)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso05_gpio112, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_ORD 131
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_ORD_STR_SORTABLE 00131

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_EXISTS 1
#define DT_N_NODELABEL_kso05_gpio112 DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_pinmux 674
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso05_gpio112_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_PATH "/soc/pin-controller@40081000/kso05_gpio112_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_FULL_NAME "kso05_gpio112_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_CHILD_IDX 98

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_FOREACH_NODELABEL(fn) fn(kso05_gpio112_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso05_gpio112_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_ORD 132
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_ORD_STR_SORTABLE 00132

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_EXISTS 1
#define DT_N_NODELABEL_kso05_gpio112_sleep DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_pinmux 674
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso06_gpio113
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_PATH "/soc/pin-controller@40081000/kso06_gpio113"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_FULL_NAME "kso06_gpio113"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_CHILD_IDX 40

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_FOREACH_NODELABEL(fn) fn(kso06_gpio113)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso06_gpio113, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_ORD 133
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_ORD_STR_SORTABLE 00133

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_EXISTS 1
#define DT_N_NODELABEL_kso06_gpio113 DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_pinmux 690
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso06_gpio113_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_PATH "/soc/pin-controller@40081000/kso06_gpio113_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_FULL_NAME "kso06_gpio113_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_CHILD_IDX 99

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_FOREACH_NODELABEL(fn) fn(kso06_gpio113_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso06_gpio113_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_ORD 134
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_ORD_STR_SORTABLE 00134

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_EXISTS 1
#define DT_N_NODELABEL_kso06_gpio113_sleep DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_pinmux 690
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso07_gpio120
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_PATH "/soc/pin-controller@40081000/kso07_gpio120"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_FULL_NAME "kso07_gpio120"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_CHILD_IDX 41

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_FOREACH_NODELABEL(fn) fn(kso07_gpio120)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso07_gpio120, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_ORD 135
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_ORD_STR_SORTABLE 00135

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_EXISTS 1
#define DT_N_NODELABEL_kso07_gpio120 DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_pinmux 770
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso07_gpio120_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_PATH "/soc/pin-controller@40081000/kso07_gpio120_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_FULL_NAME "kso07_gpio120_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_CHILD_IDX 100

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_FOREACH_NODELABEL(fn) fn(kso07_gpio120_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso07_gpio120_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_ORD 136
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_ORD_STR_SORTABLE 00136

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_EXISTS 1
#define DT_N_NODELABEL_kso07_gpio120_sleep DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_pinmux 770
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso08_gpio121
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_PATH "/soc/pin-controller@40081000/kso08_gpio121"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_FULL_NAME "kso08_gpio121"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_CHILD_IDX 42

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_FOREACH_NODELABEL(fn) fn(kso08_gpio121)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso08_gpio121, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_ORD 137
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_ORD_STR_SORTABLE 00137

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_EXISTS 1
#define DT_N_NODELABEL_kso08_gpio121 DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_pinmux 1298
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso08_gpio121_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_PATH "/soc/pin-controller@40081000/kso08_gpio121_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_FULL_NAME "kso08_gpio121_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_CHILD_IDX 101

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_FOREACH_NODELABEL(fn) fn(kso08_gpio121_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso08_gpio121_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_ORD 138
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_ORD_STR_SORTABLE 00138

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_EXISTS 1
#define DT_N_NODELABEL_kso08_gpio121_sleep DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_pinmux 1298
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso09_gpio122
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_PATH "/soc/pin-controller@40081000/kso09_gpio122"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_FULL_NAME "kso09_gpio122"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_CHILD_IDX 43

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_FOREACH_NODELABEL(fn) fn(kso09_gpio122)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso09_gpio122, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_ORD 139
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_ORD_STR_SORTABLE 00139

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_EXISTS 1
#define DT_N_NODELABEL_kso09_gpio122 DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_pinmux 1314
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso09_gpio122_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_PATH "/soc/pin-controller@40081000/kso09_gpio122_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_FULL_NAME "kso09_gpio122_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_CHILD_IDX 102

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_FOREACH_NODELABEL(fn) fn(kso09_gpio122_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso09_gpio122_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_ORD 140
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_ORD_STR_SORTABLE 00140

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_EXISTS 1
#define DT_N_NODELABEL_kso09_gpio122_sleep DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_pinmux 1314
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso10_gpio123
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_PATH "/soc/pin-controller@40081000/kso10_gpio123"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_FULL_NAME "kso10_gpio123"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_CHILD_IDX 44

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_FOREACH_NODELABEL(fn) fn(kso10_gpio123)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso10_gpio123, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_ORD 141
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_ORD_STR_SORTABLE 00141

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_EXISTS 1
#define DT_N_NODELABEL_kso10_gpio123 DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_pinmux 1330
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso10_gpio123_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_PATH "/soc/pin-controller@40081000/kso10_gpio123_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_FULL_NAME "kso10_gpio123_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_CHILD_IDX 103

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_FOREACH_NODELABEL(fn) fn(kso10_gpio123_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso10_gpio123_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_ORD 142
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_ORD_STR_SORTABLE 00142

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_EXISTS 1
#define DT_N_NODELABEL_kso10_gpio123_sleep DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_pinmux 1330
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso11_gpio124
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_PATH "/soc/pin-controller@40081000/kso11_gpio124"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_FULL_NAME "kso11_gpio124"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_CHILD_IDX 45

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_FOREACH_NODELABEL(fn) fn(kso11_gpio124)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso11_gpio124, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_ORD 143
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_ORD_STR_SORTABLE 00143

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_EXISTS 1
#define DT_N_NODELABEL_kso11_gpio124 DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_pinmux 1346
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso11_gpio124_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_PATH "/soc/pin-controller@40081000/kso11_gpio124_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_FULL_NAME "kso11_gpio124_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_CHILD_IDX 104

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_FOREACH_NODELABEL(fn) fn(kso11_gpio124_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso11_gpio124_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_ORD 144
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_ORD_STR_SORTABLE 00144

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_EXISTS 1
#define DT_N_NODELABEL_kso11_gpio124_sleep DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_pinmux 1346
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso12_gpio125
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_PATH "/soc/pin-controller@40081000/kso12_gpio125"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_FULL_NAME "kso12_gpio125"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_CHILD_IDX 46

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_FOREACH_NODELABEL(fn) fn(kso12_gpio125)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso12_gpio125, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_ORD 145
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_ORD_STR_SORTABLE 00145

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_EXISTS 1
#define DT_N_NODELABEL_kso12_gpio125 DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_pinmux 1362
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso12_gpio125_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_PATH "/soc/pin-controller@40081000/kso12_gpio125_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_FULL_NAME "kso12_gpio125_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_CHILD_IDX 105

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_FOREACH_NODELABEL(fn) fn(kso12_gpio125_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso12_gpio125_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_ORD 146
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_ORD_STR_SORTABLE 00146

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_EXISTS 1
#define DT_N_NODELABEL_kso12_gpio125_sleep DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_pinmux 1362
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso13_gpio126
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_PATH "/soc/pin-controller@40081000/kso13_gpio126"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_FULL_NAME "kso13_gpio126"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_CHILD_IDX 47

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_FOREACH_NODELABEL(fn) fn(kso13_gpio126)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso13_gpio126, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_ORD 147
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_ORD_STR_SORTABLE 00147

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_EXISTS 1
#define DT_N_NODELABEL_kso13_gpio126 DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_pinmux 1378
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso13_gpio126_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_PATH "/soc/pin-controller@40081000/kso13_gpio126_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_FULL_NAME "kso13_gpio126_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_CHILD_IDX 106

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_FOREACH_NODELABEL(fn) fn(kso13_gpio126_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso13_gpio126_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_ORD 148
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_ORD_STR_SORTABLE 00148

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_EXISTS 1
#define DT_N_NODELABEL_kso13_gpio126_sleep DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_pinmux 1378
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso14_gpio152
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_PATH "/soc/pin-controller@40081000/kso14_gpio152"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_FULL_NAME "kso14_gpio152"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_CHILD_IDX 48

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_FOREACH_NODELABEL(fn) fn(kso14_gpio152)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso14_gpio152, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_ORD 149
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_ORD_STR_SORTABLE 00149

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_EXISTS 1
#define DT_N_NODELABEL_kso14_gpio152 DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_pinmux 675
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso14_gpio152_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_PATH "/soc/pin-controller@40081000/kso14_gpio152_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_FULL_NAME "kso14_gpio152_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_CHILD_IDX 107

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_FOREACH_NODELABEL(fn) fn(kso14_gpio152_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso14_gpio152_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_ORD 150
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_ORD_STR_SORTABLE 00150

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_EXISTS 1
#define DT_N_NODELABEL_kso14_gpio152_sleep DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_pinmux 675
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso15_gpio151
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_PATH "/soc/pin-controller@40081000/kso15_gpio151"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_FULL_NAME "kso15_gpio151"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_CHILD_IDX 49

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_FOREACH_NODELABEL(fn) fn(kso15_gpio151)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso15_gpio151, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_ORD 151
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_ORD_STR_SORTABLE 00151

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_EXISTS 1
#define DT_N_NODELABEL_kso15_gpio151 DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_low_power_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_pinmux 1171
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso15_gpio151_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_PATH "/soc/pin-controller@40081000/kso15_gpio151_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_FULL_NAME "kso15_gpio151_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_CHILD_IDX 108

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_FOREACH_NODELABEL(fn) fn(kso15_gpio151_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso15_gpio151_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_ORD 152
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_ORD_STR_SORTABLE 00152

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_SUPPORTS_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_EXISTS 1
#define DT_N_NODELABEL_kso15_gpio151_sleep DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_pinmux 1171
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/kbd@40009c00
 *
 * Node identifier: DT_N_S_soc_S_kbd_40009c00
 *
 * Binding (compatible = microchip,xec-kbd):
 *   $ZEPHYR_BASE/dts/bindings/input/microchip,xec-kbd.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_kbd_40009c00_PATH "/soc/kbd@40009c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_kbd_40009c00_FULL_NAME "kbd@40009c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_kbd_40009c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_kbd_40009c00_CHILD_IDX 37

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_kbd_40009c00_NODELABEL_NUM 1
#define DT_N_S_soc_S_kbd_40009c00_FOREACH_NODELABEL(fn) fn(kbd0)
#define DT_N_S_soc_S_kbd_40009c00_FOREACH_NODELABEL_VARGS(fn, ...) fn(kbd0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_kbd_40009c00_CHILD_NUM 1
#define DT_N_S_soc_S_kbd_40009c00_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_kbd_40009c00_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_kbd_40009c00_S_kscan_input)
#define DT_N_S_soc_S_kbd_40009c00_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_kbd_40009c00_S_kscan_input)
#define DT_N_S_soc_S_kbd_40009c00_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_kbd_40009c00_S_kscan_input, __VA_ARGS__)
#define DT_N_S_soc_S_kbd_40009c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_kbd_40009c00_S_kscan_input, __VA_ARGS__)
#define DT_N_S_soc_S_kbd_40009c00_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_kbd_40009c00_S_kscan_input)
#define DT_N_S_soc_S_kbd_40009c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_kbd_40009c00_S_kscan_input)
#define DT_N_S_soc_S_kbd_40009c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_kbd_40009c00_S_kscan_input, __VA_ARGS__)
#define DT_N_S_soc_S_kbd_40009c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_kbd_40009c00_S_kscan_input, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_kbd_40009c00_ORD 153
#define DT_N_S_soc_S_kbd_40009c00_ORD_STR_SORTABLE 00153

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_kbd_40009c00_REQUIRES_ORDS \
	10, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */ \
	105, /* /soc/pin-controller@40081000/ksi0_gpio017 */ \
	106, /* /soc/pin-controller@40081000/ksi0_gpio017_sleep */ \
	107, /* /soc/pin-controller@40081000/ksi1_gpio020 */ \
	108, /* /soc/pin-controller@40081000/ksi1_gpio020_sleep */ \
	109, /* /soc/pin-controller@40081000/ksi2_gpio021 */ \
	110, /* /soc/pin-controller@40081000/ksi2_gpio021_sleep */ \
	111, /* /soc/pin-controller@40081000/ksi3_gpio026 */ \
	112, /* /soc/pin-controller@40081000/ksi3_gpio026_sleep */ \
	113, /* /soc/pin-controller@40081000/ksi4_gpio027 */ \
	114, /* /soc/pin-controller@40081000/ksi4_gpio027_sleep */ \
	115, /* /soc/pin-controller@40081000/ksi5_gpio030 */ \
	116, /* /soc/pin-controller@40081000/ksi5_gpio030_sleep */ \
	117, /* /soc/pin-controller@40081000/ksi6_gpio031 */ \
	118, /* /soc/pin-controller@40081000/ksi6_gpio031_sleep */ \
	119, /* /soc/pin-controller@40081000/ksi7_gpio032 */ \
	120, /* /soc/pin-controller@40081000/ksi7_gpio032_sleep */ \
	121, /* /soc/pin-controller@40081000/kso00_gpio040 */ \
	122, /* /soc/pin-controller@40081000/kso00_gpio040_sleep */ \
	123, /* /soc/pin-controller@40081000/kso01_gpio045 */ \
	124, /* /soc/pin-controller@40081000/kso01_gpio045_sleep */ \
	125, /* /soc/pin-controller@40081000/kso02_gpio046 */ \
	126, /* /soc/pin-controller@40081000/kso02_gpio046_sleep */ \
	127, /* /soc/pin-controller@40081000/kso03_gpio047 */ \
	128, /* /soc/pin-controller@40081000/kso03_gpio047_sleep */ \
	129, /* /soc/pin-controller@40081000/kso04_gpio107 */ \
	130, /* /soc/pin-controller@40081000/kso04_gpio107_sleep */ \
	131, /* /soc/pin-controller@40081000/kso05_gpio112 */ \
	132, /* /soc/pin-controller@40081000/kso05_gpio112_sleep */ \
	133, /* /soc/pin-controller@40081000/kso06_gpio113 */ \
	134, /* /soc/pin-controller@40081000/kso06_gpio113_sleep */ \
	135, /* /soc/pin-controller@40081000/kso07_gpio120 */ \
	136, /* /soc/pin-controller@40081000/kso07_gpio120_sleep */ \
	137, /* /soc/pin-controller@40081000/kso08_gpio121 */ \
	138, /* /soc/pin-controller@40081000/kso08_gpio121_sleep */ \
	139, /* /soc/pin-controller@40081000/kso09_gpio122 */ \
	140, /* /soc/pin-controller@40081000/kso09_gpio122_sleep */ \
	141, /* /soc/pin-controller@40081000/kso10_gpio123 */ \
	142, /* /soc/pin-controller@40081000/kso10_gpio123_sleep */ \
	143, /* /soc/pin-controller@40081000/kso11_gpio124 */ \
	144, /* /soc/pin-controller@40081000/kso11_gpio124_sleep */ \
	145, /* /soc/pin-controller@40081000/kso12_gpio125 */ \
	146, /* /soc/pin-controller@40081000/kso12_gpio125_sleep */ \
	147, /* /soc/pin-controller@40081000/kso13_gpio126 */ \
	148, /* /soc/pin-controller@40081000/kso13_gpio126_sleep */ \
	149, /* /soc/pin-controller@40081000/kso14_gpio152 */ \
	150, /* /soc/pin-controller@40081000/kso14_gpio152_sleep */ \
	151, /* /soc/pin-controller@40081000/kso15_gpio151 */ \
	152, /* /soc/pin-controller@40081000/kso15_gpio151_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_kbd_40009c00_SUPPORTS_ORDS \
	154, /* /soc/kbd@40009c00/kscan-input */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_kbd_40009c00_EXISTS 1
#define DT_N_INST_0_microchip_xec_kbd DT_N_S_soc_S_kbd_40009c00
#define DT_N_NODELABEL_kbd0           DT_N_S_soc_S_kbd_40009c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_kbd_40009c00_REG_NUM 1
#define DT_N_S_soc_S_kbd_40009c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_REG_IDX_0_VAL_ADDRESS 1073781760 /* 0x40009c00 */
#define DT_N_S_soc_S_kbd_40009c00_REG_IDX_0_VAL_SIZE 24 /* 0x18 */
#define DT_N_S_soc_S_kbd_40009c00_RANGES_NUM 0
#define DT_N_S_soc_S_kbd_40009c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_kbd_40009c00_IRQ_NUM 1
#define DT_N_S_soc_S_kbd_40009c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_IRQ_IDX_0_VAL_irq 135
#define DT_N_S_soc_S_kbd_40009c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_kbd_40009c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_kbd_40009c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_kbd_40009c00_COMPAT_MATCHES_microchip_xec_kbd 1
#define DT_N_S_soc_S_kbd_40009c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_kbd_40009c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_COMPAT_MODEL_IDX_0 "xec-kbd"
#define DT_N_S_soc_S_kbd_40009c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NUM 2
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_default_IDX_2_PH DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_default_IDX_3_PH DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_default_IDX_4_PH DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_default_IDX_5_PH DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_default_IDX_6_PH DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_default_IDX_7_PH DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_default_IDX_8_PH DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_default_IDX_9_PH DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_default_IDX_10_PH DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_default_IDX_11_PH DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_default_IDX_12_PH DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_default_IDX_13_PH DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_default_IDX_14_PH DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_default_IDX_15_PH DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_default_IDX_16_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_default_IDX_17_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_default_IDX_18_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_default_IDX_19_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_default_IDX_20_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_default_IDX_21_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_default_IDX_22_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_default_IDX_23_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_IDX_1_TOKEN sleep
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_IDX_1_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_sleep_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_sleep_IDX 1
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_sleep_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_sleep_IDX_1_PH DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_sleep_IDX_2_PH DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_sleep_IDX_3_PH DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_sleep_IDX_4_PH DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_sleep_IDX_5_PH DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_sleep_IDX_6_PH DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_sleep_IDX_7_PH DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_sleep_IDX_8_PH DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_sleep_IDX_9_PH DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_sleep_IDX_10_PH DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_sleep_IDX_11_PH DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_sleep_IDX_12_PH DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_sleep_IDX_13_PH DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_sleep_IDX_14_PH DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_sleep_IDX_15_PH DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_sleep_IDX_16_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_sleep_IDX_17_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_sleep_IDX_18_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_sleep_IDX_19_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_sleep_IDX_20_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_sleep_IDX_21_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_sleep_IDX_22_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep
#define DT_N_S_soc_S_kbd_40009c00_PINCTRL_NAME_sleep_IDX_23_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep

/* Generic property macros: */
#define DT_N_S_soc_S_kbd_40009c00_P_wakeup_source 0
#define DT_N_S_soc_S_kbd_40009c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_kbd_40009c00_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_status "okay"
#define DT_N_S_soc_S_kbd_40009c00_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_kbd_40009c00_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_kbd_40009c00_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_kbd_40009c00_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_kbd_40009c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_kbd_40009c00_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_kbd_40009c00_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_kbd_40009c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_kbd_40009c00, status, 0)
#define DT_N_S_soc_S_kbd_40009c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_kbd_40009c00, status, 0)
#define DT_N_S_soc_S_kbd_40009c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_kbd_40009c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_kbd_40009c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_kbd_40009c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_kbd_40009c00_P_status_LEN 1
#define DT_N_S_soc_S_kbd_40009c00_P_status_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_compatible {"microchip,xec-kbd"}
#define DT_N_S_soc_S_kbd_40009c00_P_compatible_IDX_0 "microchip,xec-kbd"
#define DT_N_S_soc_S_kbd_40009c00_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-kbd
#define DT_N_S_soc_S_kbd_40009c00_P_compatible_IDX_0_STRING_TOKEN microchip_xec_kbd
#define DT_N_S_soc_S_kbd_40009c00_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_KBD
#define DT_N_S_soc_S_kbd_40009c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_kbd_40009c00, compatible, 0)
#define DT_N_S_soc_S_kbd_40009c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_kbd_40009c00, compatible, 0)
#define DT_N_S_soc_S_kbd_40009c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_kbd_40009c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_kbd_40009c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_kbd_40009c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_kbd_40009c00_P_compatible_LEN 1
#define DT_N_S_soc_S_kbd_40009c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_reg {1073781760 /* 0x40009c00 */, 24 /* 0x18 */}
#define DT_N_S_soc_S_kbd_40009c00_P_reg_IDX_0 1073781760
#define DT_N_S_soc_S_kbd_40009c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_reg_IDX_1 24
#define DT_N_S_soc_S_kbd_40009c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_interrupts {135 /* 0x87 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_kbd_40009c00_P_interrupts_IDX_0 135
#define DT_N_S_soc_S_kbd_40009c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_kbd_40009c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_kbd_40009c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_row_size 8
#define DT_N_S_soc_S_kbd_40009c00_P_row_size_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_col_size 16
#define DT_N_S_soc_S_kbd_40009c00_P_col_size_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_poll_period_ms 5
#define DT_N_S_soc_S_kbd_40009c00_P_poll_period_ms_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_poll_timeout_ms 100
#define DT_N_S_soc_S_kbd_40009c00_P_poll_timeout_ms_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_debounce_down_ms 10
#define DT_N_S_soc_S_kbd_40009c00_P_debounce_down_ms_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_debounce_up_ms 20
#define DT_N_S_soc_S_kbd_40009c00_P_debounce_up_ms_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_settle_time_us 50
#define DT_N_S_soc_S_kbd_40009c00_P_settle_time_us_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_no_ghostkey_check 0
#define DT_N_S_soc_S_kbd_40009c00_P_no_ghostkey_check_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_2 DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_2_PH DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_2_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_3 DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_3_PH DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_3_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_4 DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_4_PH DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_4_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_5 DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_5_PH DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_5_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_6 DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_6_PH DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_6_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_7 DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_7_PH DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_7_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_8 DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_8_PH DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_8_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_9 DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_9_PH DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_9_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_10 DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_10_PH DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_10_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_11 DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_11_PH DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_11_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_12 DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_12_PH DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_12_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_13 DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_13_PH DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_13_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_14 DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_14_PH DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_14_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_15 DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_15_PH DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_15_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_16 DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_16_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_16_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_17 DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_17_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_17_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_18 DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_18_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_18_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_19 DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_19_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_19_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_20 DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_20_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_20_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_21 DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_21_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_21_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_22 DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_22_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_22_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_23 DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_23_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_IDX_23_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 1) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 2) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 3) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 4) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 5) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 6) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 7) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 8) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 9) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 10) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 11) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 12) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 13) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 14) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 15) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 16) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 17) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 18) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 19) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 20) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 21) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 22) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 23)
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 16) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 17) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 18) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 19) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 20) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 21) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 22) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 23)
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 14, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 15, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 16, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 17, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 18, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 19, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 20, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 21, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 22, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 23, __VA_ARGS__)
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_0, 23, __VA_ARGS__)
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_LEN 24
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_0 DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_0_PH DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_0_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_1 DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_1_PH DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_1_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_2 DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_2_PH DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_2_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_3 DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_3_PH DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_3_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_4 DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_4_PH DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_4_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_5 DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_5_PH DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_5_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_6 DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_6_PH DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_6_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_7 DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_7_PH DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_7_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_8 DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_8_PH DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_8_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_9 DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_9_PH DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_9_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_10 DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_10_PH DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_10_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_11 DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_11_PH DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_11_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_12 DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_12_PH DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_12_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_13 DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_13_PH DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_13_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_14 DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_14_PH DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_14_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_15 DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_15_PH DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_15_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_16 DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_16_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_16_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_17 DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_17_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_17_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_18 DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_18_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_18_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_19 DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_19_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_19_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_20 DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_20_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_20_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_21 DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_21_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_21_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_22 DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_22_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_22_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_23 DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_23_PH DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_IDX_23_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 0) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 1) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 2) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 3) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 4) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 5) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 6) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 7) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 8) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 9) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 10) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 11) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 12) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 13) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 14) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 15) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 16) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 17) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 18) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 19) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 20) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 21) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 22) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 23)
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 16) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 17) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 18) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 19) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 20) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 21) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 22) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 23)
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 14, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 15, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 16, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 17, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 18, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 19, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 20, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 21, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 22, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 23, __VA_ARGS__)
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_1, 23, __VA_ARGS__)
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_LEN 24
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_1_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_names {"default", "sleep"}
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_names_IDX_1 "sleep"
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_names_IDX_1_STRING_UNQUOTED sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_names_IDX_1_STRING_TOKEN sleep
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_names_IDX_1_STRING_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_names, 0) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_names, 1)
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_names, 1)
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_names_LEN 2
#define DT_N_S_soc_S_kbd_40009c00_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_girqs {21 /* 0x15 */, 25 /* 0x19 */}
#define DT_N_S_soc_S_kbd_40009c00_P_girqs_IDX_0 21
#define DT_N_S_soc_S_kbd_40009c00_P_girqs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_girqs_IDX_1 25
#define DT_N_S_soc_S_kbd_40009c00_P_girqs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_girqs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_kbd_40009c00, girqs, 0) \
	fn(DT_N_S_soc_S_kbd_40009c00, girqs, 1)
#define DT_N_S_soc_S_kbd_40009c00_P_girqs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_kbd_40009c00, girqs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, girqs, 1)
#define DT_N_S_soc_S_kbd_40009c00_P_girqs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_kbd_40009c00, girqs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_kbd_40009c00_P_girqs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_kbd_40009c00, girqs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, girqs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_kbd_40009c00_P_girqs_LEN 2
#define DT_N_S_soc_S_kbd_40009c00_P_girqs_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pcrs {3 /* 0x3 */, 11 /* 0xb */}
#define DT_N_S_soc_S_kbd_40009c00_P_pcrs_IDX_0 3
#define DT_N_S_soc_S_kbd_40009c00_P_pcrs_IDX_0_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pcrs_IDX_1 11
#define DT_N_S_soc_S_kbd_40009c00_P_pcrs_IDX_1_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_P_pcrs_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_kbd_40009c00, pcrs, 0) \
	fn(DT_N_S_soc_S_kbd_40009c00, pcrs, 1)
#define DT_N_S_soc_S_kbd_40009c00_P_pcrs_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_kbd_40009c00, pcrs, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pcrs, 1)
#define DT_N_S_soc_S_kbd_40009c00_P_pcrs_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_kbd_40009c00, pcrs, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_kbd_40009c00, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_kbd_40009c00_P_pcrs_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_kbd_40009c00, pcrs, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_kbd_40009c00, pcrs, 1, __VA_ARGS__)
#define DT_N_S_soc_S_kbd_40009c00_P_pcrs_LEN 2
#define DT_N_S_soc_S_kbd_40009c00_P_pcrs_EXISTS 1

/*
 * Devicetree node: /soc/kbd@40009c00/kscan-input
 *
 * Node identifier: DT_N_S_soc_S_kbd_40009c00_S_kscan_input
 *
 * Binding (compatible = zephyr,kscan-input):
 *   $ZEPHYR_BASE/dts/bindings/kscan/zephyr,kscan-input.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_PATH "/soc/kbd@40009c00/kscan-input"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_FULL_NAME "kscan-input"

/* Node parent (/soc/kbd@40009c00) identifier: */
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_PARENT DT_N_S_soc_S_kbd_40009c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_NODELABEL_NUM 1
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_FOREACH_NODELABEL(fn) fn(kscan_input)
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_FOREACH_NODELABEL_VARGS(fn, ...) fn(kscan_input, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_CHILD_NUM 0
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_ORD 154
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_ORD_STR_SORTABLE 00154

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_REQUIRES_ORDS \
	153, /* /soc/kbd@40009c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_EXISTS 1
#define DT_N_ALIAS_kscan0              DT_N_S_soc_S_kbd_40009c00_S_kscan_input
#define DT_N_INST_0_zephyr_kscan_input DT_N_S_soc_S_kbd_40009c00_S_kscan_input
#define DT_N_NODELABEL_kscan_input     DT_N_S_soc_S_kbd_40009c00_S_kscan_input

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_REG_NUM 0
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_RANGES_NUM 0
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_IRQ_NUM 0
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_IRQ_LEVEL 0
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_COMPAT_MATCHES_zephyr_kscan_input 1
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_COMPAT_MODEL_IDX_0 "kscan-input"
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_P_wakeup_source 0
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_P_compatible {"zephyr,kscan-input"}
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_P_compatible_IDX_0 "zephyr,kscan-input"
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_P_compatible_IDX_0_STRING_UNQUOTED zephyr,kscan-input
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_P_compatible_IDX_0_STRING_TOKEN zephyr_kscan_input
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_KSCAN_INPUT
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_kbd_40009c00_S_kscan_input, compatible, 0)
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_kbd_40009c00_S_kscan_input, compatible, 0)
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_kbd_40009c00_S_kscan_input, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_kbd_40009c00_S_kscan_input, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_P_compatible_LEN 1
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_P_compatible_EXISTS 1
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_kbd_40009c00_S_kscan_input_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/gpio@40081080
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080
 *
 * Binding (compatible = microchip,xec-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/microchip,xec-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_PATH "/soc/pin-controller@40081000/gpio@40081080"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_FULL_NAME "gpio@40081080"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_FOREACH_NODELABEL(fn) fn(gpio_040_076)
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpio_040_076, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_ORD 155
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_ORD_STR_SORTABLE 00155

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_EXISTS 1
#define DT_N_INST_1_microchip_xec_gpio DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080
#define DT_N_NODELABEL_gpio_040_076    DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_REG_NUM 4
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_REG_IDX_0_VAL_ADDRESS 1074270336 /* 0x40081080 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_REG_IDX_0_VAL_SIZE 128 /* 0x80 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_REG_IDX_1_VAL_ADDRESS 1074270980 /* 0x40081304 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_REG_IDX_1_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_REG_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_REG_IDX_2_VAL_ADDRESS 1074271108 /* 0x40081384 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_REG_IDX_2_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_REG_IDX_3_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_REG_IDX_3_VAL_ADDRESS 1074271224 /* 0x400813f8 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_REG_IDX_3_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_IRQ_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_IRQ_IDX_0_VAL_irq 2
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_IRQ_IDX_0_VAL_priority 2
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_IRQ_LEVEL 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_COMPAT_MATCHES_microchip_xec_gpio 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_COMPAT_MODEL_IDX_0 "xec-gpio"
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_compatible {"microchip,xec-gpio"}
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_compatible_IDX_0 "microchip,xec-gpio"
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-gpio
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_compatible_IDX_0_STRING_TOKEN microchip_xec_gpio
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_GPIO
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_reg {1074270336 /* 0x40081080 */, 128 /* 0x80 */, 1074270980 /* 0x40081304 */, 4 /* 0x4 */, 1074271108 /* 0x40081384 */, 4 /* 0x4 */, 1074271224 /* 0x400813f8 */, 4 /* 0x4 */}
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_reg_IDX_0 1074270336
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_reg_IDX_1 128
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_reg_IDX_2 1074270980
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_reg_IDX_3 4
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_reg_IDX_4 1074271108
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_reg_IDX_4_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_reg_IDX_5 4
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_reg_IDX_5_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_reg_IDX_6 1074271224
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_reg_IDX_6_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_reg_IDX_7 4
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_reg_IDX_7_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_interrupts {2 /* 0x2 */, 2 /* 0x2 */}
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_interrupts_IDX_0 2
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_interrupts_IDX_1 2
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_port_id 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_port_id_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_girq_id 10
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080_P_girq_id_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/gpio@40081200
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200
 *
 * Binding (compatible = microchip,xec-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/microchip,xec-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_PATH "/soc/pin-controller@40081000/gpio@40081200"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_FULL_NAME "gpio@40081200"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_FOREACH_NODELABEL(fn) fn(gpio_200_236)
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpio_200_236, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_ORD 156
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_ORD_STR_SORTABLE 00156

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_EXISTS 1
#define DT_N_INST_4_microchip_xec_gpio DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200
#define DT_N_NODELABEL_gpio_200_236    DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_REG_NUM 4
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_REG_IDX_0_VAL_ADDRESS 1074270720 /* 0x40081200 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_REG_IDX_0_VAL_SIZE 128 /* 0x80 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_REG_IDX_1_VAL_ADDRESS 1074270992 /* 0x40081310 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_REG_IDX_1_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_REG_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_REG_IDX_2_VAL_ADDRESS 1074271120 /* 0x40081390 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_REG_IDX_2_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_REG_IDX_3_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_REG_IDX_3_VAL_ADDRESS 1074271212 /* 0x400813ec */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_REG_IDX_3_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_IRQ_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_IRQ_IDX_0_VAL_irq 4
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_IRQ_IDX_0_VAL_priority 2
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_IRQ_LEVEL 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_COMPAT_MATCHES_microchip_xec_gpio 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_COMPAT_MODEL_IDX_0 "xec-gpio"
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_compatible {"microchip,xec-gpio"}
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_compatible_IDX_0 "microchip,xec-gpio"
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-gpio
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_compatible_IDX_0_STRING_TOKEN microchip_xec_gpio
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_GPIO
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_reg {1074270720 /* 0x40081200 */, 128 /* 0x80 */, 1074270992 /* 0x40081310 */, 4 /* 0x4 */, 1074271120 /* 0x40081390 */, 4 /* 0x4 */, 1074271212 /* 0x400813ec */, 4 /* 0x4 */}
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_reg_IDX_0 1074270720
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_reg_IDX_1 128
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_reg_IDX_2 1074270992
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_reg_IDX_3 4
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_reg_IDX_4 1074271120
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_reg_IDX_4_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_reg_IDX_5 4
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_reg_IDX_5_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_reg_IDX_6 1074271212
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_reg_IDX_6_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_reg_IDX_7 4
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_reg_IDX_7_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_interrupts {4 /* 0x4 */, 2 /* 0x2 */}
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_interrupts_IDX_0 4
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_interrupts_IDX_1 2
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_port_id 4
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_port_id_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_girq_id 12
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200_P_girq_id_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/gpio@40081280
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280
 *
 * Binding (compatible = microchip,xec-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/microchip,xec-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_PATH "/soc/pin-controller@40081000/gpio@40081280"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_FULL_NAME "gpio@40081280"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_FOREACH_NODELABEL(fn) fn(gpio_240_276)
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpio_240_276, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_ORD 157
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_ORD_STR_SORTABLE 00157

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_EXISTS 1
#define DT_N_INST_5_microchip_xec_gpio DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280
#define DT_N_NODELABEL_gpio_240_276    DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_REG_NUM 4
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_REG_IDX_0_VAL_ADDRESS 1074270848 /* 0x40081280 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_REG_IDX_0_VAL_SIZE 128 /* 0x80 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_REG_IDX_1_VAL_ADDRESS 1074270996 /* 0x40081314 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_REG_IDX_1_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_REG_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_REG_IDX_2_VAL_ADDRESS 1074271124 /* 0x40081394 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_REG_IDX_2_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_REG_IDX_3_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_REG_IDX_3_VAL_ADDRESS 1074271208 /* 0x400813e8 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_REG_IDX_3_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_IRQ_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_IRQ_IDX_0_VAL_irq 17
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_IRQ_IDX_0_VAL_priority 2
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_IRQ_LEVEL 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_COMPAT_MATCHES_microchip_xec_gpio 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_COMPAT_VENDOR_IDX_0 "Microchip Technology Inc."
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_COMPAT_MODEL_IDX_0 "xec-gpio"
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_compatible {"microchip,xec-gpio"}
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_compatible_IDX_0 "microchip,xec-gpio"
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_compatible_IDX_0_STRING_UNQUOTED microchip,xec-gpio
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_compatible_IDX_0_STRING_TOKEN microchip_xec_gpio
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_compatible_IDX_0_STRING_UPPER_TOKEN MICROCHIP_XEC_GPIO
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_reg {1074270848 /* 0x40081280 */, 128 /* 0x80 */, 1074270996 /* 0x40081314 */, 4 /* 0x4 */, 1074271124 /* 0x40081394 */, 4 /* 0x4 */, 1074271208 /* 0x400813e8 */, 4 /* 0x4 */}
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_reg_IDX_0 1074270848
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_reg_IDX_1 128
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_reg_IDX_2 1074270996
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_reg_IDX_3 4
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_reg_IDX_4 1074271124
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_reg_IDX_4_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_reg_IDX_5 4
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_reg_IDX_5_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_reg_IDX_6 1074271208
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_reg_IDX_6_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_reg_IDX_7 4
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_reg_IDX_7_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_interrupts {17 /* 0x11 */, 2 /* 0x2 */}
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_interrupts_IDX_0 17
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_interrupts_IDX_1 2
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_port_id 5
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_port_id_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_girq_id 26
#define DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280_P_girq_id_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso16_gpio132_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_PATH "/soc/pin-controller@40081000/kso16_gpio132_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_FULL_NAME "kso16_gpio132_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_CHILD_IDX 109

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_FOREACH_NODELABEL(fn) fn(kso16_gpio132_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso16_gpio132_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_ORD 158
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_ORD_STR_SORTABLE 00158

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_EXISTS 1
#define DT_N_NODELABEL_kso16_gpio132_sleep DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_pinmux 1442
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/kso17_gpio140_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_PATH "/soc/pin-controller@40081000/kso17_gpio140_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_FULL_NAME "kso17_gpio140_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_CHILD_IDX 110

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_FOREACH_NODELABEL(fn) fn(kso17_gpio140_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(kso17_gpio140_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_ORD 159
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_ORD_STR_SORTABLE 00159

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_EXISTS 1
#define DT_N_NODELABEL_kso17_gpio140_sleep DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_pinmux 1539
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/led0_gpio156_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_PATH "/soc/pin-controller@40081000/led0_gpio156_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_FULL_NAME "led0_gpio156_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_CHILD_IDX 115

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_FOREACH_NODELABEL(fn) fn(led0_gpio156_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(led0_gpio156_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_ORD 160
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_ORD_STR_SORTABLE 00160

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_EXISTS 1
#define DT_N_NODELABEL_led0_gpio156_sleep DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_pinmux 739
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/led1_gpio157_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_PATH "/soc/pin-controller@40081000/led1_gpio157_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_FULL_NAME "led1_gpio157_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_CHILD_IDX 116

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_FOREACH_NODELABEL(fn) fn(led1_gpio157_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(led1_gpio157_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_ORD 161
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_ORD_STR_SORTABLE 00161

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_EXISTS 1
#define DT_N_NODELABEL_led1_gpio157_sleep DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_pinmux 755
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/led2_gpio153_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_PATH "/soc/pin-controller@40081000/led2_gpio153_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_FULL_NAME "led2_gpio153_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_CHILD_IDX 117

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_FOREACH_NODELABEL(fn) fn(led2_gpio153_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(led2_gpio153_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_ORD 162
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_ORD_STR_SORTABLE 00162

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_EXISTS 1
#define DT_N_NODELABEL_led2_gpio153_sleep DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_pinmux 691
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/pspi_clk_gpio117_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_PATH "/soc/pin-controller@40081000/pspi_clk_gpio117_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_FULL_NAME "pspi_clk_gpio117_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_CHILD_IDX 112

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_FOREACH_NODELABEL(fn) fn(pspi_clk_gpio117_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(pspi_clk_gpio117_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_ORD 163
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_ORD_STR_SORTABLE 00163

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_EXISTS 1
#define DT_N_NODELABEL_pspi_clk_gpio117_sleep DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_pinmux 1266
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/pspi_cs_n_gpio116_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_PATH "/soc/pin-controller@40081000/pspi_cs_n_gpio116_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_FULL_NAME "pspi_cs_n_gpio116_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_CHILD_IDX 111

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_FOREACH_NODELABEL(fn) fn(pspi_cs_n_gpio116_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(pspi_cs_n_gpio116_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_ORD 164
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_ORD_STR_SORTABLE 00164

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_EXISTS 1
#define DT_N_NODELABEL_pspi_cs_n_gpio116_sleep DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_pinmux 1250
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/pspi_miso_gpio075_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_PATH "/soc/pin-controller@40081000/pspi_miso_gpio075_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_FULL_NAME "pspi_miso_gpio075_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_CHILD_IDX 114

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_FOREACH_NODELABEL(fn) fn(pspi_miso_gpio075_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(pspi_miso_gpio075_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_ORD 165
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_ORD_STR_SORTABLE 00165

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_EXISTS 1
#define DT_N_NODELABEL_pspi_miso_gpio075_sleep DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_pinmux 1489
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/pspi_mosi_gpio074_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_PATH "/soc/pin-controller@40081000/pspi_mosi_gpio074_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_FULL_NAME "pspi_mosi_gpio074_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_CHILD_IDX 113

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_FOREACH_NODELABEL(fn) fn(pspi_mosi_gpio074_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(pspi_mosi_gpio074_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_ORD 166
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_ORD_STR_SORTABLE 00166

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_EXISTS 1
#define DT_N_NODELABEL_pspi_mosi_gpio074_sleep DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_pinmux 1473
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/pwm0_alt_gpio241_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_PATH "/soc/pin-controller@40081000/pwm0_alt_gpio241_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_FULL_NAME "pwm0_alt_gpio241_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_CHILD_IDX 70

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_FOREACH_NODELABEL(fn) fn(pwm0_alt_gpio241_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm0_alt_gpio241_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_ORD 167
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_ORD_STR_SORTABLE 00167

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_EXISTS 1
#define DT_N_NODELABEL_pwm0_alt_gpio241_sleep DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_pinmux 533
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/pwm0_gpio053_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_PATH "/soc/pin-controller@40081000/pwm0_gpio053_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_FULL_NAME "pwm0_gpio053_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_CHILD_IDX 69

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_FOREACH_NODELABEL(fn) fn(pwm0_gpio053_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm0_gpio053_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_ORD 168
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_ORD_STR_SORTABLE 00168

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_EXISTS 1
#define DT_N_NODELABEL_pwm0_gpio053_sleep DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_pinmux 689
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/pwm1_alt_gpio254_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_PATH "/soc/pin-controller@40081000/pwm1_alt_gpio254_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_FULL_NAME "pwm1_alt_gpio254_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_CHILD_IDX 72

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_FOREACH_NODELABEL(fn) fn(pwm1_alt_gpio254_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm1_alt_gpio254_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_ORD 169
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_ORD_STR_SORTABLE 00169

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_EXISTS 1
#define DT_N_NODELABEL_pwm1_alt_gpio254_sleep DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_pinmux 709
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/pwm1_gpio054_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_PATH "/soc/pin-controller@40081000/pwm1_gpio054_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_FULL_NAME "pwm1_gpio054_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_CHILD_IDX 71

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_FOREACH_NODELABEL(fn) fn(pwm1_gpio054_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm1_gpio054_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_ORD 170
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_ORD_STR_SORTABLE 00170

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_EXISTS 1
#define DT_N_NODELABEL_pwm1_gpio054_sleep DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_pinmux 705
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/pwm2_alt_gpio045_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_PATH "/soc/pin-controller@40081000/pwm2_alt_gpio045_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_FULL_NAME "pwm2_alt_gpio045_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_CHILD_IDX 74

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_FOREACH_NODELABEL(fn) fn(pwm2_alt_gpio045_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm2_alt_gpio045_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_ORD 171
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_ORD_STR_SORTABLE 00171

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_EXISTS 1
#define DT_N_NODELABEL_pwm2_alt_gpio045_sleep DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_pinmux 1105
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/pwm2_gpio055_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_PATH "/soc/pin-controller@40081000/pwm2_gpio055_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_FULL_NAME "pwm2_gpio055_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_CHILD_IDX 73

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_FOREACH_NODELABEL(fn) fn(pwm2_gpio055_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm2_gpio055_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_ORD 172
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_ORD_STR_SORTABLE 00172

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_EXISTS 1
#define DT_N_NODELABEL_pwm2_gpio055_sleep DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_pinmux 721
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/pwm3_alt_gpio047_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_PATH "/soc/pin-controller@40081000/pwm3_alt_gpio047_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_FULL_NAME "pwm3_alt_gpio047_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_CHILD_IDX 76

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_FOREACH_NODELABEL(fn) fn(pwm3_alt_gpio047_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm3_alt_gpio047_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_ORD 173
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_ORD_STR_SORTABLE 00173

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_EXISTS 1
#define DT_N_NODELABEL_pwm3_alt_gpio047_sleep DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_pinmux 1137
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/pwm3_gpio056_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_PATH "/soc/pin-controller@40081000/pwm3_gpio056_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_FULL_NAME "pwm3_gpio056_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_CHILD_IDX 75

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_FOREACH_NODELABEL(fn) fn(pwm3_gpio056_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm3_gpio056_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_ORD 174
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_ORD_STR_SORTABLE 00174

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_EXISTS 1
#define DT_N_NODELABEL_pwm3_gpio056_sleep DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_pinmux 737
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/pwm4_gpio011_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_PATH "/soc/pin-controller@40081000/pwm4_gpio011_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_FULL_NAME "pwm4_gpio011_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_CHILD_IDX 77

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_FOREACH_NODELABEL(fn) fn(pwm4_gpio011_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm4_gpio011_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_ORD 175
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_ORD_STR_SORTABLE 00175

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_EXISTS 1
#define DT_N_NODELABEL_pwm4_gpio011_sleep DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_pinmux 1168
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/pwm5_gpio002_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_PATH "/soc/pin-controller@40081000/pwm5_gpio002_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_FULL_NAME "pwm5_gpio002_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_CHILD_IDX 78

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_FOREACH_NODELABEL(fn) fn(pwm5_gpio002_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm5_gpio002_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_ORD 176
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_ORD_STR_SORTABLE 00176

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_EXISTS 1
#define DT_N_NODELABEL_pwm5_gpio002_sleep DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_pinmux 544
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/pwm6_alt_gpio063_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_PATH "/soc/pin-controller@40081000/pwm6_alt_gpio063_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_FULL_NAME "pwm6_alt_gpio063_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_CHILD_IDX 80

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_FOREACH_NODELABEL(fn) fn(pwm6_alt_gpio063_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm6_alt_gpio063_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_ORD 177
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_ORD_STR_SORTABLE 00177

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_EXISTS 1
#define DT_N_NODELABEL_pwm6_alt_gpio063_sleep DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_pinmux 1329
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/pwm6_gpio014_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_PATH "/soc/pin-controller@40081000/pwm6_gpio014_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_FULL_NAME "pwm6_gpio014_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_CHILD_IDX 79

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_FOREACH_NODELABEL(fn) fn(pwm6_gpio014_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm6_gpio014_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_ORD 178
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_ORD_STR_SORTABLE 00178

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_EXISTS 1
#define DT_N_NODELABEL_pwm6_gpio014_sleep DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_pinmux 704
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/pwm7_alt_gpio061_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_PATH "/soc/pin-controller@40081000/pwm7_alt_gpio061_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_FULL_NAME "pwm7_alt_gpio061_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_CHILD_IDX 82

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_FOREACH_NODELABEL(fn) fn(pwm7_alt_gpio061_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm7_alt_gpio061_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_ORD 179
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_ORD_STR_SORTABLE 00179

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_EXISTS 1
#define DT_N_NODELABEL_pwm7_alt_gpio061_sleep DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_pinmux 1297
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/pwm7_gpio015_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_PATH "/soc/pin-controller@40081000/pwm7_gpio015_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_FULL_NAME "pwm7_gpio015_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_CHILD_IDX 81

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_FOREACH_NODELABEL(fn) fn(pwm7_gpio015_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm7_gpio015_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_ORD 180
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_ORD_STR_SORTABLE 00180

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_EXISTS 1
#define DT_N_NODELABEL_pwm7_gpio015_sleep DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_pinmux 720
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/pwm8_alt_gpio175_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_PATH "/soc/pin-controller@40081000/pwm8_alt_gpio175_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_FULL_NAME "pwm8_alt_gpio175_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_CHILD_IDX 84

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_FOREACH_NODELABEL(fn) fn(pwm8_alt_gpio175_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm8_alt_gpio175_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_ORD 181
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_ORD_STR_SORTABLE 00181

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_EXISTS 1
#define DT_N_NODELABEL_pwm8_alt_gpio175_sleep DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_pinmux 2003
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40081000/pwm8_gpio035_sleep
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_PATH "/soc/pin-controller@40081000/pwm8_gpio035_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_FULL_NAME "pwm8_gpio035_sleep"

/* Node parent (/soc/pin-controller@40081000) identifier: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_PARENT DT_N_S_soc_S_pin_controller_40081000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_CHILD_IDX 83

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_FOREACH_NODELABEL(fn) fn(pwm8_gpio035_sleep)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm8_gpio035_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_ORD 182
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_ORD_STR_SORTABLE 00182

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40081000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_EXISTS 1
#define DT_N_NODELABEL_pwm8_gpio035_sleep DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_low_power_enable 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_low_power_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_output_disable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_output_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_pinmux 976
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_slew_rate "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_slew_rate_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_slew_rate_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_slew_rate_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_slew_rate_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_slew_rate_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_slew_rate_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_slew_rate_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_drive_strength "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_drive_strength_STRING_UNQUOTED no-change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_drive_strength_STRING_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_drive_strength_STRING_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_drive_strength_IDX_0 "no-change"
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_drive_strength_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_drive_strength_ENUM_VAL_no_change_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_drive_strength_ENUM_TOKEN no_change
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_drive_strength_ENUM_UPPER_TOKEN NO_CHANGE
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep, drive_strength, 0)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep, drive_strength, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_drive_strength_LEN 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_microchip_output_func_invert 0
#define DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep_P_microchip_output_func_invert_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_sram                 DT_N_S_memory_118000
#define DT_CHOSEN_zephyr_sram_EXISTS          1
#define DT_CHOSEN_zephyr_console              DT_N_S_soc_S_uart_400f2c00
#define DT_CHOSEN_zephyr_console_EXISTS       1
#define DT_CHOSEN_zephyr_flash                DT_N_S_flash_e0000
#define DT_CHOSEN_zephyr_flash_EXISTS         1
#define DT_CHOSEN_zephyr_keyboard_scan        DT_N_S_soc_S_kbd_40009c00_S_kscan_input
#define DT_CHOSEN_zephyr_keyboard_scan_EXISTS 1

/* Macros for iterating over all nodes and enabled nodes */
#define DT_FOREACH_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_ecs_4000fc00) fn(DT_N_S_soc_S_pcr_40080100) fn(DT_N_S_soc_S_ecia_4000e000) fn(DT_N_S_soc_S_ecia_4000e000_S_girq23_12c) fn(DT_N_S_soc_S_pin_controller_40081000) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012) fn(DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep) fn(DT_N_S_soc_S_timer_40007400) fn(DT_N_S_soc_S_bb_ram_4000a800) fn(DT_N_S_soc_S_watchdog_40000400) fn(DT_N_S_soc_S_uart_400f2400) fn(DT_N_S_soc_S_uart_400f2800) fn(DT_N_S_soc_S_uart_400f2c00) fn(DT_N_S_soc_S_i2c_40004000) fn(DT_N_S_soc_S_i2c_40004400) fn(DT_N_S_soc_S_i2c_40004400_S_pca9555_26) fn(DT_N_S_soc_S_i2c_40004800) fn(DT_N_S_soc_S_i2c_40004c00) fn(DT_N_S_soc_S_i2c_40005000) fn(DT_N_S_soc_S_espi_400f3400) fn(DT_N_S_soc_S_espi_40008000) fn(DT_N_S_soc_S_timer_40000c00) fn(DT_N_S_soc_S_timer_40000c20) fn(DT_N_S_soc_S_timer_40000c80) fn(DT_N_S_soc_S_timer_40000ca0) fn(DT_N_S_soc_S_timer_40009800) fn(DT_N_S_soc_S_timer_40009820) fn(DT_N_S_soc_S_ps2_40009000) fn(DT_N_S_soc_S_ps2_40009040) fn(DT_N_S_soc_S_pwm_40005800) fn(DT_N_S_soc_S_pwm_40005810) fn(DT_N_S_soc_S_pwm_40005820) fn(DT_N_S_soc_S_pwm_40005830) fn(DT_N_S_soc_S_pwm_40005840) fn(DT_N_S_soc_S_pwm_40005850) fn(DT_N_S_soc_S_pwm_40005860) fn(DT_N_S_soc_S_pwm_40005870) fn(DT_N_S_soc_S_pwm_40005880) fn(DT_N_S_soc_S_adc_40007c00) fn(DT_N_S_soc_S_kbd_40009c00) fn(DT_N_S_soc_S_kbd_40009c00_S_kscan_input) fn(DT_N_S_soc_S_peci_40006400) fn(DT_N_S_soc_S_spi_40070000) fn(DT_N_S_soc_S_tach_40006000) fn(DT_N_S_soc_S_tach_40006010) fn(DT_N_S_soc_S_tach_40006020) fn(DT_N_S_soc_S_tach_40006030) fn(DT_N_S_soc_S_bbled_4000b800) fn(DT_N_S_soc_S_bbled_4000b900) fn(DT_N_S_soc_S_bbled_4000ba00) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_power_states) fn(DT_N_S_cpus_S_power_states_S_idle) fn(DT_N_S_cpus_S_power_states_S_suspend_to_ram) fn(DT_N_S_flash_e0000) fn(DT_N_S_memory_118000) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2)
#define DT_FOREACH_OKAY_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_ecs_4000fc00) fn(DT_N_S_soc_S_pcr_40080100) fn(DT_N_S_soc_S_ecia_4000e000) fn(DT_N_S_soc_S_pin_controller_40081000) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012) fn(DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep) fn(DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep) fn(DT_N_S_soc_S_timer_40007400) fn(DT_N_S_soc_S_bb_ram_4000a800) fn(DT_N_S_soc_S_watchdog_40000400) fn(DT_N_S_soc_S_uart_400f2c00) fn(DT_N_S_soc_S_i2c_40004000) fn(DT_N_S_soc_S_i2c_40004400) fn(DT_N_S_soc_S_i2c_40004400_S_pca9555_26) fn(DT_N_S_soc_S_i2c_40004800) fn(DT_N_S_soc_S_espi_400f3400) fn(DT_N_S_soc_S_timer_40000ca0) fn(DT_N_S_soc_S_timer_40009800) fn(DT_N_S_soc_S_timer_40009820) fn(DT_N_S_soc_S_ps2_40009000) fn(DT_N_S_soc_S_ps2_40009040) fn(DT_N_S_soc_S_pwm_40005800) fn(DT_N_S_soc_S_adc_40007c00) fn(DT_N_S_soc_S_kbd_40009c00) fn(DT_N_S_soc_S_kbd_40009c00_S_kscan_input) fn(DT_N_S_soc_S_peci_40006400) fn(DT_N_S_soc_S_spi_40070000) fn(DT_N_S_soc_S_tach_40006000) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_power_states) fn(DT_N_S_cpus_S_power_states_S_idle) fn(DT_N_S_cpus_S_power_states_S_suspend_to_ram) fn(DT_N_S_flash_e0000) fn(DT_N_S_memory_118000) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2)
#define DT_FOREACH_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_ecs_4000fc00, __VA_ARGS__) fn(DT_N_S_soc_S_pcr_40080100, __VA_ARGS__) fn(DT_N_S_soc_S_ecia_4000e000, __VA_ARGS__) fn(DT_N_S_soc_S_ecia_4000e000_S_girq23_12c, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40007400, __VA_ARGS__) fn(DT_N_S_soc_S_bb_ram_4000a800, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40000400, __VA_ARGS__) fn(DT_N_S_soc_S_uart_400f2400, __VA_ARGS__) fn(DT_N_S_soc_S_uart_400f2800, __VA_ARGS__) fn(DT_N_S_soc_S_uart_400f2c00, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40004000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40004400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40004400_S_pca9555_26, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40004800, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40004c00, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005000, __VA_ARGS__) fn(DT_N_S_soc_S_espi_400f3400, __VA_ARGS__) fn(DT_N_S_soc_S_espi_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40000c00, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40000c20, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40000c80, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40000ca0, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40009800, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40009820, __VA_ARGS__) fn(DT_N_S_soc_S_ps2_40009000, __VA_ARGS__) fn(DT_N_S_soc_S_ps2_40009040, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40005800, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40005810, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40005820, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40005830, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40005840, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40005850, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40005860, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40005870, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40005880, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40007c00, __VA_ARGS__) fn(DT_N_S_soc_S_kbd_40009c00, __VA_ARGS__) fn(DT_N_S_soc_S_kbd_40009c00_S_kscan_input, __VA_ARGS__) fn(DT_N_S_soc_S_peci_40006400, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40070000, __VA_ARGS__) fn(DT_N_S_soc_S_tach_40006000, __VA_ARGS__) fn(DT_N_S_soc_S_tach_40006010, __VA_ARGS__) fn(DT_N_S_soc_S_tach_40006020, __VA_ARGS__) fn(DT_N_S_soc_S_tach_40006030, __VA_ARGS__) fn(DT_N_S_soc_S_bbled_4000b800, __VA_ARGS__) fn(DT_N_S_soc_S_bbled_4000b900, __VA_ARGS__) fn(DT_N_S_soc_S_bbled_4000ba00, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_idle, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_suspend_to_ram, __VA_ARGS__) fn(DT_N_S_flash_e0000, __VA_ARGS__) fn(DT_N_S_memory_118000, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__)
#define DT_FOREACH_OKAY_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_ecs_4000fc00, __VA_ARGS__) fn(DT_N_S_soc_S_pcr_40080100, __VA_ARGS__) fn(DT_N_S_soc_S_ecia_4000e000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc04_gpio204, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc05_gpio205, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc06_gpio206, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_adc07_gpio207, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref2_adc_gpio067, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_reset_n_gpio061, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_alert_n_gpio063, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_clk_gpio065, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_cs_n_gpio066, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io0_gpio070, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io1_gpio071, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io2_gpio072, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_espi_io3_gpio073, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_scl_gpio004, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c00_sda_gpio003, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_scl_gpio131, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c01_sda_gpio130, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_scl_gpio013, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_i2c07_sda_gpio012, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ict0_tach0_gpio050, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_cs0_n_gpio055, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_clk_gpio056, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io0_gpio223, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_shd_io1_gpio224, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_tx_gpio146, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_uart2_rx_gpio145, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_peci_dat_gpio042_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_vref_vtt_gpio044_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk0b_gpio007_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat0b_gpio010_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_clk1b_gpio154_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ps2_dat1b_gpio155_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_gpio053_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm0_alt_gpio241_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_gpio054_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm1_alt_gpio254_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_gpio055_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm2_alt_gpio045_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_gpio056_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm3_alt_gpio047_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm4_gpio011_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm5_gpio002_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_gpio014_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm6_alt_gpio063_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_gpio015_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm7_alt_gpio061_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_gpio035_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pwm8_alt_gpio175_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi0_gpio017_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi1_gpio020_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi2_gpio021_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi3_gpio026_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi4_gpio027_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi5_gpio030_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi6_gpio031_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_ksi7_gpio032_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso00_gpio040_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso01_gpio045_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso02_gpio046_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso03_gpio047_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso04_gpio107_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso05_gpio112_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso06_gpio113_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso07_gpio120_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso08_gpio121_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso09_gpio122_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso10_gpio123_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso11_gpio124_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso12_gpio125_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso13_gpio126_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso14_gpio152_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso15_gpio151_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso16_gpio132_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_kso17_gpio140_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_cs_n_gpio116_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_clk_gpio117_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_mosi_gpio074_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_pspi_miso_gpio075_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_led0_gpio156_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_led1_gpio157_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_led2_gpio153_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40007400, __VA_ARGS__) fn(DT_N_S_soc_S_bb_ram_4000a800, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40000400, __VA_ARGS__) fn(DT_N_S_soc_S_uart_400f2c00, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40004000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40004400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40004400_S_pca9555_26, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40004800, __VA_ARGS__) fn(DT_N_S_soc_S_espi_400f3400, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40000ca0, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40009800, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40009820, __VA_ARGS__) fn(DT_N_S_soc_S_ps2_40009000, __VA_ARGS__) fn(DT_N_S_soc_S_ps2_40009040, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40005800, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40007c00, __VA_ARGS__) fn(DT_N_S_soc_S_kbd_40009c00, __VA_ARGS__) fn(DT_N_S_soc_S_kbd_40009c00_S_kscan_input, __VA_ARGS__) fn(DT_N_S_soc_S_peci_40006400, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40070000, __VA_ARGS__) fn(DT_N_S_soc_S_tach_40006000, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_idle, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_suspend_to_ram, __VA_ARGS__) fn(DT_N_S_flash_e0000, __VA_ARGS__) fn(DT_N_S_memory_118000, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__)

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_microchip_mec15xxevb_assy6853 1
#define DT_COMPAT_HAS_OKAY_microchip_mec1501hsz 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v7m_nvic 1
#define DT_COMPAT_HAS_OKAY_microchip_xec_ecs 1
#define DT_COMPAT_HAS_OKAY_microchip_xec_pcr 1
#define DT_COMPAT_HAS_OKAY_microchip_xec_pinctrl 1
#define DT_COMPAT_HAS_OKAY_microchip_xec_gpio 1
#define DT_COMPAT_HAS_OKAY_microchip_xec_rtos_timer 1
#define DT_COMPAT_HAS_OKAY_microchip_xec_bbram 1
#define DT_COMPAT_HAS_OKAY_microchip_xec_watchdog 1
#define DT_COMPAT_HAS_OKAY_microchip_xec_uart 1
#define DT_COMPAT_HAS_OKAY_microchip_xec_i2c 1
#define DT_COMPAT_HAS_OKAY_nxp_pca95xx 1
#define DT_COMPAT_HAS_OKAY_microchip_xec_espi 1
#define DT_COMPAT_HAS_OKAY_microchip_xec_timer 1
#define DT_COMPAT_HAS_OKAY_microchip_xec_ps2 1
#define DT_COMPAT_HAS_OKAY_microchip_xec_pwm 1
#define DT_COMPAT_HAS_OKAY_microchip_xec_adc 1
#define DT_COMPAT_HAS_OKAY_microchip_xec_kbd 1
#define DT_COMPAT_HAS_OKAY_zephyr_kscan_input 1
#define DT_COMPAT_HAS_OKAY_microchip_xec_peci 1
#define DT_COMPAT_HAS_OKAY_microchip_xec_qmspi 1
#define DT_COMPAT_HAS_OKAY_microchip_xec_tach 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m4 1
#define DT_COMPAT_HAS_OKAY_zephyr_power_state 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_microchip_mec15xxevb_assy6853_NUM_OKAY 1
#define DT_N_INST_microchip_mec1501hsz_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v7m_nvic_NUM_OKAY 1
#define DT_N_INST_microchip_xec_ecs_NUM_OKAY 1
#define DT_N_INST_microchip_xec_pcr_NUM_OKAY 1
#define DT_N_INST_microchip_xec_pinctrl_NUM_OKAY 1
#define DT_N_INST_microchip_xec_gpio_NUM_OKAY 6
#define DT_N_INST_microchip_xec_rtos_timer_NUM_OKAY 1
#define DT_N_INST_microchip_xec_bbram_NUM_OKAY 1
#define DT_N_INST_microchip_xec_watchdog_NUM_OKAY 1
#define DT_N_INST_microchip_xec_uart_NUM_OKAY 1
#define DT_N_INST_microchip_xec_i2c_NUM_OKAY 3
#define DT_N_INST_nxp_pca95xx_NUM_OKAY 1
#define DT_N_INST_microchip_xec_espi_NUM_OKAY 1
#define DT_N_INST_microchip_xec_timer_NUM_OKAY 1
#define DT_N_INST_microchip_xec_ps2_NUM_OKAY 2
#define DT_N_INST_microchip_xec_pwm_NUM_OKAY 1
#define DT_N_INST_microchip_xec_adc_NUM_OKAY 1
#define DT_N_INST_microchip_xec_kbd_NUM_OKAY 1
#define DT_N_INST_zephyr_kscan_input_NUM_OKAY 1
#define DT_N_INST_microchip_xec_peci_NUM_OKAY 1
#define DT_N_INST_microchip_xec_qmspi_NUM_OKAY 1
#define DT_N_INST_microchip_xec_tach_NUM_OKAY 1
#define DT_N_INST_arm_cortex_m4_NUM_OKAY 1
#define DT_N_INST_zephyr_power_state_NUM_OKAY 2
#define DT_N_INST_mmio_sram_NUM_OKAY 1
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_FOREACH_OKAY_microchip_mec15xxevb_assy6853(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_microchip_mec15xxevb_assy6853(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_microchip_mec15xxevb_assy6853(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_microchip_mec15xxevb_assy6853(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_microchip_mec1501hsz(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_microchip_mec1501hsz(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_microchip_mec1501hsz(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_microchip_mec1501hsz(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_v7m_nvic(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100)
#define DT_FOREACH_OKAY_VARGS_arm_v7m_nvic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_v7m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_v7m_nvic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_microchip_xec_ecs(fn) fn(DT_N_S_soc_S_ecs_4000fc00)
#define DT_FOREACH_OKAY_VARGS_microchip_xec_ecs(fn, ...) fn(DT_N_S_soc_S_ecs_4000fc00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_microchip_xec_ecs(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_microchip_xec_ecs(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_microchip_xec_pcr(fn) fn(DT_N_S_soc_S_pcr_40080100)
#define DT_FOREACH_OKAY_VARGS_microchip_xec_pcr(fn, ...) fn(DT_N_S_soc_S_pcr_40080100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_microchip_xec_pcr(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_microchip_xec_pcr(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_microchip_xec_pinctrl(fn) fn(DT_N_S_soc_S_pin_controller_40081000)
#define DT_FOREACH_OKAY_VARGS_microchip_xec_pinctrl(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_microchip_xec_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_microchip_xec_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_microchip_xec_gpio(fn) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280)
#define DT_FOREACH_OKAY_VARGS_microchip_xec_gpio(fn, ...) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081080, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081100, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081180, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081200, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40081000_S_gpio_40081280, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_microchip_xec_gpio(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5)
#define DT_FOREACH_OKAY_INST_VARGS_microchip_xec_gpio(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__)
#define DT_FOREACH_OKAY_microchip_xec_rtos_timer(fn) fn(DT_N_S_soc_S_timer_40007400)
#define DT_FOREACH_OKAY_VARGS_microchip_xec_rtos_timer(fn, ...) fn(DT_N_S_soc_S_timer_40007400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_microchip_xec_rtos_timer(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_microchip_xec_rtos_timer(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_microchip_xec_bbram(fn) fn(DT_N_S_soc_S_bb_ram_4000a800)
#define DT_FOREACH_OKAY_VARGS_microchip_xec_bbram(fn, ...) fn(DT_N_S_soc_S_bb_ram_4000a800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_microchip_xec_bbram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_microchip_xec_bbram(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_microchip_xec_watchdog(fn) fn(DT_N_S_soc_S_watchdog_40000400)
#define DT_FOREACH_OKAY_VARGS_microchip_xec_watchdog(fn, ...) fn(DT_N_S_soc_S_watchdog_40000400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_microchip_xec_watchdog(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_microchip_xec_watchdog(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_microchip_xec_uart(fn) fn(DT_N_S_soc_S_uart_400f2c00)
#define DT_FOREACH_OKAY_VARGS_microchip_xec_uart(fn, ...) fn(DT_N_S_soc_S_uart_400f2c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_microchip_xec_uart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_microchip_xec_uart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_microchip_xec_i2c(fn) fn(DT_N_S_soc_S_i2c_40004000) fn(DT_N_S_soc_S_i2c_40004400) fn(DT_N_S_soc_S_i2c_40004800)
#define DT_FOREACH_OKAY_VARGS_microchip_xec_i2c(fn, ...) fn(DT_N_S_soc_S_i2c_40004000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40004400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40004800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_microchip_xec_i2c(fn) fn(0) fn(1) fn(2)
#define DT_FOREACH_OKAY_INST_VARGS_microchip_xec_i2c(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_pca95xx(fn) fn(DT_N_S_soc_S_i2c_40004400_S_pca9555_26)
#define DT_FOREACH_OKAY_VARGS_nxp_pca95xx(fn, ...) fn(DT_N_S_soc_S_i2c_40004400_S_pca9555_26, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_pca95xx(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_pca95xx(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_microchip_xec_espi(fn) fn(DT_N_S_soc_S_espi_400f3400)
#define DT_FOREACH_OKAY_VARGS_microchip_xec_espi(fn, ...) fn(DT_N_S_soc_S_espi_400f3400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_microchip_xec_espi(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_microchip_xec_espi(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_microchip_xec_timer(fn) fn(DT_N_S_soc_S_timer_40000ca0)
#define DT_FOREACH_OKAY_VARGS_microchip_xec_timer(fn, ...) fn(DT_N_S_soc_S_timer_40000ca0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_microchip_xec_timer(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_microchip_xec_timer(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_microchip_xec_ps2(fn) fn(DT_N_S_soc_S_ps2_40009000) fn(DT_N_S_soc_S_ps2_40009040)
#define DT_FOREACH_OKAY_VARGS_microchip_xec_ps2(fn, ...) fn(DT_N_S_soc_S_ps2_40009000, __VA_ARGS__) fn(DT_N_S_soc_S_ps2_40009040, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_microchip_xec_ps2(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_microchip_xec_ps2(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_microchip_xec_pwm(fn) fn(DT_N_S_soc_S_pwm_40005800)
#define DT_FOREACH_OKAY_VARGS_microchip_xec_pwm(fn, ...) fn(DT_N_S_soc_S_pwm_40005800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_microchip_xec_pwm(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_microchip_xec_pwm(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_microchip_xec_adc(fn) fn(DT_N_S_soc_S_adc_40007c00)
#define DT_FOREACH_OKAY_VARGS_microchip_xec_adc(fn, ...) fn(DT_N_S_soc_S_adc_40007c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_microchip_xec_adc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_microchip_xec_adc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_microchip_xec_kbd(fn) fn(DT_N_S_soc_S_kbd_40009c00)
#define DT_FOREACH_OKAY_VARGS_microchip_xec_kbd(fn, ...) fn(DT_N_S_soc_S_kbd_40009c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_microchip_xec_kbd(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_microchip_xec_kbd(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_kscan_input(fn) fn(DT_N_S_soc_S_kbd_40009c00_S_kscan_input)
#define DT_FOREACH_OKAY_VARGS_zephyr_kscan_input(fn, ...) fn(DT_N_S_soc_S_kbd_40009c00_S_kscan_input, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_kscan_input(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_kscan_input(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_microchip_xec_peci(fn) fn(DT_N_S_soc_S_peci_40006400)
#define DT_FOREACH_OKAY_VARGS_microchip_xec_peci(fn, ...) fn(DT_N_S_soc_S_peci_40006400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_microchip_xec_peci(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_microchip_xec_peci(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_microchip_xec_qmspi(fn) fn(DT_N_S_soc_S_spi_40070000)
#define DT_FOREACH_OKAY_VARGS_microchip_xec_qmspi(fn, ...) fn(DT_N_S_soc_S_spi_40070000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_microchip_xec_qmspi(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_microchip_xec_qmspi(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_microchip_xec_tach(fn) fn(DT_N_S_soc_S_tach_40006000)
#define DT_FOREACH_OKAY_VARGS_microchip_xec_tach(fn, ...) fn(DT_N_S_soc_S_tach_40006000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_microchip_xec_tach(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_microchip_xec_tach(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_m4(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m4(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m4(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m4(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_power_state(fn) fn(DT_N_S_cpus_S_power_states_S_idle) fn(DT_N_S_cpus_S_power_states_S_suspend_to_ram)
#define DT_FOREACH_OKAY_VARGS_zephyr_power_state(fn, ...) fn(DT_N_S_cpus_S_power_states_S_idle, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_suspend_to_ram, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_power_state(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_power_state(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_memory_118000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_memory_118000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_leds)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
#define DT_COMPAT_nxp_pca95xx_BUS_i2c 1
